start	end	text
0	6000	哈囉,大家好,歡迎大家來到今天的Terra Talk
6000	12000	我們今天很榮幸能請到林唯凱,林唯凱本身是我非常多年的好朋友
12000	17000	那唯凱呢,現在在Cornell念博士班三年級
17000	22000	是念Computer Science,唯凱的研究呢主要專注在密碼學
22000	26000	他最近主要在的Focus是Oblivious演算法
26000	33000	那讓演算法的資料存取模式不會洩漏資料的內容
33000	38000	他之前在台大念大學部的時候是念化學系的
38000	44000	後來呢,在碩士班跑去念了電機系,電機所
44000	49000	但是他又是念計算機組,所以現在的PhD是在念Computer Science
49000	53000	那在開始念PhD之前呢
53000	57000	他也曾經在台灣的晨星半導體擔任過軟體工程師
57000	60000	然後呢,也在中研院擔任過研究助理
60000	64000	那唯凱今天要跟我們講的是這個
64000	69000	在局理論的概念,但是他今天主要是要跟我們講說
69000	75000	講一個Multiparty Cointosing的公平的一個新的定義
75000	77000	那我們就鼓掌
77000	80000	By the way,大家鼓掌的時候要記得把麥克風打開喔
80000	83000	那我們就鼓掌歡迎唯凱給我們帶來今天的演講
88000	92000	謝謝彥永這麼精彩的介紹
92000	96000	然後這個標題很複雜
96000	102000	但是我假設大家多多少少都有聽過賽局理論
102000	106000	然後我今天講的題目是
106000	110000	這個大家可能不見得有聽過的
110000	112000	Concept叫做Cointos
112000	117000	然後我會講Cointos跟賽局理論的關係
117000	121000	然後這個Work是跟鍾凱敏
121000	123000	他在中央研究院
123000	127000	然後郭岳、我、Raphael、Elaine都在Cornell
127000	129000	或者是Cornell Tech
129000	134000	Cornell Tech是在NYC的一個Campus
135000	139000	跟Cornell跟以色列的Techneon合作
139000	142000	搞的一個新的Campus在NYC
142000	148000	那我們就來講今天的這個Cointos的這個Topic
148000	157000	那這個研究的Motivation是非常Realistic的
157000	160000	雖然我一般是做Theoretical的研究
160000	163000	但是我們的Motivation都是非常Realistic
163000	165000	我們的這個Motivation是什麼呢
165000	170000	就是川普跟習他們決定要開個川習會
170000	173000	然後要在哪裡開呢
173000	175000	川普想要在DC開
175000	177000	習想要在北京開
177000	182000	所以這兩個人就僵持不下的話呢
182000	183000	這怎麼辦呢
183000	186000	就最簡單的方法丟個銅板決定
186000	188000	然後但是這兩個人還沒有見面
188000	192000	要怎麼丟銅板這件事情就
192000	194000	就是我們今天要討論的問題
194000	198000	這兩個人沒有見面怎麼丟銅板
198000	201000	先不講見面之後銅板會不會公正之類的
201000	204000	那沒有見面這個我在這邊丟了銅板
204000	206000	川普在這邊丟了銅板
206000	209000	那習這個沒有看到也不信
209000	211000	所以這怎麼辦呢
211000	215000	他們就說那假設我有某一個方法可以丟銅板
215000	217000	這個可以遠端丟銅板的話
217000	219000	那反正銅板丟出來
219000	221000	就在DC這個士林就在北京
221000	224000	然後如果這個遠距離丟銅板是公正的話
224000	226000	那大家就很開心
226000	228000	就一半一半的機會嘛
228000	230000	然後賽局理論會告訴你說
230000	232000	這有一個Payoff
232000	234000	這銅板開出來是什麼
234000	239000	然後哪一邊有這個多少的這個Payoff
239000	240000	或者是Utility
240000	243000	但是這個我們可以先不要管它
243000	247000	那這個歷史上
247000	251000	這美蘇之間有個熱線電話
251000	253000	那川崎之間搞不好也有個熱線電話
253000	256000	那沒有見面他們可以通電話
256000	259000	哦對這中間有問題
259000	261000	大家可以隨時打斷我
261000	266000	我希望今天講的是這個大家都聽得懂
266000	268000	然後如果覺得聽不懂
268000	269000	這不要害怕
269000	271000	這盡量問這樣子
272000	276000	然後這個熱線電話的目的就是
276000	278000	就是你講一句我講一句
278000	281000	然後我講的對方都可以聽得到
281000	283000	然後就沒有其他的
283000	288000	所以熱線電話並不能直接的幫你丟銅板
288000	290000	沒有這麼好的事情
290000	292000	但是熱線電話可以做什麼呢
292000	296000	這熱線電話可以在兩邊這個溝通嘛
296000	298000	然後溝通完之後
298000	302000	這3號你也許就有一個這個output
302000	304000	然後這個B等於0或B等於1
304000	306000	就是銅板正面反面這樣子
306000	308000	3號也許可以做到這樣
308000	311000	然後就可以幫你製造一個隨機變數
311000	313000	它的取值是0或1
313000	315000	然後機率各是0.5、0.5
315000	319000	我想要的就是得到一個隨機變數這樣子
319000	323000	就是數學定義的隨機變數
324000	330000	那假設大家對數學定義的隨機變數都很熟的話
330000	334000	這個或者是上課聽過什麼的
334000	339000	那我這邊有一個方法可以讓這兩邊丟銅板
339000	341000	那怎麼丟呢
341000	343000	這個川普先丟一個銅板
343000	345000	然後這個銅板開出來是1
345000	349000	然後川普就透過電話跟習說
349000	351000	我這邊銅板是1啊
351000	354000	然後習這邊他就說
354000	357000	好我收到了你那邊銅板是1
357000	361000	然後這兩邊就同意這個銅板是1
361000	363000	這個方法
363000	367000	如果川普這邊丟的是公正的銅板的話
367000	370000	那這個方法也許會work
370000	374000	但是習這個顯然不高興
374000	375000	如果川普是壞人
375000	377000	然後他根本就沒丟這個銅板
377000	379000	他隨便亂喊
379000	383000	那這個對習來說就不是一件好事
383000	387000	他不會同意這個銅板的結果是這樣
387000	393000	那所以更不要說這個川普一開始這個搞了什麼鬼
393000	394000	讓他不公正什麼的
394000	399000	所以就算這邊搞了一個很複雜的這個什麼樂透機
399000	401000	然後錄影錄下來
401000	403000	透過熱線電話傳給習看
403000	406000	然後這個熱線機是不是公正的
406000	408000	習也不會相信
408000	411000	所以這個方法
411000	414000	如果川普是沒有作弊的話
414000	415000	那也許是可以的
415000	418000	但這兩邊互相都不信
418000	420000	只是密碼學常常碰到的問題
420000	422000	兩邊互相不相信
422000	425000	那這個怎麼辦
425000	428000	然後這個密碼學很久以前
428000	433000	這個有一個這個就發展出來這樣的技術
433000	435000	叫做commitment
435000	440000	那就說那川普就先把某一個數字x
440000	443000	用這個sharp算出來以後
443000	445000	算出來一串數字
445000	447000	然後告訴習
447000	449000	然後這個東西就叫做commit
449000	451000	然後習就說好
451000	452000	那你猜了x
452000	453000	我猜一個y
453000	454000	然後1
454000	456000	然後川普再打開說
456000	458000	欸我的x底下是1
458000	460000	然後後面跟一堆亂數
461000	464000	為了要隱藏一開始的1
464000	467000	然後這兩邊把x跟y
467000	468000	xor一下
468000	472000	就是他們的同伴的這個b的結果
472000	477000	然後這個密碼學就把這兩件事情簡化成
477000	479000	叫做commit and open
479000	484000	就是把他寫下一個x
484000	485000	然後封進信封袋裡面
485000	486000	丟給習
486000	489000	然後習收到以後
489000	491000	他再把那個信封袋打開
491000	494000	然後信封袋的目的就是為了讓
494000	499000	寫下這個信封袋的人不能改
499000	503000	然後又讓收到信封袋的人
503000	504000	暫時看不到
504000	506000	就叫做commit跟open
506000	509000	就是字過去的時候
509000	511000	我有個問題
511000	514000	就是這個熱線電話有規定說
514000	516000	就是一定要你一句我一句嗎
516000	518000	不能說同時講
518000	520000	如果同時講的話就大家說123
520000	523000	然後我說1或0
523000	525000	然後大家就xor就好了
525000	526000	不是結束了嗎
526000	528000	對這個問題非常的好
528000	530000	但是因為大家都不相信
530000	532000	然後他們都有可能會慢出
532000	534000	所以這個方法
534000	539000	所以就是這個熱線電話的規定是
539000	541000	就是只能你一句我一句
541000	544000	不能說不能同時講這樣
544000	546000	應該說這個熱線電話
546000	547000	我沒有假設
547000	549000	他一定要你一句我一句
549000	553000	但是川普跟習講好說
553000	554000	我們同時講
554000	558000	然後那如果有一個人慢出
558000	560000	你要怎麼辦呢
560000	562000	就重來一次嗎
562000	563000	對啊對啊
563000	565000	那這樣子可能會沒完沒了
565000	567000	OK好
567000	570000	對然後而且就是電話
570000	572000	我們一般想像成網路的話
572000	574000	這個甚至也沒有辦法判斷
574000	576000	誰慢出
576000	579000	因為這個傳輸訊息的delay之類的
579000	581000	也沒有辦法很確定誰慢出
581000	583000	但是你一句我一句的話
583000	587000	就比較能夠確定先後順序
587000	588000	OK了解
588000	591000	對就是所謂同時這件事情
591000	594000	在網路上這個電話上
594000	599000	是很難去判斷能不能做到的
599000	601000	所以這是一個很好的問題
601000	604000	就是這邊我們假設
604000	607000	所有的protocol都是你一句我一句
607000	612000	然後順序都是
612000	616000	然後這件事情
616000	617000	這個commit and open
617000	620000	假設你有一個很好的commit
620000	621000	就是commit的時候
621000	623000	另外一邊不能打開
623000	626000	然後發送的那一邊也不能篡改的話
626000	628000	那這件事情
628000	629000	這個coin toss這件事情
629000	631000	就是可以做到公正的
631000	635000	因為事先他commit到x的時候
635000	637000	他不知道y會出什麼
637000	639000	然後c出y的時候
639000	643000	他也不知道x是什麼東西
643000	648000	所以這個結果就會是公正的
648000	650000	然後都可以相信
650000	657000	對方沒有辦法操控這個結果
657000	663000	然後這個所謂我們剛剛一直講公正
663000	666000	到底是想要拿到什麼樣的公正呢
666000	669000	這個數學的正式的定義來說的話
669000	672000	就是這個期望值是0.5
672000	674000	同伴的結果就只有0跟1
674000	676000	然後機率要是0.5
676000	679000	然後所以他的期望值整個就是
679000	682000	0.5乘以0加0.5乘以1等於0.5
682000	687000	我就是想要期望值exactly 0.5
687000	692000	然後當然你仔細去看剛剛這件事情
692000	694000	其實不見得剛好是0.5
694000	696000	這個我待會會說到
696000	698000	然後所以他通常會有加件一個
698000	702000	非常小的fraction negligible
702000	703000	但是我們就先不管他
703000	706000	就說我就是要0.5
706000	710000	然後這件事情
710000	715000	很不幸的在之前的結果
715000	717000	很久以前大概30年前
717000	719000	已經被證明做不到
719000	720000	怎麼樣做不到呢
720000	726000	就是這個adversary
726000	732000	就是川普或習可以提早結束
732000	735000	就是這個protocol還沒有套完
735000	737000	他就說我不玩了這樣子
737000	743000	然後以及這個adversary是
743000	745000	只有有限的計算能力的時候
745000	750000	他就可以這個protocol
750000	752000	這是對protocol來說
752000	754000	比較容易做到的事情
754000	759000	我假設川普跟習的計算能力
759000	760000	都是有限的
760000	765000	都是polynomial time的演算法
765000	767000	這個polynomial time
767000	768000	大家可能比較不熟
768000	775000	但是就是可以在很短的時間內
775000	779000	做出決定的演算法
779000	785000	然後任何的
785000	787000	對於任何的這樣子的protocol
787000	789000	在這個cleave的結果裡面
789000	792000	他都可以設計出一個attacker
792000	795000	來破解任何的protocol
795000	798000	所以說這個要做到
798000	800000	期望值是exactly0.5
800000	802000	沒有任何protocol可以做到
802000	804000	簡單來說這個結果就是
804000	807000	這麼強的impossibility
807000	809000	就是說任何的protocol
809000	811000	都做不到這件事情
811000	813000	那這樣講還是很抽象
813000	815000	我們來看一下這個例子
815000	817000	就是剛剛這個commit
817000	819000	andopen這個例子
819000	821000	那在這邊commit
821000	825000	我們是用現在新的這個hash function
825000	826000	也不算新了
826000	827000	它大概十幾年
827000	829000	然後但so far
829000	831000	大家還相信shark256
831000	833000	是很難破解的
833000	835000	像是比如說這個bitcoin之類的
835000	838000	還是在用
838000	840000	這個怎麼破解呢
840000	846000	這個假如習這邊的計算能力
846000	848000	是無限的
848000	851000	那他可以很容易的解除
851000	855000	shark256x等於某個數字的這個x
855000	857000	他就只要暴力
857000	859000	把所有的x都嘗試過
859000	861000	然後他就可以解除x
861000	863000	那這件事情
863000	864000	習知道x之後
864000	866000	他就可以選相對的y
866000	868000	讓結果是他喜歡的
868000	870000	比如說他結果喜歡0
870000	872000	他這個0代表北京
872000	875000	然後所以他看到x解出來是1
875000	876000	他就選了一個
876000	878000	讓結果是北京的y
878000	882000	然後則川普也不知道傻傻的被騙了
882000	884000	只能傻傻的開出1
884000	888000	然後結果就造了喜的意思
888000	890000	這個是在
890000	892000	假如
892000	893000	假如這個
893000	895000	這個其中有一邊是
895000	898000	是有無窮的計算能力的時候
898000	903000	可能會發生的事情
903000	904000	然後
904000	908000	但是上一頁講的事情是更強的
908000	910000	就是即使習這邊
910000	912000	只有有限的計算能力
912000	914000	他仍然可以攻擊
914000	916000	或者川普只有有限的計算能力
916000	918000	他仍然可以攻擊
918000	921000	然後這個攻擊的方法
921000	923000	可以讓
923000	925000	可以有多有效呢
925000	930000	他可以讓期望值偏差到
930000	933000	任何的
933000	936000	應該說偏差到任何的
936000	939000	這個
939000	942000	以這邊是三個回合
942000	944000	偏差到三分之一
944000	947000	所以這個三分之一左右
947000	949000	這個數量級大概是三分之一左右
949000	952000	然後這是非常強大的攻擊
952000	955000	就是假使這個
955000	958000	我這邊的例子是說
958000	960000	這邊的攻擊者
960000	961000	他有無窮的計算能力
961000	962000	然後
962000	964000	他這邊基本上可以讓
964000	966000	讓他的期望值偏差到
966000	969000	0.5就是他想要出什麼就出什麼
969000	971000	百分之百破解
971000	974000	但是如果他只有有限的
974000	975000	計算能力的話
975000	977000	那沒有辦法
977000	979000	讓期望值偏差這麼多
979000	982000	但是可以偏差到一定的數量
982000	984000	就是三分之一
984000	985000	隨便給的一個數字
985000	986000	但是
986000	987000	以這個protocol的話
987000	989000	就是三分之一左右
989000	991000	那那個期望值差到三分之一
991000	993000	從0.5到
993000	995000	0.5加三分之一是0.8
995000	996000	這個差很多了
996000	999000	所以這個
999000	1001000	這個cleave的這個結果是很強
1001000	1003000	就是說你做不到
1003000	1005000	公正的同版這件事情
1005000	1007000	因為不管什麼protocol
1007000	1009000	他都可以製造一個攻擊者
1009000	1012000	然後在有限的時間內
1012000	1014000	做出有效的攻擊
1014000	1016000	然後
1016000	1018000	這邊
1018000	1020000	這個攻擊還有另外一件事情
1020000	1022000	要講的就是
1022000	1023000	這個
1023000	1025000	提早結束會有什麼樣的
1025000	1027000	的影響呢
1027000	1029000	就是比如說像是
1029000	1032000	一開始我講這個最簡單的
1032000	1033000	protocol
1033000	1034000	川普丟一個銅板
1034000	1036000	然後習近平收到
1036000	1038000	就承認那是一個銅板
1038000	1041000	就承認那一個銅板的結果
1041000	1043000	這件事情
1044000	1046000	在有fail stop
1046000	1048000	就是他假如其中一方
1048000	1050000	可以提早結束
1050000	1052000	提早結束不玩的話
1052000	1055000	那這個也很難達到
1055000	1056000	結果的公正
1056000	1058000	比如說川普丟一個銅板
1058000	1061000	然後他看到這個銅板
1061000	1063000	不是他喜歡的東西
1063000	1065000	他就說那我就不玩了
1065000	1068000	那這個
1068000	1071000	不玩的話那習近平
1071000	1073000	這so far
1073000	1075000	我們還假設他是
1075000	1077000	誠實的跟著
1077000	1079000	這個我們一開始的遊戲規則玩
1079000	1081000	就是他收到一個
1081000	1083000	銅板的訊息
1083000	1085000	然後他要
1085000	1087000	承認那個銅板的訊息
1087000	1089000	是他們的共識
1089000	1091000	那但是這個
1091000	1092000	其中一方不玩了
1092000	1094000	另外一方的
1094000	1095000	共識是什麼
1095000	1097000	這個就
1097000	1099000	這個就很難說嘛
1099000	1101000	那
1101000	1103000	為了要有共識的話
1103000	1105000	我們通常就要定義一個
1105000	1107000	其中一方
1107000	1109000	這個不誠實不玩了
1109000	1111000	另外一方要輸出什麼
1111000	1113000	那這邊要輸出什麼呢
1113000	1115000	習近平要自己再丟一個銅板
1115000	1117000	然後是0.5 0.5的嗎
1117000	1119000	或者是他要就固定
1119000	1121000	輸出他喜歡的
1121000	1123000	結果0或1呢
1123000	1125000	這很難說嘛
1125000	1127000	那這個川普就可以
1127000	1129000	看他這個誠實的
1129000	1131000	在幹什麼然後決定
1131000	1133000	他在這邊怎麼
1133000	1135000	什麼時候結束什麼時候不結束
1135000	1137000	然後這個
1137000	1139000	整個輸出的
1139000	1141000	期望值就完全都會被
1141000	1143000	不誠實的那一方
1143000	1145000	控制然後
1145000	1147000	就
1147000	1149000	就沒有這所謂的公平性
1149000	1151000	或者是
1151000	1153000	安全性
1153000	1155000	這個銅板
1155000	1157000	輸出的結果
1157000	1159000	他的公平就是我要要求的
1159000	1161000	安全
1161000	1163000	所以
1163000	1165000	這邊的重點就是
1165000	1167000	這個
1167000	1169000	computationally bounded
1169000	1171000	就是攻擊者的
1171000	1173000	計算能力是有限的而且他
1173000	1175000	可以提早結束
1175000	1177000	這兩件事情
1177000	1179000	就是其中少了一個的話
1179000	1181000	我們都知道
1181000	1183000	我們都知道
1183000	1185000	他可以做到這個安全
1185000	1187000	假如我假設
1187000	1189000	攻擊者永遠都不會提早
1189000	1191000	結束的話
1191000	1193000	那這個銅板是開的出來
1193000	1195000	是玩的下去的而且可以做到
1195000	1197000	0.5但是
1197000	1199000	這兩個條件
1199000	1201000	這兩個computationally bounded
1201000	1203000	跟fail stop
1203000	1205000	這兩個條件同時存在的時候
1205000	1207000	我們就做不到
1207000	1209000	然後這個做不到的證明
1209000	1211000	就是真的構造一個
1211000	1213000	攻擊者
1213000	1215000	然後針對
1215000	1217000	這個任何的一個
1217000	1219000	protocol去攻擊
1221000	1223000	那
1223000	1225000	但是
1225000	1227000	大家剛剛看前面這一頁
1227000	1229000	可能就會
1229000	1231000	覺得很奇怪這個
1231000	1233000	假如川普提早不晚
1233000	1235000	那習近平當然可以
1235000	1237000	就說我喜歡在
1237000	1239000	北京那我就在北京這樣子
1239000	1241000	那這個也是
1241000	1243000	另外一種定義的
1245000	1247000	重點就是
1261000	1263000	哈囉
1265000	1267000	是我這邊斷了還是
1269000	1271000	我這邊聽不到
1271000	1273000	ok
1273000	1275000	所以
1275000	1277000	現在還有大家聽得到我講話嗎
1277000	1279000	因為我覺得維凱
1279000	1281000	我聽得到你講話但是
1281000	1283000	speaker聽不到
1283000	1285000	ok
1295000	1297000	所以維凱斷了
1299000	1301000	好我來跟他聯絡一下
1329000	1331000	呃
1341000	1343000	大家可以聽得到嗎
1347000	1349000	我聽得到
1349000	1351000	我可以
1351000	1353000	我的網路好像跳了一下
1353000	1355000	好
1355000	1357000	我剛剛講到
1357000	1359000	這個
1359000	1361000	commit and open
1361000	1363000	這個protocol可以做到
1363000	1365000	保護
1365000	1367000	這個好人那一邊
1367000	1369000	然後
1369000	1371000	這個protocol
1371000	1373000	為什麼可以保護好人呢
1373000	1375000	呃
1375000	1377000	如果其中一邊
1377000	1379000	這個提早不晚
1379000	1381000	那另外一邊就
1381000	1383000	很高興的說
1383000	1385000	他這個另外一邊是壞人
1385000	1387000	所以我可以
1387000	1389000	為了保護我自己的利益
1389000	1391000	我為了保護好人的利益
1391000	1393000	所以我就出
1393000	1395000	不管怎麼樣我好人喜歡的
1395000	1397000	結果
1397000	1399000	因為另外一邊
1399000	1401000	提早不晚
1401000	1403000	然後
1403000	1405000	呃
1405000	1407000	這只是
1407000	1409000	舉其中一邊為例子
1409000	1411000	當然你也可以把另外一邊
1411000	1413000	另外一邊提早不晚
1413000	1415000	然後這個川普
1415000	1417000	就會選他喜歡的結果
1417000	1419000	這個也是另外一種case
1419000	1421000	總之這個
1421000	1423000	commit and open
1423000	1425000	這件事情是
1425000	1427000	呃
1427000	1429000	是可以保證
1429000	1431000	做到
1431000	1433000	前面這個定義就是
1433000	1435000	呃
1435000	1437000	就算即使
1437000	1439000	有一邊是在攻擊
1439000	1441000	然後另外一邊的期望值
1441000	1443000	仍然是超過0.5
1443000	1445000	這個pay off仍然是超過0.5
1445000	1447000	因為
1447000	1449000	他基本的這個想法
1449000	1451000	其實很簡單就是
1451000	1453000	呃其中一邊不晚
1453000	1455000	另外一邊就很高興的
1455000	1457000	選擇他不管是什麼想要的
1457000	1459000	結果他都可以選
1459000	1461000	然後所以
1461000	1463000	呃一邊不晚
1463000	1465000	另外一邊就是
1465000	1467000	好人然後好人的話
1467000	1469000	選他想要的結果
1469000	1471000	他的期望值一定不會被壞人降低
1475000	1477000	呃到這邊
1477000	1479000	都還可以嗎
1479000	1481000	如果還可以的話
1481000	1483000	那後面會稍微複雜一點
1483000	1485000	但是
1485000	1487000	這邊這個定義最重要的
1487000	1489000	要保護好人的期望值
1489000	1491000	然後而且是這個
1491000	1493000	pay off的期望值是最重要的點
1493000	1495000	就是
1495000	1497000	首先我們要定義
1497000	1499000	呃什麼是好人
1499000	1501000	然後第二個是
1501000	1503000	什麼是pay off
1503000	1505000	然後pay off就是
1505000	1507000	就是這個protocol
1507000	1509000	跑完結果以後
1509000	1511000	我看結果決定這個結果
1511000	1513000	會帶給我多少的利益
1515000	1517000	然後我就是定義就是說
1517000	1519000	我要保護好人的利益
1519000	1521000	期望值大於某個數字
1521000	1523000	那當然
1523000	1525000	這邊再多說一點的話
1525000	1527000	就是這個pay off
1527000	1529000	現在完全就是
1529000	1531000	客製化以川普跟洗
1531000	1533000	這個例子來定義的
1533000	1535000	pay off function
1535000	1537000	那呃
1537000	1539000	這個pay off function本身很簡單
1539000	1541000	但是
1541000	1543000	game theory賽局有很多
1543000	1545000	奇奇怪怪的pay off
1545000	1547000	定義出來會讓這些
1547000	1549000	結果變得奇奇怪怪
1549000	1551000	但是那些我們今天都不討論
1551000	1553000	然後甚至在
1553000	1555000	paper裡面也沒有辦法討論這麼多
1555000	1557000	因為奇奇怪怪的pay off太多了
1557000	1559000	但是這個最簡單的
1559000	1561000	pay off是
1561000	1563000	呃是這個
1563000	1565000	paper要討論的重點
1567000	1569000	好那
1569000	1571000	在接下來的話
1573000	1575000	在接下來的話這個
1575000	1577000	呃
1577000	1579000	這一個
1579000	1581000	這邊看到的這個
1581000	1583000	川普跟洗是只有
1583000	1585000	兩個player兩個party在玩的
1585000	1587000	然後這邊我們證明了
1587000	1589000	兩個party是
1589000	1591000	是可以達到
1591000	1593000	這公平的
1593000	1595000	在這個
1595000	1597000	這個利益上的公平
1597000	1599000	結果上
1599000	1601000	不見得是公平的但是利益上是公平的
1601000	1603000	這個我們就開始了
1603000	1605000	但是這個
1605000	1607000	一個很自然的問題就是
1607000	1609000	在
1609000	1611000	多加一個人的時候
1611000	1613000	那有沒有辦法
1613000	1615000	做到這個
1615000	1617000	利益上的公平呢
1617000	1619000	那所以我們就
1619000	1621000	就直接再多加一個人
1621000	1623000	然後
1623000	1625000	多加一個人我不知道第三個人是
1625000	1627000	要是金小胖還是
1627000	1629000	還是普丁
1629000	1631000	反正就是ABC吧
1631000	1633000	然後
1633000	1635000	我們都假設最簡單的就是
1635000	1637000	呃
1637000	1639000	這三個人每一個人喜歡
1639000	1641000	什麼樣的output都是
1641000	1643000	公開的然後
1643000	1645000	有誰提早
1645000	1647000	abort提早不玩也都是公開的
1647000	1649000	所以這其中一個
1649000	1651000	C提早abort不玩了
1651000	1653000	A跟B同時都遲到
1653000	1655000	他就不玩了所以我們就假設
1655000	1657000	所有的訊息
1657000	1659000	都是公開的就是這個
1659000	1661000	也許你可以想像成三幫熱線
1661000	1663000	之類的或者是
1663000	1665000	或者是
1665000	1667000	現在這個很熱門的
1667000	1669000	blockchain所有
1669000	1671000	在blockchain上面所有的訊息
1671000	1673000	都是公開的然後
1673000	1675000	所以其中一個人不玩
1675000	1677000	或者其中一個人發了什麼訊息
1677000	1679000	另外兩個人都可以同時知道
1679000	1681000	然後
1681000	1683000	這個一個其中可能的應用
1683000	1685000	可能是
1685000	1687000	在blockchain上面
1687000	1689000	玩吃餃子老虎
1689000	1691000	但這三個人怎麼定義吃餃子老虎
1691000	1693000	可能
1693000	1695000	你也可以就說
1695000	1697000	吃餃子老虎的這個
1697000	1699000	結果就是
1699000	1701000	不是0就是1然後
1701000	1703000	選1的人
1703000	1705000	如果開出來是1的話
1705000	1707000	他就贏了然後
1707000	1709000	選0的人開出來是0也贏
1709000	1711000	然後當然
1711000	1713000	這個payoff不是
1713000	1715000	03所以某一些case
1715000	1717000	這個
1717000	1719000	吃餃子老虎的
1719000	1721000	莊家可能會賠錢
1721000	1723000	然後賠錢的不是ABC
1723000	1725000	任何一個
1725000	1727000	是開賭場的那一個
1727000	1729000	那
1729000	1731000	這只是
1731000	1733000	其中一個例子
1733000	1735000	但是
1735000	1737000	但是這個
1737000	1739000	以game theory來說
1739000	1741000	這個game的變形還有很多種
1741000	1743000	但是
1743000	1745000	暫時focus
1745000	1747000	在這一個
1747000	1749000	最簡化的例子
1749000	1751000	就只是
1751000	1753000	想要問說
1753000	1755000	這件事情保護
1755000	1757000	誠實的
1757000	1759000	誠實的利益
1759000	1761000	這件事情到底是能不能做到的
1761000	1763000	然後
1763000	1765000	這個定義
1765000	1767000	我們叫他Maximin
1767000	1769000	Maximin也是從
1769000	1771000	game theory借來的一個
1771000	1773000	這個terminology
1773000	1775000	在賽局裡面
1775000	1777000	Maximin是說
1777000	1779000	呃
1779000	1781000	在這個
1781000	1783000	其他人
1783000	1785000	都
1785000	1787000	都Maximin
1787000	1789000	他的利益的情況下
1789000	1791000	我要Minimin
1791000	1793000	我的利益
1793000	1795000	就是基本上
1795000	1797000	是說
1797000	1799000	這樣講不太好
1799000	1801000	在其他人Maximin他的利益的時候
1801000	1803000	我也要Maximin
1803000	1805000	我自己的利益
1805000	1807000	那
1807000	1809000	為什麼叫做Maximin是因為
1809000	1811000	一邊Maximin然後他假設有Sum的話
1811000	1813000	另外一邊就是
1813000	1815000	Minimin反正不管就是
1815000	1817000	就是
1817000	1819000	Intuition就是這邊這一句話
1819000	1821000	我要保護好人
1821000	1823000	這個好人就是
1823000	1825000	照遊戲規則玩的人叫做好人
1825000	1827000	然後好人的利益
1827000	1829000	要大於等於0.5
1829000	1831000	的期望值
1831000	1833000	這件事情定義完了以後
1833000	1835000	我們第一個問的問題就是
1835000	1837000	他到底可不可以做得到
1837000	1839000	然後當然這邊還有其他的定義
1839000	1841000	也是有一些是
1841000	1843000	很自然的然後有一些
1843000	1845000	可能在某些
1845000	1847000	scenario看起來比較不自然
1847000	1849000	但是我們待會
1849000	1851000	會再講
1851000	1853000	現在先暫時focus
1853000	1855000	在這個保護好
1855000	1857000	人利益的定義上
1857000	1859000	我們來討論他做不做得到
1859000	1861000	呃
1861000	1863000	這邊停一下好了
1863000	1865000	這個定義清楚嗎
1865000	1867000	我的定義就是
1867000	1869000	我這個protocol
1869000	1871000	要可以保護好人的利益
1871000	1873000	這是我的定義
1873000	1875000	然後我問說這個
1875000	1877000	能不能構造出
1877000	1879000	這樣子的protocol達到保護
1879000	1881000	好人利益的
1881000	1883000	這件事
1883000	1885000	你說要保護
1885000	1887000	這個就是照遊戲規則
1887000	1889000	這樣子的一個
1889000	1891000	算是一個
1891000	1893000	你這個研究的出發點
1893000	1895000	這個我可以理解
1895000	1897000	可是如果把這樣子的一個concept
1897000	1899000	就是translate到
1899000	1901000	所以對於遵守規則
1901000	1903000	expected payoff of honesty
1903000	1905000	要大於0.5
1905000	1907000	就是完備的嗎
1907000	1909000	因為你說你的遊戲
1909000	1911000	不是零和那大於0.5
1911000	1913000	一定比對方大嗎
1913000	1915000	呃
1915000	1917000	對
1917000	1919000	你這個問題問的很好
1919000	1921000	我這邊其實
1921000	1923000	少寫一個quantifier
1923000	1925000	這比如說
1925000	1927000	假如ABC都是honesty
1927000	1929000	都是遵守遊戲規則的
1929000	1931000	那
1931000	1933000	這
1933000	1935000	每一個人的期望值
1935000	1937000	都是0.5
1937000	1939000	所以你就會問說
1939000	1941000	那加起來全部的期望值不就是1.5
1941000	1943000	所以我這邊少了一個quantifier
1943000	1945000	是說
1945000	1947000	只是每一個honesty都要大於0.5
1949000	1951000	所以
1951000	1953000	就是單獨
1953000	1955000	我現在這邊定義的是單獨一個
1955000	1957000	就是ABC都是
1957000	1959000	遵守遊戲規則
1959000	1961000	但是他們互相都
1961000	1963000	可能也都
1963000	1965000	沒有任何的關係
1965000	1967000	可能也都看不順眼對方
1967000	1969000	但是他們都遵守遊戲規則
1969000	1971000	這都算是好人
1971000	1973000	所以比較好的說法
1973000	1975000	是不是就是說
1975000	1977000	如果我遵守遊戲規則
1977000	1979000	是我最有利的選擇
1979000	1981000	而不是所有玩家裡面最厲害的
1981000	1983000	呃
1985000	1987000	這個問題會變成
1987000	1989000	另外一個定義
1989000	1991000	你剛剛講的這個會變成另外一個定義
1993000	1995000	所以那個我們要
1995000	1997000	待會再討論
1997000	1999000	好謝謝
2001000	2003000	好
2003000	2005000	那
2007000	2009000	那如果這個定義沒有問題的話
2009000	2011000	那我們就可以
2011000	2013000	先討論
2013000	2015000	一些一個比較最簡單的
2015000	2017000	例子就是
2017000	2019000	當所有人都想要結果開出來
2019000	2021000	是1或者所有人都想要
2021000	2023000	開出來是0的話
2023000	2025000	那
2025000	2027000	這個這件事情就
2027000	2029000	無比的簡單
2029000	2031000	只要
2031000	2033000	大家看到所有人的
2033000	2035000	這個偏好都是一致的話
2035000	2037000	那大家都
2037000	2039000	都output同一個偏好
2039000	2041000	大家都看到所有人的偏好
2041000	2043000	都是1那就
2043000	2045000	就大家都輸出1
2045000	2047000	然後大家都很開心
2047000	2049000	用吃餃子老虎的例子來舉例就是
2049000	2051000	大家都想要吃餃子老虎
2051000	2053000	開出1那大家就說
2053000	2055000	好那我們就決定
2055000	2057000	吃餃子老虎必須開出1
2057000	2059000	這個賭場的
2059000	2061000	這個莊家很不開心
2061000	2063000	但是這個遊戲規則
2063000	2065000	這麼定了
2065000	2067000	那大家玩家都很開心
2067000	2069000	因為大家都可以贏
2069000	2071000	但是這個例子也不怎麼有趣
2071000	2073000	因為反正
2073000	2075000	假如這個川普
2075000	2077000	習然後普丁
2077000	2079000	全部都想要去DC
2079000	2081000	的話那這個
2081000	2083000	他們也不需要討論這件事情
2083000	2085000	他們就高興的一起去DC就好了
2085000	2087000	所以
2087000	2089000	這個case不有趣
2089000	2091000	那我們換一個
2091000	2093000	再複雜一點的
2093000	2095000	假如其中有一個人
2095000	2097000	的偏好是
2097000	2099000	跟別人不一樣他是少數
2099000	2101000	然後但是
2101000	2103000	我假設
2103000	2105000	這個壞人不遵守遊戲規則
2105000	2107000	的人他可以做的唯一
2107000	2109000	一件事情不遵守遊戲規則
2109000	2111000	的事情就是
2111000	2113000	他提早不玩
2113000	2115000	那這個我也有一個
2115000	2117000	在稍微複雜
2117000	2119000	以下的遊戲規則可以讓
2119000	2121000	可以保護到好人的利益
2121000	2123000	那這個遊戲規則
2123000	2125000	怎麼做呢其實很簡單
2125000	2127000	就是讓這個少數來
2127000	2129000	丟銅板丟了銅板
2129000	2131000	之後他就把這個銅板的結果
2131000	2133000	告訴另外兩個人
2135000	2137000	然後另外兩個人就很高興的接收
2137000	2139000	這個銅板然後這個
2139000	2141000	這個遊戲就結束了
2141000	2143000	那為什麼這個
2143000	2145000	遊戲規則可以
2145000	2147000	保護到好人的利益呢
2147000	2149000	因為這個
2149000	2151000	遊戲從頭到尾就只有
2151000	2153000	逼一個人說話就是這個少數
2153000	2155000	說話
2155000	2157000	這個少數他如果
2157000	2159000	說話的話那他就
2159000	2161000	遵守遊戲規則啦
2161000	2163000	他要說話就必須
2163000	2165000	遵守遊戲規則要不然他就要閉嘴
2165000	2167000	那他如果
2167000	2169000	說話了表示他遵守遊戲規則
2169000	2171000	那這個銅板也是
2171000	2173000	也是他公正頭的啊
2173000	2175000	那公正頭的銅板
2175000	2177000	那這個A跟C
2177000	2179000	另外兩個多數收到了以後
2179000	2181000	那就照遊戲規則
2181000	2183000	因為照遊戲規則這一切都是
2183000	2185000	公正的
2185000	2187000	那萬一這個
2187000	2189000	唯一說話的一個傢伙
2189000	2191000	B不照遊戲規則
2191000	2193000	那他能夠怎麼不照遊戲規則
2193000	2195000	他就只能
2195000	2197000	就只能不說話嘛
2197000	2199000	原本該講的這一句話他不講
2199000	2201000	這是他唯一一個不照遊戲規則的
2201000	2203000	方法
2203000	2205000	那A跟C看到這個B不照
2205000	2207000	遊戲規則那他們就很高興決定
2207000	2209000	欸B是壞人
2209000	2211000	那A跟C就可以很高興的說
2211000	2213000	那壞人這個有什麼損失
2213000	2215000	我們不管啊我們就照我們高興的
2215000	2217000	就好了
2217000	2219000	所以這個
2219000	2221000	剛剛一串
2221000	2223000	講了這麼多那個
2223000	2225000	其實就是證明這個
2225000	2227000	遊戲規則可以
2227000	2229000	很容易的讓好人的
2229000	2231000	利益都被保護到
2231000	2233000	所以
2233000	2235000	這個假如壞人只能
2235000	2237000	壞人唯一
2237000	2239000	能夠做的事情就是不玩的話
2239000	2241000	那這件事情也很容易做到
2241000	2243000	就是
2243000	2245000	照我剛剛講的
2245000	2247000	丟一個銅板傳一個訊息
2247000	2249000	然後就結束了
2251000	2253000	然後
2253000	2255000	這個但是
2255000	2257000	這一些在這個
2257000	2259000	川普跟習的例子或普丁的例子
2259000	2261000	都不是這樣他們都可能會
2261000	2263000	都可能會
2263000	2265000	這個不照遊戲規則
2265000	2267000	這個不丟公正的銅板
2267000	2269000	那所以
2269000	2271000	前面那個B丟一個銅板
2271000	2273000	然後傳一個訊息這件事情
2273000	2275000	是這個壞人
2275000	2277000	可能完全不會
2277000	2279000	照這個規則來的
2279000	2281000	然後這
2281000	2283000	照這個規則的話
2283000	2285000	那也沒有辦法
2285000	2287000	保護到好人的利益
2287000	2289000	這個我們叫做
2289000	2291000	篡改
2291000	2293000	篡改這一些
2293000	2295000	random的這個
2297000	2299000	篡改這一些
2299000	2301000	隨機的input
2301000	2303000	然後他篡改了之後
2303000	2305000	這一切都不公正了
2305000	2307000	然後
2307000	2309000	呃
2309000	2311000	這個project
2311000	2313000	最主要的困難
2313000	2315000	的地方就是
2315000	2317000	在討論這個case
2317000	2319000	到底能不能
2319000	2321000	這丟出這Maximin
2321000	2323000	這個公正的銅板
2323000	2325000	然後
2325000	2327000	呃
2327000	2329000	我們這個
2329000	2331000	這個一群作者
2331000	2333000	一開始花了非常
2333000	2335000	多的時間在討論
2335000	2337000	他到底可不可以
2337000	2339000	想不到一個
2339000	2341000	可以真的做到這件事情
2341000	2343000	保護誠實的
2343000	2345000	玩家的
2345000	2347000	方法,但是我們也沒有辦法證明
2347000	2349000	他不行
2349000	2351000	這件事情做不到
2351000	2353000	然後我們一開始都
2353000	2355000	非常的覺得他應該可以做到
2355000	2357000	理由是這樣子的
2357000	2359000	理由是說
2359000	2361000	我前面的這一個
2361000	2363000	這個在
2363000	2365000	壞人
2365000	2367000	受到比較多限制的時候
2367000	2369000	是有一個solution的
2369000	2371000	那
2371000	2373000	在傳統文獻上面
2373000	2375000	有很多的
2375000	2377000	技術可以讓
2377000	2379000	可以讓
2379000	2381000	前面那一個例子就是
2381000	2383000	比較簡單的例子
2383000	2385000	這個只能抵抗比較
2385000	2387000	受限制的壞人的情況下
2387000	2389000	然後經過一些
2389000	2391000	複雜的密碼學的操作
2391000	2393000	然後得到一個
2393000	2395000	壞人
2395000	2397000	不受限制但是
2397000	2399000	仍然可以安全的
2399000	2401000	protocol或者是
2401000	2403000	我們這邊叫做遊戲規則
2403000	2405000	就是因為我們
2405000	2407000	文獻裡面有很多經驗我們都
2407000	2409000	可以在不同的情況下
2409000	2411000	升級這個安全性
2411000	2413000	所以
2413000	2415000	我們一開始看到這個問題
2415000	2417000	的時候都覺得這是可以
2417000	2419000	做到的
2419000	2421000	用前面已經知道的東西
2421000	2423000	或者是文獻裡面已經知道的東西
2423000	2425000	進行安全性的升級
2425000	2427000	但是
2427000	2429000	這個後來
2429000	2431000	我們再翻了
2431000	2433000	更多的文獻然後
2433000	2435000	總算是證明他
2435000	2437000	就是做不到
2437000	2439000	然後尤其
2439000	2441000	是這個壞人
2441000	2443000	是只有有限的
2443000	2445000	計算能力的時候也做不到
2445000	2447000	那跟我
2447000	2449000	前面一點講到
2449000	2451000	cliff的那一個結果一樣
2451000	2453000	就是我們真的構造了一個
2453000	2455000	有
2455000	2457000	有限時間的
2457000	2459000	這個polynomial time的
2459000	2461000	去attack
2461000	2463000	任何的
2463000	2465000	這樣子的protocol
2465000	2467000	然後
2467000	2469000	中間的證明比較複雜
2469000	2471000	我就不講了
2471000	2473000	但是
2473000	2475000	這個重點就是
2475000	2477000	這些protocol
2477000	2479000	在很多情況下
2479000	2481000	我是做不到的
2481000	2483000	證明的方法
2483000	2485000	其實就是可能
2485000	2487000	大家高中或者
2487000	2489000	大學數學課教的
2489000	2491000	反證法
2491000	2493000	這中間的
2493000	2495000	技術比較細節我就
2495000	2497000	挑過
2497000	2499000	但是我覺得
2501000	2503000	這件事情應該是
2503000	2505000	是要
2505000	2507000	做到的就是
2507000	2509000	我定義了一個
2509000	2511000	這個
2511000	2513000	所謂的
2513000	2515000	公正的銅板
2515000	2517000	是針對一個特定的
2517000	2519000	payoff function
2519000	2521000	這是非常特定的
2521000	2523000	我有無數多個payoff function
2523000	2525000	只有這個
2525000	2527000	只有這個payoff function
2527000	2529000	我有辦法證明他
2529000	2531000	做不到公正
2531000	2533000	也許其他的payoff function可以
2533000	2535000	因為
2535000	2537000	某一些payoff function
2537000	2539000	我可以很容易的做到
2539000	2541000	比如說所有人的payoff都長得一樣
2541000	2543000	那可能就會
2543000	2545000	退化到某一個
2545000	2547000	我剛剛討論過的case
2547000	2549000	然後
2549000	2551000	所謂保護
2551000	2553000	城市的人的利益就是定義在
2553000	2555000	這個payoff function
2555000	2557000	就是根據這個payoff定義什麼叫做利益
2557000	2559000	所以一定有某一些
2559000	2561000	利益的定義方式
2561000	2563000	但是即使這麼簡單的
2563000	2565000	一個靈異的
2565000	2567000	方式去定義什麼叫做利益
2567000	2569000	仍然就已經有
2569000	2571000	做不到的保護
2571000	2573000	城市的人的利益
2573000	2575000	這一件事了
2575000	2577000	這是我想要傳達到的message
2577000	2579000	然後
2579000	2581000	再多說一句的話
2581000	2583000	就是
2583000	2585000	即使attacker
2585000	2587000	是只有有限的計算能力
2587000	2589000	也還是保護不了
2589000	2591000	假設你的attacker
2591000	2593000	都非常的受限
2593000	2595000	他只有很弱的計算能力
2595000	2597000	那你還是保護不了
2597000	2599000	還是保護不了城市的人的利益
2599000	2601000	這樣子
2601000	2603000	所以就是
2603000	2605000	剛剛講的
2605000	2607000	回到最一開始的例子
2607000	2609000	川普跟習要在哪裡
2609000	2611000	開會這一件事情
2611000	2613000	如果只有兩個人的話
2613000	2615000	他們可以決定
2615000	2617000	但是加了一個人
2617000	2619000	加了普丁
2619000	2621000	那這件事情就完全沒有辦法了
2621000	2623000	這是
2623000	2625000	最
2625000	2627000	最大的我想要傳達到的訊息
2629000	2631000	就是一定會有其中
2631000	2633000	一個人或兩個人
2633000	2635000	的利益會受損
2637000	2639000	然後這邊的證明
2639000	2641000	跳過
2641000	2643000	這邊的證明
2643000	2645000	看起來很複雜但是
2645000	2647000	其實都只是
2647000	2649000	簡單的期望值計算
2649000	2651000	然後但是多拐了幾個彎
2651000	2653000	但是
2653000	2655000	這
2655000	2657000	比較細節的我就不講了
2661000	2663000	然後
2663000	2665000	所以
2665000	2667000	再總結一下
2667000	2669000	就是超過
2669000	2671000	三個人的時候
2671000	2673000	我可以把
2673000	2675000	好多個人
2675000	2677000	這個
2677000	2679000	group成
2679000	2681000	一個
2681000	2683000	大一點的
2683000	2685000	組織比如說
2685000	2687000	我有十個人我可以
2687000	2689000	group成三個大的團體
2689000	2691000	然後
2691000	2693000	如果這個三個大的團體
2693000	2695000	可以
2695000	2697000	對應到
2697000	2699000	我剛剛講的三個人的例子的話
2699000	2701000	那他仍然是做不到的
2701000	2703000	如果可以對應到兩人的例子
2703000	2705000	那
2705000	2707000	在更早之前的cleave的結果
2707000	2709000	也告訴你這就直接做不到了
2709000	2711000	所以
2711000	2713000	這個問題
2713000	2715000	其實我剛剛本來就想要問說
2715000	2717000	如果你一直說你有
2717000	2719000	就是三個parties
2719000	2721000	然後你想要generalize到
2721000	2723000	就是n-party會怎麼樣
2723000	2725000	我就蠻好奇這件事情
2725000	2727000	intuitively其實這個也是蠻合理的
2727000	2729000	就是說如果你可以group他們成
2729000	2731000	變成三個party
2731000	2733000	其實就reduce到三個party的問題
2733000	2735000	可是如果你說
2735000	2737000	就是那個壞人
2737000	2739000	可以被group到
2739000	2741000	一群壞人我們這樣講好了
2741000	2743000	也就是說你還是要假設
2743000	2745000	這群壞人之間彼此是
2745000	2747000	對彼此是好人的
2747000	2749000	是誠實的
2749000	2751000	所以他們share的information是
2751000	2753000	他知道他在做的事情
2753000	2755000	就是他們彼此之間其實是知道彼此
2755000	2757000	有人在break the rule
2757000	2759000	對對對
2759000	2761000	這
2761000	2763000	我
2763000	2765000	你問的問題非常的好
2765000	2767000	所以我就
2767000	2769000	稍微
2769000	2771000	跳開一點講high level的
2771000	2773000	就是
2773000	2775000	我在
2775000	2777000	從剛剛到現在講的
2777000	2779000	壞人我都是假設
2781000	2783000	除了好人以外的
2783000	2785000	都叫做壞人
2785000	2787000	都是
2787000	2789000	這個有
2789000	2791000	共同的
2791000	2793000	這個叫做什麼
2793000	2795000	共同的比如說
2795000	2797000	都是同一個
2797000	2799000	有一個壞人
2799000	2801000	頭頭在控制的
2801000	2803000	所以
2803000	2805000	你的問題是說
2805000	2807000	也許壞人A
2807000	2809000	跟壞人B之間
2809000	2811000	的利益不相同
2811000	2813000	所以他們會
2813000	2815000	牽制之類的
2815000	2817000	到目前為止
2817000	2819000	我的假設是
2819000	2821000	不假設這件事情
2821000	2823000	就是假設壞人A跟壞人B
2823000	2825000	有一個壞人頭頭他也許根本就不在
2825000	2827000	就不在這
2827000	2829000	參加遊戲的人裡面
2829000	2831000	但是他就是黑手黨的頭頭
2831000	2833000	然後他在背後控制所有的壞人
2833000	2835000	然後所有的壞人都會聽他的
2835000	2837000	都會合作這樣子
2839000	2841000	然後所以
2841000	2843000	在這邊的
2843000	2845000	好幾個壞人
2845000	2847000	或好幾個好人
2847000	2849000	兩個或三個
2849000	2851000	這邊應該就可以
2851000	2853000	比較容易解釋
2853000	2855000	這樣子有回答到問題嗎
2855000	2857000	有有
2857000	2859000	我想的應該是一樣
2859000	2861000	OK謝謝
2861000	2863000	我待會馬上就會講到
2863000	2865000	這個有時候壞人
2865000	2867000	並不一定是
2867000	2869000	都是同一個頭頭
2869000	2871000	控制了然後都會聽頭頭的話
2871000	2873000	這樣子
2873000	2875000	但是總之
2875000	2877000	我先把這邊總結完
2877000	2879000	就是這個大部分的例子
2879000	2881000	在我們定義的保護好人的利益
2881000	2883000	這件事情上面通常都是
2883000	2885000	做不到的除非
2885000	2887000	除非這個問題非常的簡單
2887000	2889000	比如說像是所有人的
2889000	2891000	這個偏好都一樣
2891000	2893000	或者是所有人
2893000	2895000	只有一個人的偏好不一樣
2895000	2897000	而且這個壞人還非常受限
2897000	2899000	所以他還只能
2899000	2901000	這個不玩他不能做其他的事情
2901000	2903000	那只有這小小的
2903000	2905000	一小塊是
2905000	2907000	有辦法做到公正的
2907000	2909000	在這個Maximin下面定義的
2909000	2911000	公正只有一點點的
2911000	2913000	只有一點點的
2913000	2915000	case可以做到公正
2915000	2917000	然後其他通通都不行
2917000	2919000	是蠻悲傷的
2919000	2921000	然後所以這個
2921000	2923000	剛剛
2923000	2925000	主持人也問了
2925000	2927000	問了幾個問題
2927000	2929000	很好的比如說像是
2929000	2931000	我前面定義的是說
2931000	2933000	好人的利益不能夠受損
2933000	2935000	我的出發點是保護好人的利益
2935000	2937000	那另外一個
2937000	2939000	出發點是比較像是
2939000	2941000	Game Theory的
2941000	2943000	是說
2943000	2945000	所謂的
2945000	2947000	壞人或者是
2947000	2949000	他要
2949000	2951000	有一定的經濟動機
2951000	2953000	才會想要
2953000	2955000	做壞事才會不照規則玩
2955000	2957000	那這是
2957000	2959000	這是
2959000	2961000	另外一種定義
2961000	2963000	然後這種定義也非常自然
2963000	2965000	就是說
2965000	2967000	我某一個遊戲定義了一套
2967000	2969000	遊戲規則然後
2969000	2971000	然後
2971000	2973000	這個即使有一個
2973000	2975000	後面有一個黑手當老大
2975000	2977000	在控制
2977000	2979000	某一些人變成壞人
2979000	2981000	但是這些
2981000	2983000	被黑手當老大控制的壞人
2983000	2985000	並不見得是完全
2985000	2987000	聽黑手當老大的話
2987000	2989000	他要說
2989000	2991000	我聽了
2991000	2993000	黑手當老大的話
2993000	2995000	要能夠增加我
2995000	2997000	自己的利益我才甘心聽他的話
2997000	2999000	然後
2999000	3001000	這邊Storm Nash
3001000	3003000	要求的非常的強就是說
3003000	3005000	黑手當老大要做到
3005000	3007000	讓他被他控制的
3007000	3009000	每一個壞人的利益都要增加
3009000	3011000	那這件事情
3011000	3013000	對黑手當老大
3013000	3015000	來說就非常的困難
3015000	3017000	非常的難達到
3017000	3019000	尤其是比如說我們這邊
3019000	3021000	今天從頭到尾
3021000	3023000	講的就是
3023000	3025000	這個output只有0或1
3025000	3027000	然後你的偏好也就只有
3027000	3029000	你喜歡0或喜歡1
3029000	3031000	那黑手當老大
3031000	3033000	要是控制了同時控制了
3033000	3035000	喜歡0跟喜歡1的那些傢伙
3035000	3037000	那黑手當老大
3037000	3039000	怎麼搞都沒有辦法
3039000	3041000	搞到同時滿足
3041000	3043000	兩邊的小弟嘛
3043000	3045000	因為這個
3045000	3047000	一邊小弟的期望值增加
3047000	3049000	另外一邊小弟的期望值就下降
3049000	3051000	這樣子
3051000	3053000	所以
3053000	3055000	這一個定義雖然他叫做
3055000	3057000	Storm Nash
3057000	3059000	那Storm Nash是從Game Theory
3059000	3061000	借來的但是
3061000	3063000	實際上這一個定義是
3063000	3065000	比剛剛那個Maximum
3065000	3067000	更容易達到的
3067000	3069000	因為黑手當老大能夠
3069000	3071000	做的事情更少
3071000	3073000	他受到的限制更多
3073000	3075000	所以
3075000	3077000	所以
3077000	3079000	這個
3079000	3081000	在這個定義底下
3081000	3083000	要做到公平就
3083000	3085000	非常的簡單
3085000	3087000	我們就只要隨便閉著眼睛挑兩個
3087000	3089000	不曉得他是不是
3089000	3091000	壞人也不曉得他是不是好人
3091000	3093000	只要他們兩個的
3093000	3095000	對於結果的偏好
3095000	3097000	長得不一樣
3097000	3099000	然後就讓他們玩
3099000	3101000	我一開始講的
3101000	3103000	一邊Commit
3103000	3105000	一邊CommitX
3105000	3107000	另外一邊
3107000	3109000	決定一個Random的Y
3109000	3111000	然後另外一邊
3111000	3113000	一開始Commit的那一邊
3113000	3115000	把信封袋打開
3115000	3117000	公佈說這個X一開始是什麼
3117000	3119000	然後X2起來
3119000	3121000	然後所有人都聽他們兩個
3121000	3123000	下面有多少個人
3123000	3125000	10個100個1000個
3125000	3127000	都是只要兩個人
3127000	3129000	在做事就好了
3129000	3131000	這件事情
3131000	3133000	其實很容易證明
3133000	3135000	就是把所有的條件
3135000	3137000	列舉出來就可以證明說
3137000	3139000	這一個遊戲
3139000	3141000	規則是可以達成
3141000	3143000	Strong Nash
3143000	3145000	黑手當老大沒有辦法
3145000	3147000	沒有辦法增加所有
3147000	3149000	黑手當小弟的利益
3149000	3151000	這樣子
3155000	3157000	然後
3157000	3159000	回到上一頁投影片
3161000	3163000	其實大家仔細想一想的話
3163000	3165000	就會發現
3165000	3167000	這兩種定義
3167000	3169000	在出Party的時候
3169000	3171000	是一模一樣的定義
3171000	3173000	因為出Party的時候
3173000	3175000	只有兩個人
3175000	3177000	然後兩個人的話
3177000	3179000	這個Payoff底下
3179000	3181000	是完全的零和遊戲
3181000	3183000	然後兩個人的情況
3183000	3185000	又有對稱性
3185000	3187000	所以這個
3187000	3189000	壞人增加的Payoff
3189000	3191000	就會等於好人減少的Payoff
3191000	3193000	這在Zero Sum的時候
3193000	3195000	是成立的
3195000	3197000	然後
3197000	3199000	兩個人的情況下
3199000	3201000	就只有一個壞人跟一個好人
3201000	3203000	所以這兩個定義是完全相同的
3203000	3205000	但是在三或四個人
3205000	3207000	的時候
3207000	3209000	這兩個定義就完全不一樣
3209000	3211000	一個是
3211000	3213000	幾乎都做不到
3213000	3215000	然後另外一個是
3215000	3217000	幾乎都完全做得到
3217000	3219000	這是非常差別非常大的
3219000	3221000	然後
3223000	3225000	除了這兩個定義以外
3225000	3227000	在我Paper裡面
3227000	3229000	也有考慮更
3229000	3231000	其他的定義也許更自然
3231000	3233000	也許更複雜不曉得
3233000	3235000	這邊考慮的是
3235000	3237000	第一個Maximin考慮的是
3237000	3239000	單獨的好人的利益
3239000	3241000	然後Group的話你可以說
3241000	3243000	那我不要考慮單獨
3243000	3245000	我考慮所有好人的利益增加
3245000	3247000	好人的利益減少
3247000	3249000	加起來的
3249000	3251000	總和
3251000	3253000	或者是壞人的利益全部加起來
3253000	3255000	增加的總和
3255000	3257000	各自有各自
3257000	3259000	不同的情況
3259000	3261000	可能可以適用
3261000	3263000	黑手當老大
3263000	3265000	控制了一群小弟
3265000	3267000	他可能會把小弟得到的利益
3267000	3269000	全部都加起來然後均分
3269000	3271000	這也許是
3271000	3273000	適合的
3273000	3275000	討論的模式
3275000	3277000	像是這兩個的話
3277000	3279000	就介於
3279000	3281000	可行性就介於Maximin
3281000	3283000	跟Strong Nash中間
3283000	3285000	因為定義比較
3285000	3287000	囉嗦一點
3287000	3289000	所以我就不全部講了
3289000	3291000	然後
3291000	3293000	反正
3293000	3295000	在
3295000	3297000	只考慮兩個人的情況下
3297000	3299000	這些定義都相等
3299000	3301000	兩個人的話
3301000	3303000	Total等於個人
3303000	3305000	Zero sum的話
3305000	3307000	又會讓好人的增加等於壞人
3307000	3309000	壞人的增加等於好人的減少
3309000	3311000	所以這四個
3311000	3313000	在兩個人的情況下
3313000	3315000	都是一樣的
3315000	3317000	都是做得到
3317000	3319000	以上就是
3319000	3321000	完全不一樣的東西
3321000	3323000	然後
3323000	3325000	如果大家
3325000	3327000	學過
3327000	3329000	或者是看過一些Game Theory
3329000	3331000	的話就會
3331000	3333000	可以馬上想得到
3333000	3335000	像是主持人剛剛的問題
3335000	3337000	就是Game Theory
3337000	3339000	有各種不同的設定
3339000	3341000	比如說像是Payoff Function
3341000	3343000	也許這邊
3343000	3345000	我剛剛給的Payoff Function不是最自然的
3345000	3347000	也許在某些情況下
3347000	3349000	Zero sum的Payoff比較自然
3349000	3351000	那這個
3351000	3353000	或者是在某些情況下
3353000	3355000	每個人
3355000	3357000	喜歡什麼樣的
3357000	3359000	這個
3359000	3361000	每個人喜歡什麼樣的
3361000	3363000	outcome這件事情
3363000	3365000	川普喜歡在哪裡開會
3365000	3367000	習喜歡在哪裡開會
3367000	3369000	這些事情可能
3369000	3371000	這不是Public的
3371000	3373000	會比較自然一點
3373000	3375000	可能是Private的
3375000	3377000	大家都不知道
3377000	3379000	這是比較自然的設定
3379000	3381000	在某些情況下可能是這樣子
3381000	3383000	當然
3383000	3385000	這個
3385000	3387000	這邊今天講的從頭到尾
3387000	3389000	我都只講這個
3389000	3391000	丟一個銅板,然後這個銅板只有兩面
3391000	3393000	零或一
3393000	3395000	但是
3395000	3397000	假如今天那個銅板變成骰子
3397000	3399000	零一二三四五
3399000	3401000	或者是我要
3401000	3403000	加碼的事情
3403000	3405000	比如說我這個川普跟習要一起計算
3405000	3407000	他們兩個
3407000	3409000	薪水加起來之類的奇奇怪怪的
3409000	3411000	Function
3411000	3413000	那這些都是可以再
3413000	3415000	衍生探討的問題
3415000	3417000	然後
3417000	3419000	但是這個
3419000	3421000	可以研究的問題很多
3421000	3423000	這個Paper
3423000	3425000	只討論了一小部分
3425000	3427000	藍色的這一些
3427000	3429000	所以
3429000	3431000	這是我今天講的Coin Talks
3431000	3433000	謝謝大家
3433000	3435000	花時間來聽我講這一段
3435000	3437000	謝謝
3439000	3441000	把麥克風打開再強調一次
3441000	3443000	那我們就鼓掌
3443000	3445000	謝謝我們今天的講者
3449000	3451000	各位有什麼問題嗎
3451000	3453000	對
3453000	3455000	好
3459000	3461000	在大家想的時候
3461000	3463000	我問一個問題
3463000	3465000	這個問題就是跟演講內容不是
3465000	3467000	非常相關,就是你這個東西是已經發表了嗎
3467000	3469000	還是你已經投標了
3469000	3471000	那你要不要把你的那個
3471000	3473000	Paper的那個標題
3473000	3475000	還有一些我們可以找得到的
3475000	3477000	比如說什麼Paper的
3477000	3479000	第幾期啊
3479000	3481000	把號碼寫上來
3481000	3483000	這樣就會錄下來
3483000	3485000	如果之後看影片的人
3485000	3487000	想有興趣也可以去找
3487000	3489000	要怎麼寫啊
3489000	3491000	就跳回你的PowerPoint
3491000	3493000	好啊
3495000	3497000	就直接打在這邊就好
3497000	3499000	我們現在就看得到了
3499000	3501000	等我一下
3501000	3503000	好
3503000	3505000	那現在在
3505000	3507000	威凱打這些文字的過程中
3507000	3509000	大家有問題嗎
3509000	3511000	會有什麼comment嗎
3513000	3515000	可以問一些
3515000	3517000	很基本的
3517000	3519000	比如說像是
3519000	3521000	這個研究這個
3521000	3523000	做什麼啊之類的
3525000	3527000	我有一個有趣的問題
3527000	3529000	就是當然這個就是說
3529000	3531000	這是一個最fundamental的一個
3531000	3533000	怎麼講scenario
3533000	3535000	然後有各式各樣我們就可以各式各樣去想
3535000	3537000	各式各樣的
3537000	3539000	特殊的
3539000	3541000	就例子嘛
3541000	3543000	但是現在
3543000	3545000	所以你剛剛講的是
3545000	3547000	基本上就是說
3547000	3549000	你那個maximum
3549000	3551000	跟下面的這個就是two parties
3551000	3553000	這兩個是兩個極端
3553000	3555000	然後都可以討論
3555000	3557000	可是你中間那幾個
3557000	3559000	就是落在比如說
3559000	3561000	壞人有幾個party
3561000	3563000	壞人彼此之間的利益
3563000	3565000	是不是完全一樣的
3565000	3567000	那在這些cases裡面
3567000	3569000	不就會變成說
3569000	3571000	你的結論是跟
3571000	3573000	恩有關係嗎
3573000	3575000	就是跟你的那個有多少好人有多少壞人
3575000	3577000	他們彼此怎麼分配
3577000	3579000	那他們彼此之間的關係是什麼
3579000	3581000	會影響你的結論是這樣嗎
3581000	3583000	這個
3583000	3585000	我
3585000	3587000	我剛剛這個發表的
3587000	3589000	會議貼在這邊了
3589000	3591000	那我現在就把這個投影片
3591000	3593000	跳回去
3593000	3595000	就是
3597000	3599000	在
3599000	3601000	在maximum這邊的話
3601000	3603000	其實是這個
3603000	3605000	simple case是說
3605000	3607000	大於等於三的時候
3607000	3609000	然後中間
3609000	3611000	這個group maximum
3611000	3613000	其實是跟maximum一樣
3613000	3615000	大於等於三
3615000	3617000	然後接下來
3617000	3619000	CSP的話是大於等於四
3619000	3621000	就是真的是跟恩有關
3621000	3623000	就是三個人做不到
3623000	3625000	或者是四個人做不到
3625000	3627000	然後最下面最寬鬆的是
3627000	3629000	不管多少人都做得到
3629000	3631000	所以的確是跟恩有關的
3633000	3635000	這樣子有回答到問題嗎
3635000	3637000	有
3637000	3639000	其實這只是我問題的前面
3639000	3641000	就是說我也
3641000	3643000	期望就是說
3643000	3645000	這件事情理論上是會跟恩有關
3645000	3647000	而且恩會影響你的結果
3647000	3649000	那像如果是
3649000	3651000	這樣子的狀況其實更接近
3651000	3653000	realistic的狀況
3653000	3655000	那實際上在比如說
3655000	3657000	理論的computer science上
3657000	3659000	是怎麼研究還是一個一個去算嗎
3659000	3661000	還是說你們就比如說
3661000	3663000	你們會用比如說multicolor
3663000	3665000	然後想辦法去用empirical的
3665000	3667000	方式去conclude
3667000	3669000	一些關係比如說
3669000	3671000	跟恩的關係或是
3671000	3673000	在什麼threshold以下或是什麼樣的結論
3673000	3675000	什麼threshold以下或是什麼樣的結論
3675000	3677000	還是你們通常都會怎麼做
3677000	3679000	這所以
3679000	3681000	主持人問的方法
3681000	3683000	問的問題比較像是說
3683000	3685000	我這個
3685000	3687000	左邊有
3687000	3689000	有一串的定義
3689000	3691000	一串這個
3691000	3693000	可能是天馬行空
3693000	3695000	可能是被某些
3695000	3697000	這
3697000	3699000	realistic
3699000	3701000	problem motivator的
3701000	3703000	定義然後
3703000	3705000	這motivator這麼一串
3705000	3707000	定義以後
3707000	3709000	我要怎麼討論說
3709000	3711000	或者
3711000	3713000	用什麼樣的方法討論說
3713000	3715000	這個左邊這一串定義是
3715000	3717000	做得到或
3717000	3719000	做不到然後比如說
3719000	3721000	尤其是在這一個
3721000	3723000	這個
3723000	3725000	現在這一個
3725000	3727000	這個talk討論的
3727000	3729000	問題裡面
3729000	3731000	它是跟恩有關的
3731000	3733000	然後這要
3733000	3735000	一樣去說在
3735000	3737000	恩多少的時候可以恩多少的時候
3737000	3739000	不行這樣子
3739000	3741000	那這個在我們
3741000	3743000	這一個
3743000	3745000	這一個work裡面
3745000	3747000	這沒有什麼太好的方法
3747000	3749000	就是
3749000	3751000	這個中間每一個
3751000	3753000	說恩大於多少不行的
3753000	3755000	這個case都是
3755000	3757000	都是拿
3757000	3759000	這個
3759000	3761000	證明再變形一下
3761000	3763000	然後再製造另外一個證明來說
3763000	3765000	恩大於多少不行
3765000	3767000	比如說
3767000	3769000	最一開始的說恩大於
3769000	3771000	等於二就不行了那個最早的
3771000	3773000	結果cliff是cliff的
3773000	3775000	lower bound
3775000	3777000	那後面這一串其實都是把
3777000	3779000	最一開始
3779000	3781000	cliff的那一個
3781000	3783000	impossibility
3783000	3785000	再延伸一步一步延伸到
3785000	3787000	不同的設定但是恩
3787000	3789000	等於三四這樣子
3789000	3791000	去證明所以
3791000	3793000	恩
3793000	3795000	這
3795000	3797000	在這個例子裡面
3797000	3799000	是真的沒有什麼好方法那
3799000	3801000	其他例子也許
3801000	3803000	有但是
3803000	3805000	恩在我們
3805000	3807000	這些因為這些定義都是
3807000	3809000	都是
3809000	3811000	這個都是離散的
3811000	3813000	定義然後
3813000	3815000	恩
3815000	3817000	我們也都
3817000	3819000	不太有這些
3819000	3821000	這個連續阿或者是
3821000	3823000	恩
3823000	3825000	對連續
3825000	3827000	或者是functional這些數學的
3827000	3829000	工具可以用然後
3829000	3831000	恩
3831000	3833000	像是剛剛
3833000	3835000	問題裡面有問到說
3835000	3837000	是不是有multicolor
3837000	3839000	或者是實驗之類的方法
3839000	3841000	可以證明那
3841000	3843000	恩那一些
3843000	3845000	這個
3845000	3847000	就是比較
3847000	3849000	偏實驗性的方法的話
3849000	3851000	那恩我們
3851000	3853000	通常是是會避免因為
3853000	3855000	因為
3855000	3857000	實驗性的方法有時候
3857000	3859000	很難窮舉就是即使
3859000	3861000	只有三或
3861000	3863000	四這麼小的數字
3863000	3865000	也不見得有辦法
3865000	3867000	窮舉然後所以
3867000	3869000	multicolor
3869000	3871000	我們
3871000	3873000	是真的比較少用就是
3873000	3875000	恩
3875000	3877000	可能是不知道怎麼用
3877000	3879000	不知道怎麼用來證明它
3879000	3881000	可以或不行
3881000	3883000	那
3883000	3885000	我們的證明像
3885000	3887000	像是在這裡就是就是比較
3887000	3889000	比較組合性的
3889000	3891000	就是就是去算
3891000	3893000	它的機率然後算完之後
3893000	3895000	用
3895000	3897000	用恩我前面有投影片
3899000	3901000	就是比如說像是
3901000	3903000	這裡的話就是就是去算
3903000	3905000	期望值算機率然後
3905000	3907000	然後再做一些平均
3907000	3909000	之類的然後得到結論
3909000	3911000	才說它可以或不行
3917000	3919000	I see 好謝謝
3919000	3921000	那個
3921000	3923000	恩那現在大家有問題嗎
3925000	3927000	哈囉我有個問題
3927000	3929000	恩請說
3929000	3931000	恩我還是不太懂
3931000	3933000	就是
3933000	3935000	可以請你回到
3935000	3937000	這一頁也可以
3937000	3939000	就是要怎麼把
3939000	3941000	恩大於三的
3941000	3943000	情況reduce到三個party
3943000	3945000	就是這個almost
3945000	3947000	almost and amethyst
3947000	3949000	和malicious
3949000	3951000	這個情況要怎麼reduce到
3951000	3953000	three party
3953000	3955000	這個問題問得很好
3955000	3957000	就是
3957000	3959000	恩就是
3959000	3961000	做法非常簡單假設這邊只有
3961000	3963000	恩等於四好了然後但是
3963000	3965000	恩等於四的話它就是
3965000	3967000	在這一行的話
3967000	3969000	unanimous就是
3969000	3971000	全部都長得一樣嘛
3971000	3973000	那almost就是差一個
3973000	3975000	然後只有一個是少數其他人都是多數這樣
3975000	3977000	那恩等於四的這個情況下
3977000	3979000	就是就是
3979000	3981000	恩我直接打好了
3981000	3983000	就是就是0
3983000	3985000	1 1 1
3985000	3987000	就是這個就是0
3987000	3989000	1 1 1然後當然你有對稱性
3989000	3991000	所以這個0
3991000	3993000	可能是在某一個人這不曉得
3993000	3995000	但是反正對稱性我們不管
3995000	3997000	有對稱性所以我們就不管
3997000	3999000	就是0 1 1然後
3999000	4001000	那
4001000	4003000	你要問說
4003000	4005000	這個能不能有
4005000	4007000	一個遊戲規則讓四個人
4007000	4009000	玩又
4009000	4011000	可以保護
4011000	4013000	這個誠實人的利益的話
4013000	4015000	那我們就假設說
4015000	4017000	好那假如真的有一個
4017000	4019000	這樣的一個遊戲規則
4019000	4021000	就是四個人玩的
4021000	4023000	然後可以保護
4023000	4025000	誠實的人的利益
4025000	4027000	那我們做了什麼事情呢
4027000	4029000	這個我們做事情
4029000	4031000	就是說那
4031000	4033000	我不管這些
4033000	4035000	0 1 1 1是好人還是
4035000	4037000	壞人我就把
4037000	4039000	後面這兩個1
4039000	4041000	這個喜歡1的傢伙綁在一起
4041000	4043000	然後他就是
4043000	4045000	他就是變成一個人
4045000	4047000	就是
4047000	4049000	這個胖一點的人
4049000	4051000	然後他們都喜歡1
4051000	4053000	這個胖一點的人喜歡1
4053000	4055000	這樣子
4055000	4057000	那
4057000	4059000	假如有四個人的遊戲規則
4059000	4061000	可以保護
4061000	4063000	好人的利益的話那
4063000	4065000	這個我把
4065000	4067000	後面這兩個人綁在一起
4067000	4069000	然後他們
4069000	4071000	就
4071000	4073000	就照四個人的遊戲規則
4073000	4075000	玩然後不管他是好人
4075000	4077000	還壞人
4077000	4079000	那
4079000	4081000	這件事情本身就
4081000	4083000	就
4083000	4085000	綁在一起之後我就只剩下三個人
4085000	4087000	那三個人他的偏好
4087000	4089000	是個0 1 1
4089000	4091000	因為後面那兩個綁在一起的偏好都是1
4091000	4093000	所以我就說你綁在一起之後
4093000	4095000	你的偏好還是1
4095000	4097000	然後
4097000	4099000	假如這時候還可以保持
4099000	4101000	好人的利益的話
4101000	4103000	那
4103000	4105000	這就已經是一個可以保持好人利益的
4105000	4107000	三個人的遊戲規則
4111000	4113000	感覺有點像
4113000	4115000	數學歸納法之類的
4115000	4117000	對對對
4117000	4119000	這是我們常幹的事情
4119000	4121000	沒有什麼太好的工具
4121000	4123000	然後那個other preference
4123000	4125000	也是這樣嗎
4125000	4127000	把0的全部都綁在一起
4127000	4129000	然後把1的全部都綁在一起
4129000	4131000	是這樣嗎
4131000	4133000	這個問題問得也非常的好
4133000	4135000	就是
4135000	4137000	這個我們綁在一起是0 1綁在一起
4137000	4139000	然後其他的0 1綁在一起
4139000	4141000	這樣
4141000	4143000	那為什麼是這樣子綁的
4143000	4145000	是因為
4145000	4147000	這個cleave的結果說
4147000	4149000	你
4149000	4151000	兩個party
4151000	4153000	的時候在玩的時候
4153000	4155000	你一定有一個方法可以讓他
4155000	4157000	偏離
4157000	4159000	0.5
4159000	4161000	不知道是從0.5
4161000	4163000	偏向1還是從0.5偏向0
4163000	4165000	但是
4165000	4167000	一定會有其中一邊
4167000	4169000	那這是哪一邊不曉得
4169000	4171000	他沒有告訴你
4171000	4173000	但是我這麼
4173000	4175000	0跟1一綁之後
4175000	4177000	假如偏向
4177000	4179000	其中一邊的話在我
4179000	4181000	Maximin的定義裡面就
4181000	4183000	一定會傷害到
4183000	4185000	0或1其中一個
4185000	4187000	0跟1綁在一起
4189000	4191000	不管偏哪一點都不行
4191000	4193000	所以
4193000	4195000	我就可以得到
4195000	4197000	矛盾
4199000	4201000	還蠻神奇的
4201000	4203000	另外一件事情是
4203000	4205000	你可以往下
4205000	4207000	走幾頁嗎
4207000	4209000	我不太記得
4209000	4211000	再往下
4211000	4213000	就是這個
4213000	4215000	就是strong Nash
4215000	4217000	equilibrium的那個方法
4217000	4219000	你就叫一個0和叫一個1
4219000	4221000	出來
4221000	4223000	然後他們直通版就好了
4223000	4225000	那這個方法不能用在Maximin的原因
4225000	4227000	就是因為你可能剛好選到兩個壞人
4229000	4231000	不過0和1
4231000	4233000	有一個人是壞人有關係嗎
4235000	4237000	那我把它
4237000	4239000	講到這邊好了
4239000	4241000	就是
4241000	4243000	我這個派兩個
4243000	4245000	代表出來直通版
4245000	4247000	然後
4247000	4249000	為什麼這件事情
4249000	4251000	在Maximin
4251000	4253000	不work嗎
4255000	4257000	然後這個Maximin
4257000	4259000	的定義是說
4259000	4261000	好人的利益不能被
4261000	4263000	傷害所以
4263000	4265000	在這個Maximin
4265000	4267000	的定義裡面
4269000	4271000	壞人不care他自己的利益
4271000	4273000	增加
4273000	4275000	壞人他可以
4275000	4277000	虧錢沒關係但是好人
4277000	4279000	他就是只是想要惡意的傷害
4279000	4281000	好人那比如說像在
4281000	4283000	這邊紅色的是壞人然後綠色
4283000	4285000	是好人問一下這個
4285000	4287000	這個大家都看
4287000	4289000	分得出來嗎紅色有長腳的是壞人
4289000	4291000	然後綠色
4291000	4293000	圓圈圈沒有長腳的是好人
4293000	4295000	一開始就看得到
4297000	4299000	沒有這個
4299000	4301000	這個有時候用顏色
4301000	4303000	是不夠的因為有些人是
4303000	4305000	是有色盲
4305000	4307000	對所以
4307000	4309000	然後在這邊的話有三個壞人兩個
4309000	4311000	好人然後假如
4311000	4313000	壞人只想要傷害好人的利益
4313000	4315000	的話他可以就
4315000	4317000	我就故意偏向1然後
4317000	4319000	這邊有一個好人就喜歡0的然後他就被
4319000	4321000	被傷害到了然後他也不care
4321000	4323000	這邊好人
4323000	4325000	很高興這個但是
4325000	4327000	只要有一個好人不高興Maximin就
4327000	4329000	不成立
4329000	4331000	所以這個
4331000	4333000	派代表這件事情是
4333000	4335000	在Maximin是不work的
4339000	4341000	這也跟
4341000	4343000	一開始主持人問的問題
4343000	4345000	有關係嗎就是我到底是考慮
4345000	4347000	好人所有的利益
4347000	4349000	加起來還是好人個別的利益
4349000	4351000	那我最嚴格的條件就是
4351000	4353000	每一個好人的利益我都要
4353000	4355000	不能被傷害
4355000	4357000	了解Maximin是
4357000	4359000	每一個好人都不能被傷害
4359000	4361000	對
4365000	4367000	這問題其實滿困難的
4367000	4369000	那這個
4369000	4371000	定義是很tricky因為這個
4371000	4373000	人數一多之後就會有各種排列組合
4373000	4375000	出現
4375000	4377000	然後
4377000	4379000	我問一個比較不相關的問題
4379000	4381000	就是
4381000	4383000	這件事情如果
4383000	4385000	就是有
4385000	4387000	一個東西是
4387000	4389000	完全random然後大家都
4389000	4391000	同意它是random的
4391000	4393000	就譬如說
4393000	4395000	就是有一個
4395000	4397000	太陽的放射線之類的
4397000	4399000	對這也可以
4399000	4401000	不過你要在
4401000	4403000	兩個地方觀察到一樣的東西
4403000	4405000	對
4405000	4407000	那就是
4407000	4409000	有一個東西叫做quantum entanglement
4409000	4411000	就是
4411000	4413000	這件事你知道嗎
4413000	4415000	我知道
4415000	4417000	就是有兩個粒子他們就是
4417000	4419000	譬如說一定要一起
4419000	4421000	spin up或者是一起spin down
4421000	4423000	之類的
4423000	4425000	那我就把這兩個分配給
4425000	4427000	那個在
4427000	4429000	遠處的兩個人
4429000	4431000	然後他們就觀測這個粒子
4431000	4433000	然後spin up就
4433000	4435000	反正就spin up代表一個地方
4435000	4437000	spin down代表另外一個地方
4437000	4439000	那這樣的話是不是就
4439000	4441000	可以解決這件事情
4441000	4443000	就不需要這些protocol
4443000	4445000	其實也會有
4445000	4447000	也會有一些就是
4447000	4449000	你可以操作的方法
4449000	4451000	其實
4451000	4453000	entanglement我知道但是
4453000	4455000	實際上這件事情怎麼做
4455000	4457000	我並不太熟
4457000	4459000	就是譬如說
4459000	4461000	你剛剛講到要先
4461000	4463000	做兩個粒子
4463000	4465000	他是有entanglement的這件事情
4465000	4467000	我就
4467000	4469000	不是很熟然後
4469000	4471000	做
4471000	4473000	這個entanglement的傢伙
4473000	4475000	能不能這個事先
4475000	4477000	事先
4477000	4479000	這個bios到
4479000	4481000	某一個
4481000	4483000	某一邊這我也不太確定
4483000	4485000	也許
4485000	4487000	然後但是好像是需要一些證明
4487000	4489000	才能夠證明說
4489000	4491000	你製造的那個entanglement
4491000	4493000	是公正的這件事情
4493000	4495000	好像是一開始要證明
4495000	4497000	這我真的不知道
4497000	4499000	我只是隨便聽來的
4499000	4501000	然後再來就是
4501000	4503000	製造好entanglement的時候
4503000	4505000	要把這兩個entanglement
4505000	4507000	拿給兩個人
4507000	4509000	這件事情
4509000	4511000	在這個
4511000	4513000	遠距離的定義
4513000	4515000	裡面可能也不是
4515000	4517000	很適合
4517000	4519000	要更好的說明說
4519000	4521000	他做不到啦
4521000	4523000	但是你要把兩個
4523000	4525000	兩個bit
4525000	4527000	拿到給兩個人
4527000	4529000	或者兩個粒子拿給兩個人
4529000	4531000	這件事情
4531000	4533000	其實
4533000	4535000	也是跟這個設定
4535000	4537000	是不太合的
4537000	4539000	那我為什麼不
4539000	4541000	投一個通辦
4541000	4543000	然後就把這個通辦的結果拿給兩個人
4543000	4545000	ok
4545000	4547000	所以好像
4547000	4549000	也不是就可以解決
4549000	4551000	這件事情
4551000	4553000	對但是我覺得
4553000	4555000	有探討的空間
4555000	4557000	因為某一些可能
4557000	4559000	是可以證明
4559000	4561000	你真的可以做到比如說公正之類的
4561000	4563000	也許你是可以證明做得到的
4563000	4565000	然後另外一件
4565000	4567000	想問的
4567000	4569000	就是
4569000	4571000	一開始我說的那個
4571000	4573000	就是大家同時
4573000	4575000	123然後大家同時
4575000	4577000	縮一個數字
4577000	4579000	然後XOR起來
4579000	4581000	那就是為什麼不能說
4581000	4583000	就是那大家在同時
4583000	4585000	在就是
4585000	4587000	11點59分
4587000	4589000	的時候就
4589000	4591000	要縮出那個
4591000	4593000	數字然後
4593000	4595000	如果超過12點的話就算你輸了
4595000	4597000	就是因為
4597000	4599000	這個fail stop也是大概是這個情況
4599000	4601000	就是fail stop就是說
4601000	4603000	你要是慢出你就輸了
4605000	4607000	對但是
4607000	4609000	我覺得這個同時
4609000	4611000	這件事情主要是
4611000	4613000	實務上有困難
4613000	4615000	就是一個在
4615000	4617000	中國一個在美國的話
4617000	4619000	距離也是
4619000	4621000	也是很遠然後
4621000	4623000	這個傳輸訊息光纖
4623000	4625000	可能也是有個
4625000	4627000	零點零幾秒的delay
4627000	4629000	那零點零幾秒
4629000	4631000	再加上實務上
4633000	4635000	光纖假如
4635000	4637000	直接這個
4637000	4639000	有這個直接的線通的話
4639000	4641000	可能還好但是
4641000	4643000	實務上的網路就是中間有
4643000	4645000	經過好多台主機然後
4645000	4647000	這個延遲可能都
4647000	4649000	可能快要一秒之類的
4649000	4651000	然後你也沒有辦法確定
4651000	4653000	到底有多同時
4653000	4655000	59分59秒
4655000	4657000	這樣這個一秒的間隔
4657000	4659000	夠不夠或者是
4659000	4661000	太多這個太多的話就是
4661000	4663000	會有一點慢出嘛
4663000	4665000	這個很難決定所以實務上
4665000	4667000	就是這件事情
4667000	4669000	同時這件事情主要是在
4669000	4671000	實務上不好做
4671000	4673000	然後所以大家就覺得
4673000	4675000	這沒有辦法
4675000	4677000	做到或者是沒有辦法證明的話
4677000	4679000	就放棄了這樣子
4683000	4685000	那fail stop是說
4685000	4687000	也是規定一個時間
4687000	4689000	對fail stop
4691000	4693000	fail stop是
4693000	4695000	這樣說好了
4695000	4697000	同時的話
4697000	4699000	規定比較緊嘛
4699000	4701000	同時的話是說
4701000	4703000	我的訊息
4703000	4705000	傳出去以後
4705000	4707000	不多不少就要
4707000	4709000	一秒鐘送到這件事情
4709000	4711000	的同時我提早到了可能也不行
4711000	4713000	因為提早到了就會
4713000	4715000	有一點相對慢出的情況出現
4717000	4719000	那晚到了也不行
4719000	4721000	就是晚到了你到底是慢出
4721000	4723000	還是它傳的慢
4723000	4725000	這我不曉得
4725000	4727000	但是fail stop的話是說
4727000	4729000	我有一個比較大的
4729000	4731000	range我可以
4731000	4733000	這個零秒
4733000	4735000	零秒鐘到或者十分鐘到
4735000	4737000	都算是合格
4739000	4741000	所以這個range比較大
4741000	4743000	然後我十分鐘等你
4743000	4745000	等不到你才算沒出
4745000	4747000	這個就比
4747000	4749000	剛好我要
4749000	4751000	一秒鐘或一分鐘
4751000	4753000	出了然後送到
4753000	4755000	這個
4755000	4757000	條件是
4757000	4759000	是
4759000	4761000	這個strictly weaker
4765000	4767000	很有趣的talk謝謝
4767000	4769000	謝謝
4769000	4771000	那個我們其實也
4771000	4773000	差不多超過十分鐘
4773000	4775000	那就請大家再把
4775000	4777000	麥克風打開一次我們再次謝謝我們講者
4777000	4779000	維凱謝謝大家
4779000	4781000	好那一樣
4781000	4783000	就是大家如果有問題
4783000	4785000	其實
4785000	4787000	可以上我們的網站然後去找到
4787000	4789000	維凱的這個頁面就是在
4789000	4791000	我們的網站的右邊可以點
4791000	4793000	然後就可以看到他的聯絡資料
4793000	4795000	或者是當然你也可以上網直接搜尋
4795000	4797000	維凱或是維凱的paper你也可以看到
4797000	4799000	這些資料那如果你對他的paper
4799000	4801000	有興趣的話呢
4801000	4803000	他剛有寫在我們的
4803000	4805000	他現在有秀在他的
4805000	4807000	這個螢幕上那
4807000	4809000	當然你也可以看我們大概
4809000	4811000	再過一兩天會把
4811000	4813000	演講的影片上傳然後你就可以去
4813000	4815000	看然後去找那也歡迎大家
4815000	4817000	跟維凱聯絡然後有合作的
4817000	4819000	機會或是有更多的討論那我們
4819000	4821000	就再次謝謝他那也謝謝大家來參加
4821000	4823000	今天的Tarot Talk
4823000	4825000	那我們今天就到這裡囉謝謝
4825000	4827000	大家掰掰謝謝大家
