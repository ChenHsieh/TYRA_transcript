start	end	text
0	2000	呃,都可以
2000	4000	你要重新再介紹嗎?還是
4000	6000	沒關係,不用不用
6000	8000	那就直接開始吧
8000	10000	OK,那就交給你
10000	12000	我希望網路等一下情況OK啦
12000	14000	萬一又斷話,那再跟我講一下
14000	16000	好,那現在
16000	18000	全螢幕的畫面是OK的嗎?
18000	20000	OK的
20000	22000	好,OK
22000	24000	那我就直接開始啦
24000	26000	也謝謝剛剛主持人偉哲的介紹
26000	28000	那我是來自海大化工系
28000	30000	博士班的潘浩仁
30000	32000	那今天要報告的主題
32000	34000	就是和我的一個研究有關係
34000	36000	它是有關
36000	38000	P4結晶製程最佳化的一個
38000	40000	高效能的演算法
40000	42000	好,那首先
42000	44000	在開始講今天的題目之前
44000	46000	我要先釐清一件事情
46000	48000	因為聽到結晶這兩個字
48000	50000	如果您是材料背景
50000	52000	或是您可能是化學背景的
52000	54000	同學
54000	56000	或者是學者的話
56000	58000	你可能會想說
58000	60000	那我可能要探討的是
60000	62000	比方金格排列的問題
62000	64000	比方一些morphology
64000	66000	比方說可能我會去想說要打SRD
66000	68000	之類的狀況
68000	70000	但是在我們
70000	72000	程序系統工程領域
72000	74000	也就是這個PSE的領域裡面
74000	76000	我們是泛指任何
76000	78000	從溶液裡面
78000	80000	得到固體的process
80000	82000	所以今天哪怕只是一個沉澱反應
82000	84000	我們也會把它廣義的稱為
84000	86000	crystallization
86000	88000	那在這樣的定義之下的話
88000	90000	這個crystallization
90000	92000	它會是一個分離和
92000	94000	純化的一個process
94000	96000	那它可以用這個連續的方式
96000	98000	也可以用batch的方式
98000	100000	來進行
100000	102000	那SRD是所謂的過飽和度
102000	104000	super saturation
104000	106000	那它可以用以下四種方式
106000	108000	來得到這個過飽和度
108000	110000	那今天的研究我們討論的是
110000	112000	batch的這個結晶製程
112000	114000	那batch的結晶製程
114000	116000	它大部分是拿來製造一些
116000	118000	高附加價值的這個化合物
118000	120000	比方說特用化學品
120000	122000	比方食品添加劑
122000	124000	比方這個
124000	126000	一些藥物之類的化合物
126000	128000	那
128000	130000	它相對於這個連續式來講
130000	132000	它的這個操作彈性比較大一些
132000	134000	它也可以處理一些
134000	136000	比較不好處理的系統
136000	138000	比方說可能今天有這個
138000	140000	毒化物
140000	142000	可能這個漿液
142000	144000	能度比較高
144000	146000	它都有機會可以來做處理
146000	148000	那結晶的話
148000	150000	它大致上會有兩個
150000	152000	最基本的這個mechanism
152000	154000	那就稱為nucleation
154000	156000	成合和crystal growth
156000	158000	長晶
158000	160000	那nucleation的意思就是這個
160000	162000	新的晶體生成
162000	164000	那它生成的時候
164000	166000	它的體積基本上是趨近於零的
166000	168000	那crystal growth
168000	170000	就是一個晶體已經存在在batch裡面
170000	172000	那它就因為會
172000	174000	消耗過飽和度它長得越來越大
174000	176000	這我們就稱為crystal growth
176000	178000	那這個
178000	180000	nucleation又可以被分為以下
180000	182000	幾種不同的mechanism
182000	184000	那第一種是homogeneous
184000	186000	primary nucleation
186000	188000	那它是一個熱力學的自發反應
188000	190000	它只有在這個過飽和度
190000	192000	比較高的時候它才可能會發生
192000	194000	那第二種是
194000	196000	所謂的heterogeneous primary nucleation
196000	198000	它是透過一些
198000	200000	就是不同的
200000	202000	particle
202000	204000	來誘導的
204000	206000	比方說它可能會透過一些粉層particle來做誘導
206000	208000	那第三種叫secondary nucleation
208000	210000	它的意思是指說
210000	212000	這個
212000	214000	nucleation的生成是在
214000	216000	現有晶體的這個表面
216000	218000	那比方說在batch裡面這晶體可能會互相碰撞
218000	220000	它就有一些這個磨損
220000	222000	那磨損下來的這些洩洩
222000	224000	它的體積基本上就趨近於零
224000	226000	那我們就把它
226000	228000	定義為一種nucleation
230000	232000	所以今天舉個例子
232000	234000	如果今天有一個這個batch
234000	236000	它一開始是沒有任何的晶體在裡面的話
236000	238000	那在這個batch的早期
238000	240000	因為要從
240000	242000	把晶體從無中生有
242000	244000	所以它會主要是primary nucleation
244000	246000	但到了後期的話
246000	248000	因為晶體數量多了
248000	250000	所以crystal growth和secondary nucleation
250000	252000	就會變成主要的這一個機制
252000	254000	那在操作一個batch的時候
254000	256000	我們通常可以在一開始的時候
256000	258000	加入一些晶種
258000	260000	也就是所謂的seed crystal
260000	262000	或簡稱seed
262000	264000	那理由是因為
264000	266000	這些seed可以很快的把這個過飽和度
266000	268000	給消耗掉
268000	270000	那一旦消耗掉以後呢
270000	272000	就可以抑制所謂的primary nucleation
272000	274000	那這樣有什麼好處呢
274000	276000	這樣子的好處是
276000	278000	因為primary nucleation有一個特性
278000	280000	叫做所謂的stochastic
280000	282000	就是它有一個
282000	284000	隨機性
284000	286000	所以在這樣子的操作之下
286000	288000	你就可以讓這個process
288000	290000	是比較穩定的
292000	294000	好
294000	296000	那接下來談到要怎麼樣
296000	298000	去衡量一個產品的品質呢
298000	300000	那當然我們知道
300000	302000	產品純度會是一個很重要的指標
302000	304000	但是除了純度以外
304000	306000	另外一個重要的指標
306000	308000	其實是所謂的粒徑分布
308000	310000	crystalsat distribution
310000	312000	或是說csd
312000	314000	那一個好的csd
314000	316000	通常會有以下的一些特性
316000	318000	比方說它必須要是單峰的
318000	320000	比方說它在這個
320000	322000	細小顆粒的
322000	324000	這個比例應該要低一點
324000	326000	那再來就是
326000	328000	因為在一些情境之下
328000	330000	比方說我今天是想要做一個藥物
330000	332000	那我會希望這個藥物在人體裡面的
332000	334000	這個溶解曲線
334000	336000	是一個我們想要的一個曲線
336000	338000	那這樣子我可能就會需要
338000	340000	一個指定好它的
340000	342000	一個產品的平均粒徑
342000	344000	和這個csd的所謂variance
344000	346000	那如果我們可以
346000	348000	去想辦法去設計process
348000	350000	讓這個產品的平均粒徑
350000	352000	和variance達到這樣子的一個要求
352000	354000	那它也會是我們
354000	356000	想要的一個情境
356000	358000	那如果今天這個csd
358000	360000	它的這個特性不太好的話
360000	362000	它可能就會導致一些問題
362000	364000	比方說
364000	366000	今天這個產品它有所謂的雙峰的csd
366000	368000	或是它的這個
368000	370000	粒徑的
370000	372000	分布或是說它的這個細小顆粒
372000	374000	的比例太高
374000	376000	它可能就會導致以下這些問題
376000	378000	包含了這個過高的粒頻阻力
378000	380000	包含了需要用
380000	382000	很多這個washing liquid
382000	384000	來清洗這個固體
384000	386000	或甚至是說在
386000	388000	出生的時候
388000	390000	這些小顆粒可能會直接貼在
390000	392000	這個管壁上面
392000	394000	這是我們不想要看到的狀況
394000	396000	那所以基本上
396000	398000	該論案就是我們會想要
398000	400000	抑制一些就是過度的
400000	402000	new creation
404000	406000	好,那再來如果我談到
406000	408000	一些這個有關
408000	410000	csd控制的一些策略
410000	412000	那它事實上可以被分為兩大類
412000	414000	第一大類我們稱為model-free
414000	416000	feedback control
416000	418000	那它的想法是它會使用一個
418000	420000	所謂的回饋控制
420000	422000	feedback control loop
422000	424000	和相對應的一些
424000	426000	製程的一些分析科技
426000	428000	就是所謂的PAT
428000	430000	來做這個實施
430000	432000	那基本上這樣子的
432000	434000	控制策略我只要知道一些
434000	436000	系統基本的
436000	438000	一些特性,比方說
438000	440000	手邊耳提就ok了
440000	442000	那這邊所謂的model-free
442000	444000	這個model是指說
444000	446000	crystal growth和new creation
446000	448000	的一些動力學,我們在
448000	450000	使用這樣子類型的策略的時候
450000	452000	我們不需要知道這些
452000	454000	長經和成分的動力學
454000	456000	那有其中一種
456000	458000	這所謂的model-free的這個策略
458000	460000	叫做supersaturation control
460000	462000	那有些paper會把它
462000	464000	叫concentration control
464000	466000	那它的意思是說
466000	468000	它在整個batch裡面我們把
468000	470000	這個過飽和度就控制在一個
470000	472000	並值,那當然
472000	474000	它會需要一些相對應的
474000	476000	分析的一些
476000	478000	技術,那比方說像這樣子的話
478000	480000	就會需要一個
480000	482000	online的這個濃度量測
482000	484000	那比方說就可以使用FTIR
484000	486000	來做這樣的事情
486000	488000	好,這樣的策略還不錯
488000	490000	因為我們不需要太多的資訊
490000	492000	但是它有缺點就是
492000	494000	我們還是沒有辦法去
494000	496000	直接的去
496000	498000	設計這一個產品的這個
498000	500000	CSD,因為它畢竟是沒有一個
500000	502000	model來描述的
502000	504000	那所以相對應來講
504000	506000	另外一種方法稱為
506000	508000	model-based control,它基本上就會
508000	510000	使用一個叫做
510000	512000	population density function的一個
512000	514000	函數來描述這個
514000	516000	CSD,那這個CSD在
516000	518000	batch裡面怎麼樣的去
518000	520000	改變呢?我們就會用一個叫做
520000	522000	population balance equation
522000	524000	力數平衡方程來
524000	526000	做一個描述
526000	528000	那在這樣子的策略裡面我們通常會
528000	530000	去乘從最佳化問題
530000	532000	去找到所謂的這個
532000	534000	這樣的控制策略
534000	536000	那這個目標函數就可能包含了一些
536000	538000	比方batch time
538000	540000	或是包含了一些產品CSD的
540000	542000	一些統計的一些特性
542000	544000	那decision variable
544000	546000	就是所謂的這個
546000	548000	控制的這個
548000	550000	策略,那比方說可能
550000	552000	是跟溫度軌跡有關
552000	554000	那或者是我可能會再考慮
554000	556000	一些所謂的這個seed recipe
556000	558000	也就是我要加
558000	560000	多少seed
560000	562000	和它的平均歷經之類的
562000	564000	那其中一個使用
564000	566000	這種model-based control
566000	568000	的這個挑戰是
568000	570000	它的這個計算負擔會比較大
570000	572000	因為剛剛所謂的這個PBE
572000	574000	它是屬於平衡分方程式
574000	576000	所以它的計算負擔是
576000	578000	比較大的
578000	580000	那這也是我們這個研究的一個
580000	582000	這個purpose,我們希望
582000	584000	透過一些高效能的
584000	586000	計算方式來對於
586000	588000	這些批次結晶製程的這個
588000	590000	最佳化去做求解
590000	592000	那我們會分析幾個問題,包含的
592000	594000	這個目標函數之間的
594000	596000	一些競爭關係,tradeoff
596000	598000	那再來就是我們想要去找說
598000	600000	這個seed recipe
600000	602000	design和一些這個
602000	604000	控制策略的一些
604000	606000	經驗法則,所謂的rule of thumb
606000	608000	那再來我們也會去探討說
608000	610000	如果我們今天使用的是
610000	612000	長期跟溶解這樣的side-coding process
612000	614000	那它對於
614000	616000	CSD的這個控制會有怎麼樣的
616000	618000	一個影響
618000	620000	好,那再來我們要介紹一些
620000	622000	這個理論,那這個理論的話
622000	624000	一開始我們要先介紹
624000	626000	所謂的這個population density function
626000	628000	那如剛剛所說,它是用來
628000	630000	描述CSD的
630000	632000	那假設今天有一個
632000	634000	系統我們只用一個這個
634000	636000	經體的這個特徵
636000	638000	長度來描述,比方說
638000	640000	假設今天這個系統的
640000	642000	這個結晶它都是結晶球狀的
642000	644000	那我可能就可以用
644000	646000	直徑或半徑來作為這個
646000	648000	特徵長度
648000	650000	那如果有這樣子的描述
650000	652000	以後,我們把這個
652000	654000	PDF對L積分
654000	656000	積分出來的結果就會是
656000	658000	這個Batch裡面的
658000	660000	這個結晶數量
660000	662000	那再來我們可以定義一個
662000	664000	這個PDF的這個moment
664000	666000	那這個moment它當然不會是
666000	668000	翻成瞬間或是時刻
668000	670000	那它在物理裡面
670000	672000	有一些別的翻譯,但我覺得好像
672000	674000	都不太貼合我們的這個
674000	676000	情境,所以以下我又
676000	678000	直接稱為它的moment,我就不
678000	680000	做翻譯了,那moment的
680000	682000	定義如下,那從
682000	684000	μ0到μ3這些moment它都有
684000	686000	相對應的物理意義
686000	688000	那μ3的物理意義是這個
688000	690000	經體的這個總體積
690000	692000	好,那我們定義好
692000	694000	這個PDF
694000	696000	以後呢,我們就可以來寫出相對應的
696000	698000	這個population balance equation了
698000	700000	那在這個研究我們有一些
700000	702000	這個假設,那就包含了
702000	704000	這個Batch裡面的
704000	706000	celery是均勻混合的
706000	708000	再來它的體積是定值
708000	710000	那再來我們也忽略
710000	712000	一些現象,比方說
712000	714000	經體碰撞
714000	716000	直接碎成兩半,這個叫crystal breakage
716000	718000	或是說攪一攪
718000	720000	它就黏在一起了,這個叫aggregation
720000	722000	聚集,那我們都
722000	724000	假設這個情況我們先不考慮
724000	726000	那再來就是成和的
726000	728000	這個經體
728000	730000	它一開始的體積會是0
730000	732000	那在這樣的假設之下
732000	734000	我們就可以得到一個相對應的這個
734000	736000	PPE
736000	738000	那如各位所見,它就是一個平衡的分方程式
738000	740000	那等一下會對這個方程式
740000	742000	裡面的一些
742000	744000	物理意義和一些
744000	746000	算法來做一些探討
746000	748000	好,那如果
748000	750000	去看剛剛那個PPE的話
750000	752000	它裡面會有一些這個
752000	754000	growth和dissolution的這一個
754000	756000	這個動力式
756000	758000	那所以我們要介紹一下
758000	760000	這個動力學的一個部分
760000	762000	那像剛剛講到的
762000	764000	這一個結晶的這個驅動力
764000	766000	是這個super saturation
766000	768000	那光是super saturation其實就有
768000	770000	很多種不同的定義了
770000	772000	那這邊列出兩個最常見的
772000	774000	那就是relative和absolute
774000	776000	的這個定義
776000	778000	那再來這個我們可以看到這個
778000	780000	super saturation的定義
780000	782000	會和溶液的濃度
782000	784000	和這個飽和濃度的
784000	786000	差距有關係
786000	788000	那溶液的濃度本身可以用mass balance
788000	790000	來計算,那這個
790000	792000	BFT function我們就假設它是一個
792000	794000	溫度的函數
794000	796000	好,那再來
796000	798000	我們就假設,因為我們今天討論的
798000	800000	都是所謂的加入精種的
800000	802000	這個P4結晶製程
802000	804000	所以這個primary nucleation
804000	806000	都是可以被忽略的
806000	808000	那在這樣的情況之下,我們就可以
808000	810000	去定義這個
810000	812000	growth rate和nucleation rate
812000	814000	這個動力學的表示
814000	816000	是,那目前在
816000	818000	這個學術界還沒有一個
818000	820000	很完整的理論來描述
820000	822000	這樣的現象,所以我們還是會用一些
822000	824000	經驗式來表示
824000	826000	那我們可以注意到的是
826000	828000	growth rate被分為兩個部分
828000	830000	第一部分只和
830000	832000	super saturation有關
832000	834000	第二部分只和晶體本身的
834000	836000	大小有關,所以假設
836000	838000	後面這個部分等於1的話
838000	840000	我們就稱為size independent growth
840000	842000	那假設不等於1的話
842000	844000	我們就會把它稱為size independent growth
844000	846000	那再來
846000	848000	對大部分的系統而言,這個
848000	850000	nucleation rate對過飽和度的
850000	852000	這個敏感度會比
852000	854000	growth rate還要大,所以這個
854000	856000	參數小b就會比小g來的大
858000	860000	好,那再來要介紹一些
860000	862000	怎麼樣求解這個PBE
862000	864000	的這個方法,那我們一開始
864000	866000	會把這個PBE分成
866000	868000	兩個部分,那
868000	870000	數學上稱為homogeneous
870000	872000	和non-homogeneous的部分
872000	874000	那在物理上就是
874000	876000	有關seed的和nucleation
876000	878000	的兩個部分
878000	880000	那為什麼要把它
880000	882000	這樣子拆開來呢?有兩個理由
882000	884000	那第一個理由是
884000	886000	在套用一些促使方法的時候會比較
886000	888000	方便,那另外一個理由
888000	890000	是我們可以把這個
890000	892000	seed和nucleation
892000	894000	分開來去做定量的
894000	896000	描述,那如剛剛所說的
896000	898000	我們會希望抑制nucleation
898000	900000	所以我們把它做定量描述
900000	902000	會是一個比較好的一個做法
904000	906000	好,那在開始講解一些
906000	908000	促使方法之前,我們先給各位
908000	910000	看一個簡單的例子
910000	912000	那這個例子裡面的PBE
912000	914000	它是有所謂解析解的,那順便
914000	916000	了解一下這裡面的一些像的
916000	918000	一些物理意義
918000	920000	那我們假設今天有一個系統,它的
920000	922000	growth rate和nucleation rate
922000	924000	都是常數
924000	926000	那這樣子我們就可以去寫出
926000	928000	相對應的PBE,並且
928000	930000	我們可以去寫出它相對應的解析解
930000	932000	好,那這個解析解的
932000	934000	物理意義該怎麼樣去判讀呢?
934000	936000	如果說今天有一些
936000	938000	這個seed crystal
938000	940000	它一開始的這個pdf
940000	942000	長得像橘色這樣子的一個
942000	944000	樣子,那
944000	946000	經過一段時間它們會長大
946000	948000	那長得多大呢?那大小
948000	950000	是不是就會增加growth rate
950000	952000	乘以batch time
952000	954000	所以這個黃色的部分
954000	956000	就直接往右移
956000	958000	移了growth rate乘以batch time
958000	960000	那nucleation的
960000	962000	這個部分呢,在最一開始
962000	964000	生成的那個晶體
964000	966000	它的大小就也會剛好
966000	968000	是growth rate乘以batch time
968000	970000	所以它就會有像這樣子
970000	972000	的一個pdf
972000	974000	好,那當然剛剛這個只是
974000	976000	特例中的特例
976000	978000	所以我們要講一些這個
978000	980000	常用的數值方法
980000	982000	大部分來講這個數值方法
982000	984000	可以被分為兩大類
984000	986000	那第一大類稱為massive moment
986000	988000	它有兩個版本,standard
988000	990000	和quadrature的
990000	992000	那standard的版本它是把這個
992000	994000	PBE轉成
994000	996000	所謂的ODE,那它
996000	998000	只能被用在size independent
998000	1000000	的kinetic
1000000	1002000	的系統
1002000	1004000	那quadrature的版本它是把PBE
1004000	1006000	換成所謂的
1006000	1008000	differential algebraic equation
1008000	1010000	有微分方程和代數方程
1010000	1012000	的一個連立方程式
1012000	1014000	那它就可以被用來處理
1014000	1016000	size independent的一些
1016000	1018000	kinetics
1018000	1020000	它的好處是
1020000	1022000	它可以很快地去解出這個
1022000	1024000	moment,但是它沒有辦法
1024000	1026000	去找出這個
1026000	1028000	pdf它完整的
1028000	1030000	這個形式,那下面給各位
1030000	1032000	看一下,如果是standard的
1032000	1034000	版本的話,它的這個
1034000	1036000	ODE會長這個樣子
1036000	1038000	那各位可以看到
1038000	1040000	它把seed和nucleation就
1040000	1042000	分開來做這個求解了
1044000	1046000	那第二個方法就是會去
1046000	1048000	involve到一些
1048000	1050000	這個離算化的方法
1050000	1052000	那這方法有很多種
1052000	1054000	那常用的包含的所謂的
1054000	1056000	massive characteristic
1056000	1058000	massive classes,或是所謂的
1058000	1060000	這個有限體積法
1060000	1062000	那這樣的好處當然就是它
1062000	1064000	可以比較完整的
1064000	1066000	去保留這個pdf的
1066000	1068000	這一個形式,但是
1068000	1070000	因為這樣的方法會基於
1070000	1072000	一些CSD的
1072000	1074000	解析度
1074000	1076000	或者是一些數值
1076000	1078000	方法上面的一些準確度
1078000	1080000	它會需要很多的
1080000	1082000	discretization point
1082000	1084000	那它就會導致它的這個
1084000	1086000	計算的負擔就會變得比較
1086000	1088000	重,好那
1088000	1090000	我們在這個研究裡面我們使用的是
1090000	1092000	這個NOCH
1092000	1094000	它的想法是它把這個
1094000	1096000	PDE降為成
1096000	1098000	所謂的特徵曲線
1098000	1100000	characteristic curve
1100000	1102000	那這些曲線
1102000	1104000	它是用ODE
1104000	1106000	的family來表示的
1106000	1108000	好
1108000	1110000	那剛剛是一些常用的
1110000	1112000	數值方法,那再來要介紹一個
1112000	1114000	今天這個研究
1114000	1116000	可以大幅降低計算負擔
1116000	1118000	的一個關鍵
1118000	1120000	那它是一個所謂的
1120000	1122000	座標轉換,coordinated transformation
1122000	1124000	那這個轉換
1124000	1126000	它原先是由兩位
1126000	1128000	德國學者提出來的
1128000	1130000	它的想法是,像我們剛剛看到
1130000	1132000	的一個例子就是
1132000	1134000	固定漲值數據的話
1134000	1136000	那這個C的CSD會直接
1136000	1138000	平移,但是我們可以
1138000	1140000	想一下,既然Grossewald
1140000	1142000	它的單位是速度
1142000	1144000	那我們是不是就可以看
1144000	1146000	這個我們
1146000	1148000	國中學過的一個VT圖來做
1148000	1150000	連結,那我們都知道
1150000	1152000	在國中學的VT圖
1152000	1154000	底下的這個面積,或是說
1154000	1156000	如果我們學過積分的話
1156000	1158000	那這個面積就會是位移
1158000	1160000	而這個位移其實就是
1160000	1162000	晶體長大的這一個
1162000	1164000	大小,所以我們今天就
1164000	1166000	定義一個transform time
1166000	1168000	tau,那這個tau的意義
1168000	1170000	就是晶體從
1170000	1172000	Batch1開始到某個
1172000	1174000	時間,它長大了這個大小
1174000	1176000	那這個
1176000	1178000	transform time只是為了方便稱呼
1178000	1180000	但它的單位其實是長度
1180000	1182000	所以這個要先釐清一下
1182000	1184000	避免一些誤會
1184000	1186000	好,那有了這個tau
1186000	1188000	以後有什麼好處呢?我們就可以
1188000	1190000	直接把這個C的
1190000	1192000	PBE的這個性解
1192000	1194000	explicit solution直接可以寫出來了
1194000	1196000	那各位可以看到
1196000	1198000	不管是size independent
1198000	1200000	或是size dependent的系統
1200000	1202000	都可以被這樣子寫出來
1202000	1204000	而且這個解,它都
1204000	1206000	可以直接被一個variable
1206000	1208000	tau來表示,那這樣子
1208000	1210000	就太好了啊,我們就只需要
1210000	1212000	透過這個tau
1212000	1214000	或是說這個transform time
1214000	1216000	來表示這個
1216000	1218000	C的PBE的解就OK了
1218000	1220000	那這樣子我們當然可以很
1220000	1222000	大幅度的去降低
1222000	1224000	這個計算的負擔
1224000	1226000	好,那介紹完了
1226000	1228000	這些需要的理論以後呢
1228000	1230000	我們可以開始來看這個
1230000	1232000	一些case study了
1232000	1234000	那第一個部分我們會想要看的是一些
1234000	1236000	目標函數之間的競爭關係
1236000	1238000	那如同剛剛所講的
1238000	1240000	在model-based的control
1240000	1242000	就是想要去在
1242000	1244000	這個目標函數的
1244000	1246000	一個限制之下
1246000	1248000	我們想要找最好的這個
1248000	1250000	control input
1250000	1252000	好,那
1252000	1254000	這目標函數我們大概分為
1254000	1256000	三大類,那第一類是我們就
1256000	1258000	直接想要最小化這個new creation
1258000	1260000	的這個moment
1260000	1262000	或是我們想要最大化這個產品的
1262000	1264000	平均逆境,或是想要最小化
1264000	1266000	這個產品的這個所謂
1266000	1268000	CSD的變異係數
1268000	1270000	coefficient of variation
1270000	1272000	好,那再來會有一個問題是
1272000	1274000	我們要怎麼樣定義
1274000	1276000	最好的一個策略
1276000	1278000	因為這其實是一個大哉問
1278000	1280000	因為有一個研究
1280000	1282000	那這個研究是由我的指導教授
1282000	1284000	和他的一些這個
1284000	1286000	以前的一些團隊的一個研究
1286000	1288000	那這個研究發現
1288000	1290000	這個最佳的這個控制
1290000	1292000	這個軌跡的這個profile
1292000	1294000	好像會和我選擇的目標函數
1294000	1296000	有很大的一個關係
1296000	1298000	那這樣就導致一個問題了
1298000	1300000	就表示這目標函數
1300000	1302000	之間的競爭關係可能很強烈
1302000	1304000	那再來就是
1304000	1306000	有沒有一個general guideline
1306000	1308000	來作為這個batch
1308000	1310000	crystallization process的這個
1310000	1312000	操作的這個規律
1312000	1314000	好,所以我們就打算說
1314000	1316000	我們來考慮一些
1316000	1318000	目標函數,然後我們去分析它的一些關係
1318000	1320000	那我們使用了
1320000	1322000	六個單一目標函數
1322000	1324000	那它們的定義如下,可以看到它就和
1324000	1326000	neutration moment
1326000	1328000	和平均力勁
1328000	1330000	和這個變異係數有相關
1332000	1334000	好,那我們要怎麼樣去
1334000	1336000	分析這種多目標函數這個最佳化呢
1336000	1338000	我們使用的是
1338000	1340000	weighting sum method
1340000	1342000	它的idea是,我把這個目標函數
1342000	1344000	寫成兩個單一目標函數
1344000	1346000	它們的一個線性疊加
1346000	1348000	那alpha這一個參數
1348000	1350000	就會是所謂的這個
1350000	1352000	weighting vector
1352000	1354000	它要在求解最佳化化過0之前
1354000	1356000	先被指定好
1356000	1358000	那當我指定好以後呢,再去求解
1358000	1360000	這個最佳化問題
1360000	1362000	就可以得到這個
1362000	1364000	platofront
1364000	1366000	寫成PF上面的一個點
1366000	1368000	好,那
1368000	1370000	如果這個alpha設為0或是1的話
1370000	1372000	那我們可以得到的是
1372000	1374000	PF的這個端點
1374000	1376000	而β1和β2
1376000	1378000	則是這個scale vector
1378000	1380000	它可以來處理一些
1380000	1382000	避免兩個目標函數
1382000	1384000	的這個數值的差異
1384000	1386000	太大的一個問題
1388000	1390000	好,那這個β要怎麼選呢
1390000	1392000	那我們可以打算用
1392000	1394000	這樣的方式
1394000	1396000	我們先去找出PF的這個端點
1396000	1398000	那找完端點以後呢
1398000	1400000	我們再定義所謂的
1400000	1402000	normalized objective function
1402000	1404000	我們把這個目標函數
1404000	1406000	壓縮到0到1之間
1406000	1408000	那這樣子就可以去定義
1408000	1410000	相對應的這個β
1410000	1412000	另外一個好處是
1412000	1414000	因為我們會想要知道在眾多的
1414000	1416000	Plato optimal solution裡面
1416000	1418000	哪一個solution可以代表最好的一個
1418000	1420000	Tradeoff
1420000	1422000	所以我們就定義在這個
1422000	1424000	normalized的這個
1424000	1426000	目標函數平面上
1426000	1428000	我們找一個點
1428000	1430000	遠點的距離最短
1430000	1432000	那遠點表示的是
1432000	1434000	兩個目標函數最好的一個
1434000	1436000	最好的一個值
1436000	1438000	所以我們把這個
1438000	1440000	距離視為最短就可以表示
1440000	1442000	這個值它和
1442000	1444000	單一目標函數的最佳解的差異
1444000	1446000	可以被最小
1446000	1448000	而這個解我們把它稱為
1448000	1450000	Neapoint
1450000	1452000	好,那
1452000	1454000	有了這些先備知識以後我們就可以
1454000	1456000	去陳述這個最佳化問題了
1456000	1458000	那我們在這邊先考慮的是
1458000	1460000	單一個Growth stage
1460000	1462000	還有Size independent
1462000	1464000	的這個kinetics
1464000	1466000	好,那我們也會考慮一些這個
1466000	1468000	限制式,那比方說
1468000	1470000	我們會想要
1470000	1472000	不好意思,想要考慮一些這個
1472000	1474000	Production rate的
1474000	1476000	這個限制,還有
1476000	1478000	Batch time的限制,還有
1478000	1480000	Control input的限制
1480000	1482000	那我們這邊的Control input的設為
1482000	1484000	Growth rate,當然也可以
1484000	1486000	設成Temperature,也可以設成
1486000	1488000	Super saturation,那它們都是
1488000	1490000	可以透過kinetic的
1490000	1492000	代數關係轉換的,所以這個
1492000	1494000	實際上是可以被視為
1494000	1496000	等價的,那在
1496000	1498000	這樣的情況之下我們就可以去寫出
1498000	1500000	這個最佳化問題的這個
1500000	1502000	Problem formulation,那如這個
1502000	1504000	投影片上所示
1504000	1506000	好,那像這樣的
1506000	1508000	最佳化問題,因為它的
1508000	1510000	Input variable和
1510000	1512000	State variable,就是Growth rate
1512000	1514000	和這個Nucleation moment
1514000	1516000	都是時間的函數
1516000	1518000	那它是屬於所謂的Dynamic
1518000	1520000	Optimization problem
1520000	1522000	好,那在這個文篇
1522000	1524000	裡面有很多種來求解這個
1524000	1526000	DOP的方法,那在
1526000	1528000	我們今天這個研究
1528000	1530000	我們就使用的是
1530000	1532000	Optimum control
1532000	1534000	Theory,那這個
1534000	1536000	共識理論呢,它可以
1536000	1538000	透過一個叫Pond-Stratton's
1538000	1540000	Minimum Principle的一個理論
1540000	1542000	來推導出
1542000	1544000	最佳控制軌跡的這個
1544000	1546000	所謂必要條件
1546000	1548000	Necessary condition
1548000	1550000	那這個condition
1550000	1552000	它是以一個
1552000	1554000	Two-point boundary variable problem的形式
1554000	1556000	來表示
1556000	1558000	好,那聽起來
1558000	1560000	這方法很好,因為它可以直接就
1560000	1562000	推導出這個necessary condition
1562000	1564000	但是它會有一些這個挑戰
1564000	1566000	第一個是
1566000	1568000	我光是要寫出這個TPPVP
1568000	1570000	可能就很有挑戰性了
1570000	1572000	再來就是,當我們要
1572000	1574000	求解這個boundary variable problem
1574000	1576000	那我們知道在數值的方法上
1576000	1578000	它可能會有一些
1578000	1580000	convergence的一些問題
1580000	1582000	好,但是在我們
1582000	1584000	今天這個研究,我們只要
1584000	1586000	透過剛剛的這一個
1586000	1588000	coordinate transformation
1588000	1590000	和一些這個假設,我們就可以
1590000	1592000	把這個PPPVPP
1592000	1594000	這個近似解析的
1594000	1596000	把它積分起來了,那我們就可以
1596000	1598000	直接跳過前面的這一個
1598000	1600000	問題了
1600000	1602000	那這個想法其實也是
1602000	1604000	由另外兩位德國學者提出來的
1604000	1606000	但他們當時
1606000	1608000	只考慮了
1608000	1610000	單一的目標函數
1610000	1612000	那我們就把這一個想法
1612000	1614000	把它拓展到
1614000	1616000	多目標函數的一些探討
1616000	1618000	好,那
1618000	1620000	簡短的介紹這方法是怎麼運作的
1620000	1622000	那這個理論
1622000	1624000	它會被用在像這樣的
1624000	1626000	一個最佳化問題上面
1626000	1628000	那它的這個x是
1628000	1630000	所謂的state variable
1630000	1632000	那ε是所謂的final state
1632000	1634000	constraint
1634000	1636000	那在這樣子的這一個
1636000	1638000	DOP的formulation之下
1638000	1640000	我們就可以定義所謂的
1640000	1642000	Hamiltonian
1642000	1644000	那Hamiltonian裡面有一個這個符號
1644000	1646000	psi,這個psi就稱為
1646000	1648000	co-state equation
1648000	1650000	它有如下的這個定義
1650000	1652000	那co-state equation
1652000	1654000	這個boundary condition
1654000	1656000	而且是在這個batch結束的
1656000	1658000	這個condition
1658000	1660000	可以如這一個式則來表示
1660000	1662000	而在我們今天的這一個
1662000	1664000	研究裡面,因為τ的物理意義
1664000	1666000	叫做晶體長得多大
1666000	1668000	它當然就會和production rate
1668000	1670000	會有關係
1670000	1672000	所以既然我們有一個production rate constraint
1672000	1674000	我們的這個τf
1674000	1676000	就晶體長得多大
1676000	1678000	就可以直接被定下來了
1678000	1680000	所以這是為什麼我們要做
1680000	1682000	這個condition的理由,另外一個理由
1682000	1684000	而我們剛剛提到的
1684000	1686000	這個necessary condition叫做
1686000	1688000	這個
1688000	1690000	sorry
1690000	1692000	optimal control input
1692000	1694000	這個u star,它必須在
1694000	1696000	任何時刻都讓這個
1696000	1698000	Hamiltonian有最小值
1698000	1700000	好
1700000	1702000	那在我們這個section裡面
1702000	1704000	我們的state variable
1704000	1706000	選擇的是nuclearity的momentum
1706000	1708000	和真實的process time
1708000	1710000	而control input選擇的是
1710000	1712000	growth rate的導數
1712000	1714000	那這個理由沒有為什麼
1714000	1716000	就是為了在推導方程式的時候
1716000	1718000	比較方便一些
1718000	1720000	那再來剛剛提到的一個
1720000	1722000	simplification就是
1722000	1724000	我們假設nuclearity的crystal
1724000	1726000	對nucleation rate
1726000	1728000	不會再有任何的影響了
1728000	1730000	那這是一個很合理的假設
1730000	1732000	因為θ的體積
1732000	1734000	應該會遠大於
1734000	1736000	nucleation的這個體積
1736000	1738000	那也是因為這個simplification
1738000	1740000	我們可以把這個
1740000	1742000	cosine equation
1742000	1744000	以近似解析解的方式來把它
1744000	1746000	積分起來
1746000	1748000	那過程比較冗長我就不做贅述
1748000	1750000	各位可以去看
1750000	1752000	由我發表的這一篇paper
1752000	1754000	裡面它會有些比較詳盡的
1754000	1756000	一些介紹
1756000	1758000	好,那如果我們來看到
1758000	1760000	一些case study的話
1760000	1762000	我們在這個章節我們使用了
1762000	1764000	兩個不同的系統
1764000	1766000	一個是以硝酸鉀為溶質
1766000	1768000	一個是以所謂的濟霧四純
1768000	1770000	penta-irisical
1770000	1772000	來做溶質
1772000	1774000	那它們的這個
1774000	1776000	動力學參數就如下所示
1776000	1778000	那比較需要注意的是
1778000	1780000	j這個參數
1780000	1782000	j這個參數指的是nucleation rate
1782000	1784000	對μ3,也就是
1784000	1786000	batch裡面有多少晶體的
1786000	1788000	一個關係式
1788000	1790000	那這個對硝酸鉀系統
1790000	1792000	這個nucleation rate
1792000	1794000	會和μ3成正比的
1794000	1796000	但對penta系統
1796000	1798000	這nucleation rate對μ3是沒有關聯的
1798000	1800000	會導致一些這個
1800000	1802000	最佳解的差異,那等一下也會
1802000	1804000	跟大家介紹
1804000	1806000	好,那除了這個
1806000	1808000	最佳軌跡以外我們也會
1808000	1810000	去看說一些比較單純的一些
1810000	1812000	控制軌跡會導致怎麼樣的
1812000	1814000	一個控制結果
1814000	1816000	所以我們使用的是包含了這個
1816000	1818000	線性的降溫,包含了
1818000	1820000	三次函數的降溫
1820000	1822000	還有我們前面所提到的super saturation control
1822000	1824000	的這個軌跡
1824000	1826000	那因為今天的這個系統
1826000	1828000	是屬於size independent的kinetics
1828000	1830000	對,super saturation control
1830000	1832000	的軌跡就等於我把
1832000	1834000	growth rate測成一個定值
1836000	1838000	好,那這些軌跡的這個
1838000	1840000	結果就如這個圖上所示
1840000	1842000	我們先看這個
1842000	1844000	硝酸鉀系統
1844000	1846000	那我會發現如果今天是linear cooling
1846000	1848000	那它會導致所謂的
1848000	1850000	early growth
1850000	1852000	也就是growth rate在batch的前期
1852000	1854000	會比較大
1854000	1856000	會導致什麼結果呢?
1856000	1858000	這會導致nucleation rate在前期比較大
1858000	1860000	那這些在前期
1860000	1862000	生成的這些金核呢
1862000	1864000	它就有很多的時間
1864000	1866000	可以讓它長大
1866000	1868000	那長大就會導致它的這個
1868000	1870000	nucleation的這個總體積
1870000	1872000	會變得比較大一些
1872000	1874000	那反過來講,這個
1874000	1876000	2-bit cooling,它可以被視為一個
1876000	1878000	late growth,因為它的growth rate
1878000	1880000	在後期是比較大的
1880000	1882000	它就會有相反的一些狀況
1884000	1886000	那如果我們看這個
1886000	1888000	Penta系統的話,會看到一個
1888000	1890000	類似的現象
1890000	1892000	那比較值得提的是,如果我們去看
1892000	1894000	這個temperature trajectory
1894000	1896000	那會發現這個線性降溫
1896000	1898000	它最後的這個溫度偏低
1898000	1900000	但理由是它有很多的
1900000	1902000	這個
1902000	1904000	這個溶脂會被
1904000	1906000	輸出成為這個nucleated
1906000	1908000	moment,或是說
1908000	1910000	nucleated的這一個
1910000	1912000	體積
1912000	1914000	所以它就會導致
1914000	1916000	最後的這個batch temperature
1916000	1918000	會比較低一些
1918000	1920000	好,那再來如果我們看到
1920000	1922000	是這個所謂目標
1922000	1924000	函數的這個set
1924000	1926000	的話
1926000	1928000	那我們的想法是
1928000	1930000	我們把目標函數先分為兩大類
1930000	1932000	第一大類是所謂lower moment
1932000	1934000	它是由μ0到μ2
1934000	1936000	來組成的
1936000	1938000	而higher moment是由μ3到μ5
1938000	1940000	來組成的
1940000	1942000	那在這樣的情況之下,我們就可以把這個
1942000	1944000	目標函數
1944000	1946000	分組,並且我們
1946000	1948000	抓不同的這個
1948000	1950000	目標函數的這個pair
1950000	1952000	來做這個分析
1952000	1954000	所以各位可以看到我們分析了
1954000	1956000	四組目標函數
1956000	1958000	前兩組是和
1958000	1960000	前兩組是一個higher moment
1960000	1962000	和一個lower moment
1962000	1964000	後兩組分別是兩個higher moment
1964000	1966000	和兩個lower moment
1966000	1968000	我們去看一下不同的
1968000	1970000	不同種類的目標函數
1970000	1972000	會有怎麼樣的競爭關係
1978000	1980000	好,那如果我們看到的
1980000	1982000	是這個小鑽甲
1982000	1984000	系統的話,那我們可以把
1984000	1986000	這四組的protofront都把它
1986000	1988000	畫出來,那會發現的
1988000	1990000	結果是前兩組protofront
1990000	1992000	也就是一個higher moment
1992000	1994000	和一個lower moment的這個目標函數
1994000	1996000	它會導致
1996000	1998000	還蠻強烈的tradeoff
1998000	2000000	那這可以從
2000000	2002000	X軸的這個寬度來看
2002000	2004000	像X軸都是所謂的
2004000	2006000	這個μ3n就是乘合的體積
2006000	2008000	它的這個範圍呢
2008000	2010000	像第一個
2010000	2012000	第一組它會從5000
2012000	2014000	到大概7000,它大概差了40%
2014000	2016000	那第二組從5000
2016000	2018000	到大概快要10000,它已經差了快要一倍了
2018000	2020000	所以它的tradeoff是很強的
2020000	2022000	那相對而言
2022000	2024000	3.3和3.4的
2024000	2026000	tradeoff就會弱的蠻多的
2026000	2028000	那我們也發現
2028000	2030000	如果我們看這個
2030000	2032000	黃色的菱形
2032000	2034000	它代表的是super saturation control
2034000	2036000	得到的目標函數
2036000	2038000	那這個目標函數的
2038000	2040000	這個值就和所謂的
2040000	2042000	need point還蠻靠近的
2042000	2044000	所以我們就可以推論說
2044000	2046000	這個super saturation control
2046000	2048000	好像可以得到
2048000	2050000	還蠻不錯的一個
2050000	2052000	tradeoff的結果
2052000	2054000	那如果
2054000	2056000	來看這個penta系統的話
2056000	2058000	那tradeoff的現象
2058000	2060000	跟小轉角系統
2060000	2062000	還蠻類似的
2062000	2064000	但比較需要注意的是
2064000	2066000	可以看到這個3.1的這個圖
2066000	2068000	它的這個
2068000	2070000	super saturation control得到的這個
2070000	2072000	黃色菱形
2072000	2074000	它和need point直接重疊了
2074000	2076000	那為什麼呢?
2076000	2078000	因為在penta系統裡面
2078000	2080000	nucleation rate和μ3
2080000	2082000	或是說和這個batch裡面的
2082000	2084000	這個菱體的
2084000	2086000	這個密度是沒有關聯的
2086000	2088000	那這樣子的話就表示說
2088000	2090000	我其實不需要
2090000	2092000	特別趕著在這個batch的
2092000	2094000	前期或是後期
2094000	2096000	讓這個super saturation變大
2096000	2098000	我只要constant
2098000	2100000	就可以讓這個nucleation的number
2100000	2102000	有最小值了
2102000	2104000	那如果我們直接來
2104000	2106000	看一些這個growth rate的
2106000	2108000	軌跡的話
2108000	2110000	先來看這個抽象甲系統的
2110000	2112000	這個single objective的
2112000	2114000	體積
2114000	2116000	那我們會發現
2116000	2118000	這個early growth trajectory
2118000	2120000	它好像都會對這個
2120000	2122000	lower moment的objective
2122000	2124000	會比較友善一些
2124000	2126000	那這個理由是因為
2126000	2128000	early growth就可以避免在
2128000	2130000	batch的後期
2130000	2132000	這個相體的懸浮密度偏大的時候
2132000	2134000	nucleation rate變得
2134000	2136000	非常的大
2136000	2138000	那反過來呢
2138000	2140000	這個如果是late growth
2140000	2142000	的話,因為它
2142000	2144000	前期的nucleation rate偏小
2144000	2146000	它就會讓這些
2146000	2148000	在後期生成的
2148000	2150000	nuclei
2150000	2152000	沒有什麼時間長大
2152000	2154000	那就會讓這個nuclei的
2154000	2156000	總體積偏小
2156000	2158000	所以這個higher moment的
2158000	2160000	objective會比較友善一些
2160000	2162000	那至於
2162000	2164000	如果我們看這個所謂的
2164000	2166000	knee point trajectory的話
2166000	2168000	會發現3.1
2168000	2170000	3.2兩個問題
2170000	2172000	它的growth rate的變化
2172000	2174000	相對是偏小的
2174000	2176000	那之後再一次
2176000	2178000	驗證說
2178000	2180000	super saturation control
2180000	2182000	可以在higher moment和lower moment
2182000	2184000	的這個目標函數之間
2184000	2186000	取得還蠻不錯的一個
2186000	2188000	這個權衡關係
2188000	2190000	那至於3.3、3.4
2190000	2192000	這兩個問題我們會發現
2192000	2194000	3.3是兩個higher moment
2194000	2196000	的objective
2196000	2198000	那它的這個trajectory
2198000	2200000	就會比較偏向所謂的late growth
2200000	2202000	那反之
2202000	2204000	3.4它是兩個lower moment
2204000	2206000	的objective,它的這個
2206000	2208000	knee point的軌跡也會偏向
2208000	2210000	所謂的early growth
2210000	2212000	而Penta系統
2212000	2214000	會看到基本上非常類似的
2214000	2216000	一個現象,除了剛剛提到的這個
2216000	2218000	對小化乘和數量的
2218000	2220000	這一個問題
2220000	2222000	以外,那所以我們就可以再一次
2222000	2224000	的討論說,這個
2224000	2226000	super saturation control
2226000	2228000	似乎可以被
2228000	2230000	選做一個rule of thumb
2230000	2232000	在這個Penta系統的操作
2232000	2234000	上面
2234000	2236000	好,所以這個章節的這個想法
2236000	2238000	就是說,我們使用
2238000	2240000	這個最佳
2240000	2242000	最佳控制理論,以一個
2242000	2244000	近似解析的方式
2244000	2246000	來求解這些問題
2246000	2248000	的這個最佳解
2248000	2250000	那我們也去分析了這個
2250000	2252000	tradeoff,那也發現
2252000	2254000	這個higher moment和
2254000	2256000	lower moment的
2256000	2258000	目標函數它們的這個競爭
2258000	2260000	是偏強的,而看起來
2260000	2262000	在這兩個系統裡面
2262000	2264000	super saturation control好像是一個
2264000	2266000	還蠻不錯的一個這個策略
2266000	2268000	好,但是
2268000	2270000	最後提到另外一個問題了,就是
2270000	2272000	這兩個系統,這個
2272000	2274000	SSC,super saturation control
2274000	2276000	也是不錯的想法
2276000	2278000	但其他的系統呢
2278000	2280000	我們就還需要再探討一下了
2280000	2282000	那再來
2282000	2284000	當我們在尋找這個文獻的時候
2284000	2286000	發現,這個
2286000	2288000	connected parameter
2288000	2290000	的這個數值範圍
2290000	2292000	其實很寬,它可以
2292000	2294000	寬到十幾個order的
2294000	2296000	差別,而且再來
2296000	2298000	這個kb這個parameter
2298000	2300000	的這一個
2300000	2302000	unit
2302000	2304000	它其實是會和
2304000	2306000	這個parameter j
2306000	2308000	的這個單位是有關係的
2308000	2310000	那最後導致另外一個問題
2310000	2312000	就是我們沒有辦法直接從
2312000	2314000	數值來判斷
2314000	2316000	這個系統的這個mutation rate
2316000	2318000	到底是偏大
2318000	2320000	還是偏小
2320000	2322000	好,那另外一個問題
2322000	2324000	是我們也會去想要探討
2324000	2326000	這個seed recipe的design
2326000	2328000	那因為有一組日本學者
2328000	2330000	曾經有研究過說
2330000	2332000	他們去做實驗,去探討了
2332000	2334000	幾個不同的這個
2334000	2336000	結晶系統
2336000	2338000	他發現只要把這個
2338000	2340000	seed loading ratio拉大
2340000	2342000	那
2342000	2344000	seed loading ratio的定義是
2344000	2346000	seed和product mass的
2346000	2348000	一個比值
2348000	2350000	那把seed loading ratio拉大
2350000	2352000	把seed的mean size拉小
2352000	2354000	就可以讓這個nucleation
2354000	2356000	盡可能的被抑制了
2356000	2358000	但這會有
2358000	2360000	兩個問題
2360000	2362000	第一個是我們知道
2362000	2364000	如果這個seed
2364000	2366000	loading ratio偏大
2366000	2368000	seed mass又
2368000	2370000	seed的mean size又偏小
2370000	2372000	那它的這個產品的這個平均力勁
2372000	2374000	就也會偏小
2374000	2376000	像前面提到的這些目標是相違背的
2376000	2378000	那接下來
2378000	2380000	這個seed loading ratio
2380000	2382000	太大或是說seed的用戶太兇
2382000	2384000	就表示我們會需要
2384000	2386000	有比較大的
2386000	2388000	product recycle rate
2388000	2390000	那這也不是一個好現象
2390000	2392000	那為了要
2392000	2394000	分析以上這些問題
2394000	2396000	我們會使用的是這個
2396000	2398000	一個無因字化的一個model
2398000	2400000	來去快速的分析
2400000	2402000	這樣子的一個問題
2402000	2404000	好那簡單來介紹一下
2404000	2406000	這個無因字化的model
2406000	2408000	第一個是我們為了想要
2408000	2410000	確保這個parameter的這個數量
2410000	2412000	我們把G和B的
2412000	2414000	這個expiration直接combine在一起
2414000	2416000	那combine以後
2416000	2418000	這大型的KB的這個定義就變得
2418000	2420000	不太一樣
2420000	2422000	那這個定義沒有變
2422000	2424000	但γ的這個定義就會是
2424000	2426000	這個nucleation rate
2426000	2428000	和growth rate
2428000	2430000	對於這個過飽和度的相對敏感度
2430000	2432000	好那再來呢
2432000	2434000	我們就定義這一個
2434000	2436000	reference quantity
2436000	2438000	這個下標ref
2438000	2440000	那一個prime就表示這個quantity
2440000	2442000	它是一個無因字化的quantity
2442000	2444000	那比方說
2444000	2446000	我想要定義無因字化的growth rate
2446000	2448000	那就是原始的值
2448000	2450000	再去除以它的reference quantity
2450000	2452000	好那根據
2452000	2454000	如下的定義以後呢
2454000	2456000	我們就可以把這個
2456000	2458000	無因字化的模型給建立起來了
2458000	2460000	而在模型裡面
2460000	2462000	這個無因字化的c的mass
2462000	2464000	就剛好會是c的loading ratio
2464000	2466000	這樣我們就比較好去看說
2466000	2468000	這個ratio是多大
2470000	2472000	那在這個目標函數的一個選用方面
2472000	2474000	因為我們剛剛有提到
2474000	2476000	這higher moment和lower moment
2476000	2478000	的目標函數的競爭關係
2478000	2480000	那所以我們就決定
2480000	2482000	各選一個作為代表
2482000	2484000	那我們就選擇了
2484000	2486000	這個nucleated volume和nucleated number
2486000	2488000	作為higher moment
2488000	2490000	和lower moment的代表
2490000	2492000	那我們一樣可以
2492000	2494000	去把目標函數寫成
2494000	2496000	這樣的線性疊加
2496000	2498000	好那就可以用一樣的方式
2498000	2500000	來糾結這個最佳化問題了
2500000	2502000	那過程都類似我就不再贅述
2504000	2506000	好那至於這個
2506000	2508000	city recipe的話呢
2508000	2510000	因為我們可以知道
2510000	2512000	應該會有無限多組的city recipe
2512000	2514000	可以把這個nucleation給盡可能的抑制下來
2514000	2516000	那我們就定義
2516000	2518000	所謂的critical city recipe
2518000	2520000	那它是一組
2520000	2522000	city loading ratio和city mean size
2522000	2524000	的這個組合
2524000	2526000	它可以讓這個need point
2526000	2528000	的這個μ3n
2528000	2530000	也就是在need point得到的nucleated volume
2530000	2532000	剛好等於
2532000	2534000	city volume的1%
2534000	2536000	那我們就把這個1%視為說
2536000	2538000	因為它已經
2538000	2540000	幾乎可以忽略了
2540000	2542000	那就可以當作這樣的city recipe
2542000	2544000	基本上可以
2544000	2546000	抑制所謂的成合現象
2546000	2548000	好
2548000	2550000	那再來我們看一下這個
2550000	2552000	所謂的這個
2554000	2556000	critical parameter
2556000	2558000	那在我們的研究裡面我們去找了
2558000	2560000	32組不同的crystalline system
2560000	2562000	那我們會看到它相對應的
2562000	2564000	這個parameter
2564000	2566000	γ和j的這一個範圍
2566000	2568000	那大部分的系統來講
2568000	2570000	這γ會落在1到2.5之間
2570000	2572000	而j會落在
2572000	2574000	0到1之間
2574000	2576000	那這個詳細的一些parameter
2576000	2578000	各位可以去參考
2578000	2580000	由我當第一作者的這一篇paper
2580000	2582000	那這個
2582000	2584000	考量了這個
2584000	2586000	結晶系統的容值
2586000	2588000	包含了很多有機化合物
2588000	2590000	無機化合物
2590000	2592000	一些食品添加劑或是一些藥物
2592000	2594000	那這些細節
2594000	2596000	都可以去參考paper裡面
2596000	2598000	有比較詳盡的一個table
2598000	2600000	好
2600000	2602000	那在這樣的情況之下
2602000	2604000	我們就求解相對應的parietal front
2604000	2606000	那我們發現
2606000	2608000	當γ的這個值比較偏大
2608000	2610000	的時候
2610000	2612000	這parietal front它會比較寬
2612000	2614000	那反過來想就是
2614000	2616000	如果今天nucleation rate
2616000	2618000	和growth rate
2618000	2620000	對super saturation的敏感度差不多
2620000	2622000	那就是γ會靠近1
2622000	2624000	那這時候
2624000	2626000	這個tradeoff就會變得比較弱一些
2626000	2628000	那同時
2628000	2630000	我們也發現
2630000	2632000	這個當γ偏大
2632000	2634000	那而且這個J
2634000	2636000	偏小的時候
2636000	2638000	這super saturation control
2638000	2640000	得到的這個結果
2640000	2642000	和Nippon的結果
2642000	2644000	差距會比較大一些
2644000	2646000	那其他情況就會差距
2646000	2648000	比較小一些
2648000	2650000	那這個理由是因為
2650000	2652000	當J等於0的時候
2652000	2654000	這個super saturation control會得到
2654000	2656000	最小化μ0n
2656000	2658000	就是最小化乘和數量的
2658000	2660000	最佳解
2660000	2662000	那所以它就會和這個Nippon的差距比較遠一些
2662000	2664000	那另外的情況就是
2664000	2666000	如果今天這個γ
2666000	2668000	不大
2668000	2670000	就表示這個
2670000	2672000	parietal front不寬
2672000	2674000	那Nippon和
2674000	2676000	super saturation control得到的這個結果
2676000	2678000	也不會差太多
2678000	2680000	那這就再一次的驗證說
2680000	2682000	這個super saturation control
2682000	2684000	其實是一個還蠻不錯的一個
2684000	2686000	控制策略
2686000	2688000	都是如此
2688000	2690000	那至於這個seed recipe design
2690000	2692000	那我們會想要去探討一下
2692000	2694000	這個batch time
2694000	2696000	對seed recipe的一個影響
2696000	2698000	那因為batch time越長
2698000	2700000	這平均的過飽和度
2700000	2702000	和nucleation rate
2702000	2704000	就會變小一點
2704000	2706000	所以在這樣的情況之下
2706000	2708000	這個seed就可以不用加那麼多
2708000	2710000	但同時會有問題就是
2710000	2712000	這值不值得
2712000	2714000	因為batch time變長當然也不是一件
2714000	2716000	好事情
2716000	2718000	所以這有沒有
2718000	2720000	這樣子一個cp值
2720000	2722000	來去延長batch time
2722000	2724000	以減小這個
2724000	2726000	seed的這個使用量
2726000	2728000	那這樣的一個情況它是對於
2728000	2730000	不同的系統
2730000	2732000	會有不同的情況呢
2732000	2734000	還是還有一個general rule
2734000	2736000	那我們就一樣會希望
2736000	2738000	透過這個
2738000	2740000	無因式化的framework
2740000	2742000	來做一個分析
2742000	2744000	好那結果是
2744000	2746000	這個延長batch time
2746000	2748000	對於這個seed loading ratio的影響
2748000	2750000	對於這個系統的
2750000	2752000	應該說
2752000	2754000	會看你是怎樣的一個系統
2754000	2756000	像比方說
2756000	2758000	這個8號這個系統
2758000	2760000	如果我把這個batch time從1小時
2760000	2762000	變成12小時
2762000	2764000	它的這個seed的用量從
2764000	2766000	product的100%
2766000	2768000	變成了
2768000	2770000	大概20%
2770000	2772000	但對於像這個系統3號
2772000	2774000	這個延長batch time
2774000	2776000	基本上就沒有任何的影響
2776000	2778000	所以這就會
2778000	2780000	所謂的system specific
2780000	2782000	好
2782000	2784000	那所以在這個chapter裡面呢
2784000	2786000	我們就去分析了這一個
2786000	2788000	seed recipe design
2788000	2790000	和一些這個
2790000	2792000	seed loading ratio
2792000	2794000	的一些這個關係
2794000	2796000	那我們又再一次的
2796000	2798000	透過這個高效的運算
2798000	2800000	framework
2800000	2802000	解析起來的方式或是說
2802000	2804000	近似的方式
2804000	2806000	來分析出這樣的一個最佳解
2808000	2810000	好那最後這個部分呢
2810000	2812000	我們考慮的是這一個
2812000	2814000	bonus stage的一個
2814000	2816000	情況
2816000	2818000	那在一些文獻裡面有提到說
2818000	2820000	如果我們可以把這個
2820000	2822000	dissolution的這個機制
2822000	2824000	包含到這個操作裡面
2824000	2826000	我們就有機會去
2826000	2828000	控制這個seed的CSD
2828000	2830000	同時移除一些這個
2830000	2832000	nucleated crystal
2832000	2834000	好那
2834000	2836000	只是說如果我們要用這個model-based
2836000	2838000	的這個方法來做分析的話
2838000	2840000	我們就要去
2840000	2842000	試圖去分析這個crystal disappearance
2842000	2844000	的這個現象
2844000	2846000	那這個現象是說
2846000	2848000	在溶解的過程裡面
2848000	2850000	有一些晶體會直接消失不見
2850000	2852000	但這個現象在過往的
2852000	2854000	model-based的描述
2854000	2856000	都是用所謂離散化的方式來描述
2856000	2858000	那這就會導致一些
2858000	2860000	比較高的計算負擔
2860000	2862000	所以這個session
2862000	2864000	我們就想要去處理這樣的一個
2864000	2866000	問題
2866000	2868000	好那
2868000	2870000	既然我們要探討到dissolution
2870000	2872000	那就得再探討
2872000	2874000	一些這個PPE的事情
2874000	2876000	那我們假設呢
2876000	2878000	這個app-based裡面
2878000	2880000	有很多個stage
2880000	2882000	那每個stage呢它都只有
2882000	2884000	growth或是只有dissolution
2884000	2886000	會發生
2886000	2888000	那另外這個process永遠是從
2888000	2890000	growth stage開始
2890000	2892000	那在這樣的假設之下
2892000	2894000	我們就可以把growth stage
2894000	2896000	和dissolution stage的這個編號
2896000	2898000	給寫下來
2898000	2900000	並且可以寫出這個相對應的PPE
2900000	2902000	而這個下標K
2902000	2904000	就是stage的這個編號
2904000	2906000	那同時
2906000	2908000	這kinetic expression
2908000	2910000	和definition of transform time
2910000	2912000	其實這個dissolution stage
2912000	2914000	的這個expression
2914000	2916000	也是照著growth stage的這個
2916000	2918000	expression來做所謂的analogy
2918000	2920000	所以這邊呢
2920000	2922000	就可以看到這個
2922000	2924000	expression基本上
2924000	2926000	都是蠻類似的
2926000	2928000	那這邊就不再多做這個贅述了
2930000	2932000	好那再一次的
2932000	2934000	我們把這個PPE分成
2934000	2936000	seed和nucleation的part
2936000	2938000	那seed的part
2938000	2940000	都可以再一次的
2940000	2942000	在這個tau domain裡面
2942000	2944000	求解出這個explicit solution
2944000	2946000	好那可以
2946000	2948000	看到一樣不管是
2948000	2950000	growth rate
2950000	2952000	抱歉不管是growth stage
2952000	2954000	或dissolution stage
2954000	2956000	這個
2956000	2958000	explicit solution
2958000	2960000	都可以一樣用tau來表示
2960000	2962000	所以再一次的我們
2962000	2964000	用了一個
2964000	2966000	高計算效能的方法
2966000	2968000	來做seed的這個PPE
2968000	2970000	那nucleation就比較麻煩一點
2970000	2972000	因為它有牽涉到
2972000	2974000	這個dissolution的問題
2974000	2976000	那我們做個假設
2976000	2978000	我們假設這些nucleated crystal
2978000	2980000	它都服從
2980000	2982000	size independent的這個growth
2982000	2984000	和dissolution kinetics
2984000	2986000	那這個理由是
2986000	2988000	因為如果我們想要用這個
2988000	2990000	standard method
2990000	2992000	of moment
2992000	2994000	來做這個求解的話
2994000	2996000	這是必要的一個
2996000	2998000	這個
2998000	3000000	假設
3000000	3002000	那它同時也是合理的假設
3002000	3004000	因為這個GL和DL
3004000	3006000	在這個L偏小的時候
3006000	3008000	它的這個值
3008000	3010000	都很靠近1
3010000	3012000	那再來就是在做實驗
3012000	3014000	去fitting這個parameter的時候
3014000	3016000	這些參數大部分都是
3016000	3018000	透過seed-borne crystal
3018000	3020000	的這個實驗
3020000	3022000	來去做fitting的
3022000	3024000	那這樣證據顯示
3024000	3026000	偏小的這些nucleated crystal
3026000	3028000	會有一模一樣的
3028000	3030000	kinetic的行為
3030000	3032000	所以我們做以上的這個假設
3032000	3034000	那在這樣的假設之下
3034000	3036000	我們就可以寫出相對應的
3036000	3038000	這一個PPE了
3038000	3040000	那可以看到
3040000	3042000	它是一個連續的一個解
3042000	3044000	那這有什麼好處呢
3044000	3046000	這可以導致我們可以直接
3046000	3048000	來去使用這個standard method
3048000	3050000	of moment
3050000	3052000	這個連續的expression
3052000	3054000	就可以去推導出
3054000	3056000	相對應的這個ODE了
3056000	3058000	那這個連續expression的
3058000	3060000	假設是什麼呢
3060000	3062000	我們來看這個圖
3062000	3064000	假設今天我們有個batch
3064000	3066000	它只有兩個stage
3066000	3068000	第一個stage結束完以後
3068000	3070000	它的這個nucleated
3070000	3072000	這個csd長這個樣子
3072000	3074000	那第二個stage
3074000	3076000	因為它要溶解
3076000	3078000	這個csd會全部往左移
3078000	3080000	但是一旦這個crystal size
3080000	3082000	小於等於0
3082000	3084000	它就會直接消失不見了
3084000	3086000	所以這個連續的expression
3086000	3088000	就可以被拿來當作
3088000	3090000	這個crystal
3090000	3092000	消失不見的
3092000	3094000	這一個速率
3094000	3096000	的一個參考
3096000	3098000	好那
3098000	3100000	談完這一些數值方法
3100000	3102000	和理論以後呢
3102000	3104000	我們就可以來看這一個
3104000	3106000	所謂這個attainable seed
3106000	3108000	的部分了
3108000	3110000	那為什麼我們想要去找這個
3110000	3112000	cssd的這個attainable region呢
3112000	3114000	那主要的想法是
3114000	3116000	因為在這個
3116000	3118000	不管是在篩選
3118000	3120000	精種或是在篩選產品
3120000	3122000	的時候我們常常會使用
3122000	3124000	這個篩網來做這個產品的
3124000	3126000	篩選
3126000	3128000	但這樣子呢產品的平均濾鏡
3128000	3130000	和這個csd的寬度
3130000	3132000	就會被篩網的
3132000	3134000	這個網目大小所限制
3134000	3136000	所以如果我們可以去
3136000	3138000	想辦法直接設計一個process
3138000	3140000	直接去控制產品的
3140000	3142000	這個濾鏡分布
3142000	3144000	比方說平均和它的這個csd
3144000	3146000	有多寬那這樣當然是最好的
3146000	3148000	那所以我們就可以
3148000	3150000	透過剛剛推導出來的
3150000	3152000	這一個algorithm
3152000	3154000	就可以來做
3154000	3156000	快速的這樣的分析
3156000	3158000	那在這個章節我們使用的是一個
3158000	3160000	這個民凡的一個系統
3160000	3162000	那民凡的系統的kinetic
3162000	3164000	如下稿所示
3166000	3168000	那下一個問題是
3168000	3170000	我們要怎麼樣去定義這個
3170000	3172000	所謂的atom origin
3172000	3174000	那就決定我們使用了這個
3174000	3176000	產品的這個
3176000	3178000	mean和variance
3178000	3180000	來做這個定義
3180000	3182000	那可以看到我們就定義了這個
3182000	3184000	cd
3184000	3186000	和一些這個等一下要
3186000	3188000	求解最佳化化問題的一些
3188000	3190000	constraint
3190000	3192000	initial condition
3192000	3194000	包含了cd loading
3194000	3196000	包含了solubility
3196000	3198000	包含了我們不可以讓cd
3198000	3200000	crystal直接消失不見
3200000	3202000	就會有一個這個
3202000	3204000	crystal size的一個限制
3204000	3206000	以及production rate
3206000	3208000	那一些比較詳盡的一些
3208000	3210000	這個介紹一樣可以去參考
3210000	3212000	由我當第一作者的另外一篇
3212000	3214000	這個paper那這邊就不再
3214000	3216000	做太仔細的這個描述
3216000	3220000	好那再來因為
3220000	3222000	照剛剛的這樣的限制是
3222000	3224000	產品的μ0
3224000	3226000	和μ3
3226000	3228000	都可以被直接計算
3228000	3230000	計算出來
3230000	3232000	所以我們在這個
3232000	3234000	定義這個atom origin的時候
3234000	3236000	使用的這個mean size
3236000	3238000	是所謂的number volume mean
3238000	3240000	那定義如下
3240000	3242000	那定義好這個number volume mean以後呢
3242000	3244000	我們就可以在
3244000	3246000	剛剛提到的這些common的限制式
3246000	3248000	以及
3248000	3250000	這個target的
3250000	3252000	這個number volume mean的限制之下
3252000	3254000	去最大化
3254000	3256000	或最小化產品
3256000	3258000	cd的這個σp或是說
3258000	3260000	variance
3260000	3262000	那這樣子就可以去定義出
3262000	3264000	所謂的這個atom origin
3264000	3266000	那需要注意的是
3266000	3268000	在這邊我們都只談到這個cd的部分
3268000	3270000	那cd的
3270000	3272000	這個PBE又可以直接被
3272000	3274000	這個τ來表示
3274000	3276000	所以呢可以看到在這邊
3276000	3278000	都還沒有提到任何有關於
3278000	3280000	這個supersaturation trajectory
3280000	3282000	的一個部分
3282000	3284000	好那這個是
3284000	3286000	我們得到的一個結果
3286000	3288000	那首先我們可以來看這個atom origin
3288000	3290000	那結果會發現
3290000	3292000	如果今天是所謂的single stage
3292000	3294000	process那我們會得到一條
3294000	3296000	atom curve
3296000	3298000	甚至不是一個region
3298000	3300000	但如果我們今天的這個stage變得越來越多
3300000	3302000	這個region就會
3302000	3304000	越來越寬
3304000	3306000	但是我們可以看到這個寬的這個方向
3306000	3308000	基本上是以
3308000	3310000	增加σp的方向來
3310000	3312000	來做
3312000	3314000	來做擴展的
3314000	3316000	所以如果我們來看
3316000	3318000	這個a b c
3318000	3320000	三個點它相對應的
3320000	3322000	相對應的cd
3322000	3324000	它會變得越來越寬
3324000	3326000	但對於d e f g
3326000	3328000	這四個點
3328000	3330000	它的cd變化就不大了
3330000	3332000	好那
3332000	3334000	為什麼會這樣子呢
3334000	3336000	那我們去探討一下
3336000	3338000	會發現結果是因為
3338000	3340000	這個growth rate和dissolution rate
3340000	3342000	它對於這個crystal size的
3342000	3344000	敏感度是不同的
3344000	3346000	growth rate
3346000	3348000	它大部分的時候
3348000	3350000	它的這個敏感度會比較高
3350000	3352000	而dissolution rate它只在
3352000	3354000	一個很小的範圍裡面
3354000	3356000	有著比較高的敏感度
3356000	3358000	那假設我今天想要
3358000	3360000	把這個cd變窄
3360000	3362000	我只能在一個很窄的區間裡面
3362000	3364000	這樣做cycling
3364000	3366000	所以就會導致剛剛看到的這個現象
3366000	3368000	那同時也會導致
3368000	3370000	在這個
3370000	3372000	growth stage裡面
3372000	3374000	它的這個μ3的變化
3374000	3376000	其實是偏小的
3378000	3380000	好那如果我們探討完了
3380000	3382000	這一個這個
3382000	3384000	attainable region的事情以後
3384000	3386000	那如果今天呢
3386000	3388000	這個有一個我們
3388000	3390000	想要的這個product
3390000	3392000	mean size和σp
3392000	3394000	而且這個值
3394000	3396000	又落在這個attainable region裡面
3396000	3398000	我們其實就可以再透過
3398000	3400000	求解這樣的一個最佳化問題
3400000	3402000	去找出一組cd holding
3402000	3404000	和一組這個tau f
3404000	3406000	但這個問題呢
3406000	3408000	會有很多組解
3408000	3410000	那每一組解得到的fetch time和nucleated volume
3410000	3412000	就會不太一樣
3412000	3414000	但fetch time和nucleated volume
3414000	3416000	就會取決於
3416000	3418000	這個smooth saturation的
3418000	3420000	這個軌跡了
3420000	3422000	那我們假設這個軌跡
3422000	3424000	它是以一個
3424000	3426000	二次函數
3426000	3428000	和一個constant function
3428000	3430000	組成的一個連續且
3430000	3432000	smooth的一個函數
3432000	3434000	那我們就可以再去
3434000	3436000	透過求解這個最佳化問題
3436000	3438000	去找到說
3438000	3440000	在我們想要的這個
3440000	3442000	product的mean和variance的條件之下
3442000	3444000	那最小的fetch time
3444000	3446000	會是多少
3446000	3448000	好
3448000	3450000	那這會是一個tradeoff
3450000	3452000	因為我們把這個smooth saturation的set point
3452000	3454000	設得越大fetch time就會越短
3454000	3456000	但同樣的
3456000	3458000	這個nucleation rate又會
3458000	3460000	越大
3460000	3462000	那所以就一樣去畫出了
3462000	3464000	這樣的一個曲線
3464000	3466000	去分析這樣的
3466000	3468000	競爭關係
3468000	3470000	同時也可以去推導出
3470000	3472000	它相對應的temperature取決於投入
3472000	3474000	這樣就可以去分析說
3474000	3476000	我大概要用多大的這個
3476000	3478000	set point會是比較好的
3478000	3480000	一個結果
3480000	3482000	好,所以這個章節
3482000	3484000	我們就透過了這一個
3484000	3486000	這個framework
3486000	3488000	去分析了這個seed CSD
3488000	3490000	的這個tailoring problem
3490000	3492000	那我們去使用了這個growth
3492000	3494000	dissolution cycles
3494000	3496000	那我們這樣的一個這個方法
3496000	3498000	去分析所謂的crystal disappearance
3498000	3500000	的一個現象
3500000	3502000	好,那至於這個
3502000	3504000	attainable region
3504000	3506000	可以擴張的一個情況
3506000	3508000	就會根據它的kinetic來
3508000	3510000	決定,那我們同時也去討論
3510000	3512000	這個fetch time
3512000	3514000	和inhibiting nucleation
3514000	3516000	這樣的目標的一些競爭關係
3516000	3518000	好,所以
3518000	3520000	最後這個
3520000	3522000	研究的這一個結論
3522000	3524000	就是我們透過了
3524000	3526000	unlimited transformation
3526000	3528000	optimal control theory
3528000	3530000	和無因次化的這一個方法
3530000	3532000	來分析了以下這些問題
3532000	3534000	包含了目標元素tradeoff的分析
3534000	3536000	包含了這個
3536000	3538000	rule of sum的
3538000	3540000	這個控制策略
3540000	3542000	包含了這個seed holding ratio的
3542000	3544000	這個saving的problem
3544000	3546000	還有這個attainable region的一些problem
3546000	3548000	那這樣的一個
3548000	3550000	這個framework也可以
3550000	3552000	被用在一些這個
3552000	3554000	不同的領域,那這些是未來的一些
3554000	3556000	研究方向,包含了
3556000	3558000	去分析
3558000	3560000	更複雜的這個kinetic
3560000	3562000	系統的最佳控制
3562000	3564000	可能會包含了一些
3564000	3566000	這個考慮crystal shape
3566000	3568000	的process,包含了一些
3568000	3570000	temperature dependent的一些系統
3570000	3572000	那或者是也可以考慮一些
3572000	3574000	所謂的韌性控制
3574000	3576000	因為model-based control
3576000	3578000	的一個
3578000	3580000	致命上是
3580000	3582000	會有一些這個parameter uncertainty的問題
3582000	3584000	所以會需要一些
3584000	3586000	所謂的robustness analysis
3586000	3588000	那再來就是可以去
3588000	3590000	分析
3590000	3592000	把這個高效演算法
3592000	3594000	用在一些高階的控制策略
3594000	3596000	比方說所謂的
3596000	3598000	model predictive control裡面
3598000	3600000	那這樣的控制策略
3600000	3602000	會需要比較高的計算效能
3602000	3604000	那剛好就可以用我們的這個方法
3604000	3606000	來做一些補助
3606000	3608000	好
3608000	3610000	那以上是今天的
3610000	3612000	這個
3612000	3614000	演講的這個內容
3614000	3616000	有點長,那也謝謝各位在
3616000	3618000	討論時間一大早和美國
3618000	3620000	消夜時間來聽我做這個報告
3620000	3622000	那也歡迎各位提出任何的
3622000	3624000	問題來做這個討論
3628000	3630000	謝謝Howard今天的演講
3630000	3632000	那有任何
3632000	3634000	問題的都可以現在
3634000	3636000	提出來
3638000	3640000	Hey
3640000	3642000	Hey
3642000	3644000	Hello
3644000	3646000	聽得到嗎
3646000	3648000	可以
3648000	3650000	非常
3650000	3652000	非常informative的
3652000	3654000	talk
3654000	3656000	我有一個quick question
3656000	3658000	就是你說
3658000	3660000	robust analysis
3660000	3662000	基本上是
3662000	3664000	有點像是error analysis
3664000	3666000	就假設你
3666000	3668000	假設你
3668000	3670000	有一定的uncertainty
3670000	3672000	然後呢
3672000	3674000	因為你在做計算的時候你一定是
3674000	3676000	只能給一個給定的值
3676000	3678000	那你robust analysis
3678000	3680000	是說假設有這樣的誤差範圍
3680000	3682000	那你如果
3682000	3684000	你如果在這樣誤差範圍的話
3684000	3686000	然後你在這個誤差範圍上下之內
3686000	3688000	然後再去重跑一遍
3688000	3690000	那你跑出來的結果會差異多少
3690000	3692000	是這個意思嗎
3692000	3694000	對差不多是這樣的意思
3694000	3696000	那這個
3696000	3698000	我只是好奇
3698000	3700000	那這個是你之後要做的
3700000	3702000	方向還是
3702000	3704000	其實你paper已經有提到這件事
3704000	3706000	所以我只好奇說
3706000	3708000	因為kinetic
3708000	3710000	對確實
3710000	3712000	你這樣看起來
3712000	3714000	可以理解
3714000	3716000	因為我自己像是做實驗的
3716000	3718000	你要得到一個很準確的
3718000	3720000	kinetic parameter其實是很困難的
3720000	3722000	那我只想說
3722000	3724000	這個error到底是多少
3724000	3726000	那如果說根據像現有
3726000	3728000	我們實驗的
3728000	3730000	實驗
3730000	3732000	這樣最好的data
3732000	3734000	你明明是材質文獻
3734000	3736000	那如果說你假設
3736000	3738000	這樣存在這樣error的話
3738000	3740000	你再重下
3740000	3742000	你根據這個error再重跑下去
3742000	3744000	那這個差距會多大
3744000	3746000	然後這樣會不會造成一些
3746000	3748000	非常嚴重的後果
3748000	3750000	假設如果說
3750000	3752000	假設如果說有一定的error存在的話
3752000	3754000	因為我們知道可能
3754000	3756000	modeling有蝴蝶效應嘛
3756000	3758000	你可能一開始initial contingent差一點點
3758000	3760000	你後面跑的整個東西就會
3760000	3762000	整個不一樣
3762000	3764000	想聽聽看你在這方面的comment
3766000	3768000	首先就是
3768000	3770000	這個部分其實是未來的
3770000	3772000	研究方向
3772000	3774000	目前我們還在一些
3774000	3776000	很前期的一些study
3776000	3778000	也的確其實在這個
3778000	3780000	結晶process
3780000	3782000	這個robust control
3782000	3784000	或是像你剛剛所謂的
3784000	3786000	這個error analysis
3786000	3788000	其實研究還蠻多的
3788000	3790000	會不會造成
3790000	3792000	災難性的結果
3792000	3794000	可能
3794000	3796000	比較還好是因為這個
3796000	3798000	結晶其實算是蠻後段的製程
3798000	3800000	那當然
3800000	3802000	它可能會造成一些
3802000	3804000	後段操作的一些困擾
3804000	3806000	所以的確是會需要
3806000	3808000	去把這個
3808000	3810000	可能的一些batch to batch的variation
3810000	3812000	或者是一些
3812000	3814000	error上下線
3814000	3816000	可能會需要做一些
3816000	3818000	探討
3818000	3820000	那至於剛剛我們提到的
3820000	3822000	這些系統
3822000	3824000	因為我們目前是先去用別人的
3824000	3826000	這個實驗參數
3826000	3828000	先去做所謂的
3828000	3830000	unknown case的分析
3830000	3832000	那目前我們也是比較先
3832000	3834000	活動在一些比較
3834000	3836000	基本算法和一些
3836000	3838000	所謂目標來說
3838000	3840000	tradeoff的一些
3840000	3842000	所以目前我們
3842000	3844000	還沒有去探討到
3844000	3846000	這個方面,但這樣的研究
3846000	3848000	在別的group是有做過的
3848000	3850000	了解
3850000	3852000	了解
3852000	3854000	因為你們討論資料化
3854000	3856000	所以基本上假設你
3856000	3858000	kinetic parameter有
3858000	3860000	些許誤差,但是最後
3860000	3862000	還是一個最佳化的結果
3862000	3864000	對
3864000	3866000	這樣
3866000	3868000	蠻
3868000	3870000	合理的
3870000	3872000	對,就可能會考慮一些
3872000	3874000	比方說所謂的nominal value
3874000	3876000	跟一些所謂的
3876000	3878000	robust
3878000	3880000	或是說比方說在一些
3880000	3882000	這個
3882000	3884000	error之下
3884000	3886000	它的這個產品
3886000	3888000	出來的variation會多大
3888000	3890000	這樣子
3890000	3892000	了解
3892000	3894000	你這個
3894000	3896000	最佳化策略有實際跟
3896000	3898000	實驗的人合作過嗎
3898000	3900000	就是
3900000	3902000	把這個東西套用到一些
3902000	3904000	可能不可能直接套用到工廠
3904000	3906000	可能先一個小的
3906000	3908000	實驗的batch或之類的
3908000	3910000	或者你要不要去compare一些
3910000	3912000	experimental data
3912000	3914000	就是最後跑出來profile的結果
3916000	3918000	ok,老實講
3918000	3920000	沒有
3920000	3922000	比較直白來講就是
3922000	3924000	我們目前
3924000	3926000	設備上就主動在最佳化
3926000	3928000	主動在計算
3928000	3930000	了解
3932000	3934000	謝謝
3944000	3946000	還有其他人有問題嗎
3948000	3950000	好
3954000	3956000	這樣變成就我問題最多
3958000	3960000	我前面其實有好奇
3960000	3962000	一個問題只是我不太確定
3962000	3964000	後面有沒有講到
3964000	3966000	你前面在講
3966000	3968000	應該是
3968000	3970000	多目標函數的pb
3970000	3972000	我忘記哪一頁了
3972000	3974000	你一開始在介紹那個alpha跟beta
3974000	3976000	beta1跟beta2的時候
3976000	3978000	你後來就在講說
3978000	3980000	就是怎麼
3980000	3982000	去看beta1跟beta2
3982000	3984000	就是看那個曲線
3984000	3986000	然後
3986000	3988000	你一開始在介紹
3988000	3990000	前面那個函數的時候
3990000	3992000	前面那個
3992000	3994000	就是我有點好奇
3994000	3996000	說就是
3996000	3998000	你是怎麼決定權重
3998000	4000000	看起來你這邊是
4000000	4002000	牽涉到兩個
4002000	4004000	就phi1跟phi2
4004000	4006000	那你們有考慮過就是
4006000	4008000	牽涉到更多的嗎
4008000	4010000	還是
4010000	4012000	就是
4012000	4014000	都是用這種表達式
4018000	4020000	phi2
4020000	4022000	那alpha設成1會
4022000	4024000	怎麼講
4024000	4026000	alpha設成1會變成
4026000	4028000	單一考慮phi1
4028000	4030000	那所以只有alpha在0到1之間
4030000	4032000	就會變成
4032000	4034000	phi1和phi2任何
4034000	4036000	權重的tradeoff
4036000	4038000	那只要我們
4038000	4040000	把alpha在0到1之間
4040000	4042000	這樣子去調的話
4042000	4044000	那是不是就可以把他所有
4044000	4046000	tradeoff的情況都分析出來
4048000	4050000	sorry你剛剛可能有點斷掉
4050000	4052000	你意思說
4054000	4056000	你可以稍微再講
4056000	4058000	ok因為
4058000	4060000	alpha如果設為0或是1的話
4060000	4062000	就會退化成
4062000	4064000	單純考慮phi1或單純考慮
4064000	4066000	phi2
4066000	4068000	那只要把alpha設為0和1之間
4068000	4070000	的任何數值
4070000	4072000	就可以變成phi1和phi2的任何權重
4074000	4076000	對
4076000	4078000	我的意思就是說
4078000	4080000	那你怎麼知道怎麼樣的權重是比較好
4080000	4082000	就是就等於是說
4082000	4084000	你alpha越大那你就是phi1
4084000	4086000	就是越重要你alpha越小
4086000	4088000	你phi2就越重要
4088000	4090000	那你怎麼知道說
4090000	4092000	phi1跟phi2哪個比較重要
4092000	4094000	那又比另外一個重要多少
4094000	4096000	ok好
4096000	4098000	因為
4098000	4100000	第一個問題是的確很難去
4100000	4102000	定量去說
4102000	4104000	比方說phi1是phi2的兩倍重要
4104000	4106000	這樣不好定義
4106000	4108000	所以想法是我們在
4108000	4110000	第二十二頁這邊
4110000	4112000	做一個所謂的normalization
4112000	4114000	我們把phi1和phi2就壓縮到
4114000	4116000	0和1之間
4116000	4118000	那所以像是右邊的這張圖
4118000	4120000	這兩個點
4120000	4122000	端點對應到
4122000	4124000	其實是phi1和phi2的
4124000	4126000	最佳解
4126000	4128000	那在normalize
4128000	4130000	之後就會對應到
4130000	4132000	01和10
4132000	4134000	這兩個點
4134000	4136000	所以在這樣的一個平面上
4136000	4138000	原點的意義其實是
4138000	4140000	兩個目標函數同時達到
4140000	4142000	最佳解的一個情況
4142000	4144000	但是因為競爭關係這件事情無法達到
4144000	4146000	所以我們會想說
4146000	4148000	那就把tradeoff front
4148000	4150000	先畫出來
4150000	4152000	然後我們去找一個點
4152000	4154000	讓這個點跟原點的距離是最短的
4154000	4156000	那意思就是說
4156000	4158000	這個點
4158000	4160000	它在phi1和phi2
4160000	4162000	得到的這個值
4162000	4164000	和它們最佳解的這一個
4164000	4166000	所謂的percentage difference
4166000	4168000	是最小的
4168000	4170000	而這個點就把它視同為最好的
4170000	4172000	那一個tradeoff
4172000	4174000	那有一個
4174000	4176000	在多目標函數裡面有一個名詞
4176000	4178000	叫knee point就可以來描述
4178000	4180000	這樣的一個點
4180000	4182000	大致上是用這樣的一個方式來做的
4184000	4186000	了解
4186000	4188000	我剛剛看到就是
4188000	4190000	你按照它對原點距離
4190000	4192000	去做最小化的時候
4192000	4194000	我直覺是可能
4194000	4196000	數學上來看就是那個點同時
4196000	4198000	也代表說就是
4198000	4200000	你在求的那個
4200000	4202000	最佳解它解出來
4202000	4204000	應該variance 它的變異數
4204000	4206000	應該也是最小化
4206000	4208000	這個是對的嗎?還是說其實不一定
4208000	4210000	單純因為好奇
4210000	4212000	它們之間有沒有連結
4212000	4214000	應該說
4214000	4216000	其實在解的時候會有
4216000	4218000	所謂的雙層的最佳化
4218000	4220000	那
4220000	4222000	第一層就是去找出
4222000	4224000	這個tradeoff front上面的任何一個點
4224000	4226000	那其實任何一個點我們都可以把它
4226000	4228000	稱之為一個最佳解
4228000	4230000	那只是說在
4230000	4232000	最佳解之間要再找到一個
4232000	4234000	最好
4234000	4236000	最佳的最佳解
4236000	4238000	那就要再去
4238000	4240000	最小化這一個距離
4240000	4242000	所以其實在解這樣的
4242000	4244000	問題的時候
4244000	4246000	其實是雙層的最佳化問題
4246000	4248000	那雙層
4248000	4250000	可能就是來自於說你有兩個
4250000	4252000	目標函數這樣子
4252000	4254000	那你們
4254000	4256000	就是
4256000	4258000	剛好看到說你有一些
4258000	4260000	不同的組合就可能四個組合
4260000	4262000	然後就是每個組合裡面牽扯到
4262000	4264000	兩個目標函數
4264000	4266000	但就是可能
4266000	4268000	在最佳化的時候
4268000	4270000	兩個目標函數必須要
4270000	4272000	有點互相抗衡的意思
4272000	4274000	那這樣做才會怎麼講
4274000	4276000	才比較有意義
4276000	4278000	不然的話就是單純的兩個都拉到最小
4278000	4280000	或兩個都拉到最大那就可以了
4280000	4282000	所以
4282000	4284000	我可以想像的是就是
4284000	4286000	假設有N個目標函數
4286000	4288000	你的組合一定是小於
4288000	4290000	Cn取2之類的
4290000	4292000	只是我在想
4292000	4294000	你們
4294000	4296000	有沒有試著考慮過
4296000	4298000	考慮超過兩個目標函數
4298000	4300000	是不是合理的
4300000	4302000	甚至三個或者是更多目標函數
4302000	4304000	OK
4304000	4306000	那這有幾個想法
4306000	4308000	第一個想法是
4308000	4310000	因為當然可以去把這個
4310000	4312000	考慮的這個目標函數有六個
4312000	4314000	那當然可以去做一個
4314000	4316000	C6取2等於15
4316000	4318000	這個OK
4318000	4320000	那只是說有沒有這樣的必要性
4320000	4322000	因為其實
4322000	4324000	有些目標函數之間
4326000	4328000	該怎麼說呢
4328000	4330000	就是在做分析的時候就發現說
4330000	4332000	這個higher moment和lower moment
4332000	4334000	的這個目標函數
4334000	4336000	它的關係是
4336000	4338000	明顯強的
4338000	4340000	所以這樣子的話我們在做
4340000	4342000	回到analysis
4342000	4344000	或是說想要去找一個
4344000	4346000	rope sum的時候其實就沒有必要
4346000	4348000	再去探討太多
4348000	4350000	所謂2個higher moment
4350000	4352000	或是2個lower moment的這個
4352000	4354000	目標函數組合
4354000	4356000	所以當然實際上是可以做的
4356000	4358000	那數學上也都做得到
4358000	4360000	但只是說在
4360000	4362000	在formulation的時候
4362000	4364000	似乎沒有這樣的一個必要性
4364000	4366000	那再來就是在更多的
4366000	4368000	目標函數那當然是OK的
4368000	4370000	只是說這樣子在
4370000	4372000	在這個表示這個
4372000	4374000	競爭關係的時候可能就要變成
4374000	4376000	plato surface
4376000	4378000	或甚至更高維是無法表示的
4378000	4380000	那我相信數學上
4380000	4382000	可以做,那只是說我們沒有
4382000	4384000	去做這樣的一個
4384000	4386000	事情,那加上說
4386000	4388000	通常在
4388000	4390000	去探討這個
4390000	4392000	最佳,這個
4392000	4394000	最佳化的時候
4394000	4396000	大概都只會去看到
4396000	4398000	很多2個目標函數
4398000	4400000	大概目前很少看到有文獻
4400000	4402000	是會把目標函數
4402000	4404000	看到3個以上的,那另外一個
4404000	4406000	想法可能是因為
4406000	4408000	這些都是產品SSD的一些
4408000	4410000	統計特性,所以大概
4410000	4412000	2個特性就可以還蠻
4412000	4414000	蠻明確的去描述
4414000	4416000	這個
4416000	4418000	做產品的一些好壞
4418000	4420000	了解
4420000	4422000	所以可能在絕大多數
4422000	4424000	你的case裡面
4424000	4426000	可能是你們在做之前
4426000	4428000	你們大概就知道說
4428000	4430000	可能幾乎都已經知道說
4430000	4432000	怎麼講,該
4432000	4434000	該取哪2個
4434000	4436000	就是怎麼講
4436000	4438000	可能有哪2個
4438000	4440000	就是目標函數之間
4440000	4442000	是比較有強烈的
4442000	4444000	抗衡的關係,然後哪些的關係
4444000	4446000	對,其實在
4446000	4448000	一些比較前面的
4448000	4450000	研究是說會發現
4450000	4452000	這個比方說
4452000	4454000	今天的目標函數
4454000	4456000	這個moment是偏大的
4456000	4458000	它的軌跡就會變成
4458000	4460000	growth rate在後期偏大
4460000	4462000	那反之就是如果今天的目標函數
4462000	4464000	是以
4464000	4466000	所謂的小moment的組成
4466000	4468000	它的軌跡是growth rate
4468000	4470000	前期偏大,那光是
4470000	4472000	這樣子就會
4472000	4474000	有一些這個想法
4474000	4476000	就是說,那會不會
4476000	4478000	前期偏大
4478000	4480000	後期偏大,它的tradeoff
4480000	4482000	就是constant
4482000	4484000	所以其實在
4484000	4486000	比較早期的一些研究就有這樣的
4486000	4488000	一個想法了
4488000	4490000	但之所以早期的研究
4490000	4492000	比較不能像這樣子去
4492000	4494000	畫protofront
4494000	4496000	的一個理由是因為
4496000	4498000	其實像剛剛的這樣的
4498000	4500000	講法,我定一個alpha
4500000	4502000	就要解一次這個
4502000	4504000	最佳化問題
4504000	4506000	那如果是用一些
4506000	4508000	比較不一樣的
4508000	4510000	所謂求解方法的話
4510000	4512000	它可能就會牽扯到一些
4512000	4514000	我把這個input variable
4514000	4516000	離散化,那
4516000	4518000	這樣子去做iterative的話
4518000	4520000	我光是求出一個點,我可能就
4520000	4522000	dead bounce了
4522000	4524000	那更別提說我要去把一個完整的protofront
4524000	4526000	畫出來,還要去找這個
4526000	4528000	need point,所以
4528000	4530000	早期的研究是有這樣的想法
4530000	4532000	但是礙於
4532000	4534000	計算負擔
4534000	4536000	所以早期沒有去
4536000	4538000	做,直到後來
4538000	4540000	去把這個
4540000	4542000	德國學者的
4542000	4544000	近似解析的方式
4544000	4546000	把它導進來以後
4546000	4548000	我們才發現說,好那我們可以
4548000	4550000	很快速的去
4550000	4552000	定量的定性的去描述
4552000	4554000	這樣的一個tradeoff
4556000	4558000	單純好奇
4558000	4560000	你們有大概知道說你們今天
4562000	4564000	計算的成本跟
4564000	4566000	怎麼講
4566000	4568000	跟那個目標函數的
4568000	4570000	個數的時間複雜度
4570000	4572000	大概是多少嗎?
4572000	4574000	哇,這個
4574000	4576000	平方之類的
4576000	4578000	這個可能不太確定
4578000	4580000	但我可以確定的是
4580000	4582000	如果今天是像
4582000	4584000	這樣的一個情況的話
4584000	4586000	因為這個投影片的
4586000	4588000	時間限制
4588000	4590000	所以沒把它秀出來
4590000	4592000	但其實這個
4592000	4594000	最佳的這一個
4594000	4596000	所謂
4596000	4598000	所謂的
4598000	4600000	最佳的這個
4600000	4602000	這個
4602000	4604000	解析解是可以被
4604000	4606000	寫出來的,只要在一些
4606000	4608000	這個假設之下
4608000	4610000	是可以把這個解析解寫出來的
4610000	4612000	那解析解寫出來的話
4612000	4614000	那就只是積分OD
4614000	4616000	的一些問題
4616000	4618000	而且所謂的
4618000	4620000	積分是指
4620000	4622000	積分這個Initial Value Problem
4622000	4624000	所以就會變成一個很單純的
4624000	4626000	這個比方說
4626000	4628000	用一些這個
4628000	4630000	Force Order的一些sober就可以解出來的
4630000	4632000	一些問題
4632000	4634000	所以就是這個方法就是
4634000	4636000	競爭力很高的一個
4636000	4638000	理由
4638000	4640000	了解,感謝
4650000	4652000	還有有人有
4652000	4654000	針對演講
4654000	4656000	有什麼問題嗎
4662000	4664000	我剛剛其實
4664000	4666000	就是針對剛剛的問題我其實有
4666000	4668000	就是
4668000	4670000	可能一點
4670000	4672000	想法就是說像我們
4672000	4674000	實驗室有學長他們可能
4674000	4676000	當然我們不是做程控領域,我們是做分子模擬
4676000	4678000	模擬卡羅之類的
4678000	4680000	但那個像我們實驗室
4680000	4682000	就有學長他可能就是
4682000	4684000	比如說今天他要去
4684000	4686000	參數化某個
4686000	4688000	某些分子的一些
4688000	4690000	立場的一些參數這樣子
4690000	4692000	那他參數化的過程中
4692000	4694000	他要去就有點像是
4694000	4696000	今天假設對於某一種
4696000	4698000	某一種分子裡面某一顆原子
4698000	4700000	他可能
4700000	4702000	要去fit
4702000	4704000	他的那個Lennard-Jones
4704000	4706000	的那兩個參數
4706000	4708000	那他可能就是
4708000	4710000	他可能有四種
4710000	4712000	四個就是
4712000	4714000	experimental data
4714000	4716000	他可以拿下去fit這樣子
4716000	4718000	然後因為當時可能也
4718000	4720000	不知道說四個裡面到底要
4720000	4722000	四個全上還是四個取三個
4722000	4724000	還是四個取兩個,然後取兩個又要取哪兩個
4724000	4726000	之類的,所以這就好像
4726000	4728000	也有點
4728000	4730000	那個就是多
4730000	4732000	目標函數的意味
4732000	4734000	我不太確定這可能
4734000	4736000	跟你的
4736000	4738000	就是做法未必
4738000	4740000	怎麼講,未必可以直接套用
4740000	4742000	在你的領域,但是
4742000	4744000	讓我聯想到就是當時我們學長
4744000	4746000	是用Bayesian inference
4746000	4748000	他可能就是比如說
4748000	4750000	他Bayesian inference他裡面有一個重要的東西
4750000	4752000	就是Base factor
4752000	4754000	然後他那個Base factor基本上就是說
4754000	4756000	可以去估計說今天加入
4756000	4758000	這個函數之後,他的精準度
4758000	4760000	多了多少這樣子
4760000	4762000	那或者是有時候
4762000	4764000	那個函數他可能反而就是
4764000	4766000	結果不如預期之類
4766000	4768000	所以他就有點是透過這種
4768000	4770000	比較Base factor的
4770000	4772000	的手段
4772000	4774000	然後去判斷說哪個參數應該被考慮
4774000	4776000	進來,然後哪個參數不該被
4776000	4778000	考慮進來這樣子
4778000	4780000	不過這我覺得因為多目標函數
4780000	4782000	就我剛剛會好奇時間複雜度
4782000	4784000	是因為就是有時候可能
4784000	4786000	思考就是高維的問題的時候
4786000	4788000	會有就是
4788000	4790000	他可能那個
4790000	4792000	怎麼講,計算成本並不是線性增加
4792000	4794000	所以就會變成
4794000	4796000	學長那個方法
4796000	4798000	大概不是每一種事情都適用
4798000	4800000	因為有時候可能光是要
4800000	4802000	optimize那種東西就已經成本太高了
4802000	4804000	那假設今天考慮到兩個
4804000	4806000	參數就可以做到90%準確的話
4806000	4808000	那其實做到三個或四個目標函數
4808000	4810000	大概也是
4810000	4812000	有點沒那麼多
4812000	4814000	意義這樣子
4814000	4816000	其實你講的這件事情剛好
4816000	4818000	最近我們也在碰到這樣的問題
4818000	4820000	跟這個
4820000	4822000	怎麼講
4822000	4824000	跟這個題目可能比較無關
4824000	4826000	就是說像我們在做一些
4826000	4828000	產學
4828000	4830000	合作案的時候常常會需要去
4830000	4832000	fitting一些就是現場的一個
4832000	4834000	data
4834000	4836000	那比方說
4836000	4838000	像今天有一個
4838000	4840000	學弟
4840000	4842000	之前是在做一個高分子
4842000	4844000	裂解爐的一個
4844000	4846000	project
4846000	4848000	那高分子裂解反應的
4848000	4850000	動力室就很複雜
4850000	4852000	大概就可能
4852000	4854000	光動力室就二三十條
4854000	4856000	那更別說每條動力室還有它各自的parameter
4856000	4858000	那所以當時
4858000	4860000	大家也是在想說
4860000	4862000	那這樣子要怎麼樣去
4862000	4864000	找說怎麼樣去
4864000	4866000	做fitting才可以讓這個
4868000	4870000	建出來的model
4870000	4872000	不管是用AspenPlus或是用別的東西來建model
4872000	4874000	的這個model
4874000	4876000	都是夠準確的
4876000	4878000	那當時我們也確實
4878000	4880000	有個學弟確實是用了一個叫做
4880000	4882000	Bayesian
4882000	4884000	Bayesian Optimization的一個
4884000	4886000	套件在Python裡面用的
4886000	4888000	那不知道是不是你剛剛提到的
4888000	4890000	這一個東西
4890000	4892000	但我們
4892000	4894000	有一些project在
4894000	4896000	在這樣子的情況之下
4896000	4898000	是有透過Bayesian
4898000	4900000	Bayesian Optimization
4900000	4902000	的方法來取得一些成功的
4902000	4904000	我覺得應該是
4904000	4906000	我沒有用過Python那個套件
4906000	4908000	不過我猜應該是跟
4908000	4910000	就是理論基礎上應該是
4910000	4912000	差不多的
4912000	4914000	就是因為有一些就是
4914000	4916000	像我現在自己也碰到類似的問題
4916000	4918000	就是像我現在在
4918000	4920000	建一個
4920000	4922000	CDR的一個model
4922000	4924000	那這個model的問題
4924000	4926000	是用Aspen來算的話
4926000	4928000	每算一輪要算
4928000	4930000	蠻久的
4930000	4932000	那大概一輪要算
4932000	4934000	大概
4934000	4936000	一分半其實不算太久
4938000	4940000	但因為這個
4940000	4942000	需要fitting的這個
4942000	4944000	組數很多
4944000	4946000	那電腦的效能又有限
4946000	4948000	然後
4948000	4950000	也不知道怎樣的parameter
4950000	4952000	組合會最好的
4952000	4954000	所以現在也在試著說
4954000	4956000	看有沒有辦法去
4956000	4958000	找出一些比較好的一個fitting的方法
4958000	4960000	因為它的
4960000	4962000	不管是可以調的參數
4962000	4964000	或者是一些
4964000	4966000	coherent data的一些uncertainty
4966000	4968000	其實都蠻大的
4968000	4970000	所以目前也是我一個
4970000	4972000	蠻頭痛的一件事情
4972000	4974000	那聽起來好像
4974000	4976000	偉哲剛剛講的這樣的一個
4976000	4978000	想法也可以被套用在
4978000	4980000	像我們現在
4980000	4982000	合作的一些案子裡面
4982000	4984000	我沒有
4984000	4986000	要不要考慮轉machine learning
4988000	4990000	欸
4990000	4992000	沒有啦
4992000	4994000	fitting只是你一個
4994000	4996000	你的工作一個part
4996000	4998000	我只是開玩笑
4998000	5000000	因為現在大家都在machine learning
5000000	5002000	其實前幾
5002000	5004000	大概兩三年前開始
5004000	5006000	我們跟
5006000	5008000	台塑集團
5008000	5010000	的一些案子
5010000	5012000	就在做這些
5012000	5014000	machine learning的事情
5014000	5016000	因為台塑集團他們大概在
5016000	5018000	兩年前總裁提出了
5018000	5020000	這個
5020000	5022000	AI時代的一個這個想法
5022000	5024000	所以他們就要求
5024000	5026000	每一個這個
5026000	5028000	部門都提一個
5028000	5030000	這個改善案子
5030000	5032000	那都要和AI扯上關係
5032000	5034000	然後這個案子的好壞
5034000	5036000	直接影響年終考期跟分紅
5036000	5038000	所以當時就有很多
5038000	5040000	這麼硬?
5040000	5042000	對,這麼硬,所以當時的結果就是
5042000	5044000	廠商就
5044000	5046000	投報紙的時候就來
5046000	5048000	找台大台科大
5048000	5050000	說你們會不會一些這樣的一個東西
5050000	5052000	那當時我們其實
5052000	5054000	也不是很熟,所以甚至我們當時
5054000	5056000	還跑去找了氣管系
5056000	5058000	做一些那種商業分析的團隊
5058000	5060000	來做這樣的案子
5060000	5062000	就把一個案子搞得變成一個
5064000	5066000	化足化工氣管
5066000	5068000	跟實際工廠的
5068000	5070000	一個團隊,就弄得浩浩蕩蕩的
5070000	5072000	對,但是
5072000	5074000	就有發現因為
5074000	5076000	現場表典數據的一些
5076000	5078000	缺失或者是一些
5078000	5080000	不確定性或是一些
5080000	5082000	表典損壞的一些狀況
5082000	5084000	所以最後結果其實
5084000	5086000	目前來講
5086000	5088000	能做的事情太有限了
5090000	5092000	就是在一些
5092000	5094000	經驗裡面就是
5094000	5096000	可以做到的東西都還滿有限的
5096000	5098000	就是這個
5098000	5100000	成效沒有很好
5100000	5102000	但也不知道說
5102000	5104000	是不是因為我們
5104000	5106000	這個道行還不夠高
5106000	5108000	不知道是不是其實
5108000	5110000	在一些比較其他國家
5110000	5112000	這確實也是在發展的
5112000	5114000	階段,因為
5114000	5116000	這個東西
5116000	5118000	最後還是要回歸物理
5118000	5120000	最後你要怎麼跟物理去連結
5120000	5122000	其實也是
5122000	5124000	大家一直在努力的課題
5126000	5128000	加上因為
5128000	5130000	data-driven的model
5130000	5132000	它其實是不具物理意義的
5132000	5134000	所以就變成
5134000	5136000	使用上的限制很多
5136000	5138000	比方說你今天想要做一個
5138000	5140000	現場節能的
5140000	5142000	NG saving analysis
5142000	5144000	會變成說
5144000	5146000	你不可能去用
5146000	5148000	data-driven的model
5148000	5150000	因為它會直接做一個
5150000	5152000	所謂對現有的操作條件
5152000	5154000	做一些破壞性的一些改變
5154000	5156000	那這樣會直接
5156000	5158000	讓這個data-based的model
5158000	5160000	不能用
5160000	5162000	難忽一些常控也蠻困難的
5164000	5166000	因為你在
5166000	5168000	做一個
5168000	5170000	machinery它沒有被chain
5170000	5172000	的一件事情
5172000	5174000	當然就會造成毀滅性的結果
5174000	5176000	所以就變成說
5176000	5178000	對於
5178000	5180000	我們接到的這些案子
5180000	5182000	可以使用的
5182000	5184000	程度其實是蠻受限的
5184000	5186000	那雖然他們現在
5186000	5188000	還在
5188000	5190000	繼續所謂的AI時代
5190000	5192000	所以到最後變成
5192000	5194000	有一些案子會
5196000	5198000	我們
5198000	5200000	所謂
5200000	5202000	會
5206000	5208000	網路是不是不太好
5208000	5210000	對 它是不是又斷了
5210000	5212000	對
5214000	5216000	那
5218000	5220000	欸浩仁浩仁你這邊有點斷
5220000	5222000	我不確定你現在聽不聽得到
5222000	5224000	公認的AI但我們應該用AI來包裝它
5224000	5226000	喔
5232000	5234000	喂
5234000	5236000	喂
5236000	5238000	喂 你剛剛幾乎全部
5238000	5240000	斷掉了
5240000	5242000	對 你剛剛幾乎全部斷掉了
5244000	5246000	喔 好像還沒回來
5246000	5248000	OK
5250000	5252000	就是會有一些這個
5252000	5254000	AI在像我們這樣的案子上面的應用
5254000	5256000	還是受限還蠻大的啦
5256000	5258000	對 那
5258000	5260000	恩
5260000	5262000	再來就是說現在變成
5262000	5264000	有些案子會變成
5264000	5266000	明明不是AI但我們卻硬要套
5266000	5268000	AI的這個殼上去
5268000	5270000	對 這是另外一個
5270000	5272000	現在這種
5272000	5274000	MLD有
5274000	5276000	就是怎麼講 太氾濫的感覺
5276000	5278000	就是
5278000	5280000	好像在上面的人都覺得很簡單
5280000	5282000	隨便都可以套
5282000	5284000	機器學習
5284000	5286000	這種量子
5286000	5288000	這種名詞很酷的
5288000	5290000	就很容易變得很腐爛
5290000	5292000	對 就是會被
5292000	5294000	神化啦這個東西
5294000	5296000	對 有點太被神化
5296000	5298000	因為它
5298000	5300000	最後它是Data-driven
5300000	5302000	就回歸不了
5302000	5304000	沒辦法reasonable
5304000	5306000	然後回歸物理的話
5306000	5308000	還是有侷限性
5308000	5310000	非常大的侷限性
5310000	5312000	對對對
5312000	5314000	那當然這個就跟今天的
5314000	5316000	主題關係比較不大
5316000	5318000	但它就是的確我們最近
5318000	5320000	有碰到的一些
5320000	5322000	這個問題
5330000	5332000	那還有
5332000	5334000	其他人有問題嗎
5344000	5346000	OK
5346000	5348000	那如果沒有的話我們可能
5348000	5350000	時間或許也差不多了
5350000	5352000	那今天謝謝
5352000	5354000	浩仁的演講
5354000	5356000	好 謝謝大家好
5356000	5358000	大家可以
5358000	5360000	好久沒有聽到這個靈異的東西
5360000	5362000	OK
5362000	5364000	差不多
5364000	5366000	大家可以去吃宵夜或吃午餐了
5366000	5368000	對
5368000	5370000	如果有興趣想要報演講的
5370000	5372000	我們最近在徵集下半年的演講
5372000	5374000	有興趣的可以
5374000	5376000	報名TERA的會員
5376000	5378000	然後之後我們會有
5378000	5380000	相關消息釋出
5380000	5382000	就是可以再填寫表單
5382000	5384000	那今天就謝謝大家 大家晚安 大家早安
5384000	5386000	掰掰
5386000	5388000	謝謝大家好 掰掰囉
5388000	5390000	各位掰掰
5390000	5392000	掰掰
5392000	5394000	怎麼突然之間失聲了
5394000	5396000	沒有 我就是
5396000	5398000	刷一下存在感
5400000	5402000	成功
