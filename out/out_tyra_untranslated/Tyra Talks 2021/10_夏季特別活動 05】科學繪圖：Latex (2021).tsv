start	end	text
0	30000	- 好,大家好,很高興大家來到今天Project TARA夏季系列第五場的活動,今天的活動是由劉俊凜老師進行科學繪圖的分享,那很快為大家介紹一下劉老師的背景,那劉俊凜老師目前在國立臺灣大學的電機工程學系,那劉俊凜老師目前在國立臺灣大學的電機工程學系,那劉俊凜老師目前在國立臺灣大學的電機工程學系,
30040	59840	擔任助理教授的職務,然後他是在2010年的時候於臺大的電機系取得學士學位之後,然後之後又在電信所取得碩士學位,然後在2018年的時候在Caltech的博士班取得博士學位,那他的研究興趣包括Sparse Error Signal Processing以及Statistical Signal Processing,
59880	72840	那今天就由劉老師來為我們分享他在Latex上面的使用經驗,那我代表觀眾歡迎劉老師的演講,然後現在就把時間交給劉老師,謝謝。
73840	81840	好,那非常謝謝這個主持人的介紹這樣,那請問各位有聽到我的聲音嗎?
81840	111840	OK,好,那謝謝。好,那就是謝謝這個Project TARA的邀請這樣,那讓我有這個榮幸就是在今天這個這個場合,就是分享一下我關於Latex使用科學繪圖的一些相關經驗這樣。好,那今天的進行方式,我想說我們就是以一個,呃,在我報告的過程中,我會介紹一下相關,就是關於Latex的一些,呃,一些,呃,一些,呃,一些,呃,一些,呃,一些,呃,一些,呃,一些,呃,一些,呃,一些,呃,一些,呃,一些,呃,一些,呃,一些,呃,一些,呃,一些,呃,一些,呃,一些,呃,一些,呃,一些,呃,一些,呃,一些,呃,一些,呃
111840	128280	這個使用的一些經驗,然後一些相關的基本的一些,呃,使用的一些,呃,想法這樣。那如果各位聽眾在這個聽的過程中有任何的就是問題啊,或者是想法,那歡迎就是隨時就是提出來,呃,我們做一個討論這樣。
129120	157640	好,那如果可以的話,那我們就來這個,呃,我們今天的這個演講的部分。好,那呃,今天是這個我們夏季特別活動的這個第五場,那講科學繪圖,那主要是用那個Latex這個工具這樣。好,那在開始之前,我想先問一下各位聽眾,就是,呃,有聽過Latex的這個名詞的可以舉個手嗎?
157640	187620	或者是出個聲。那我看chat應該是有一些這個,呃,聽眾是有聽過的,那呃,所以如果對於有聽過的聽眾而言,他們可能會想說,哎,那個Latex可能是拿來寫paper的一個工具,那為什麼要把它放在科學繪圖這個這個主題之下呢?呃,這個就是我今天,呃,演講要跟各位做一個分享。
188140	216140	這樣就是Latex其實有一些相對的工具是可以拿來做科學繪圖,那我自己也是有一些相對的使用經驗這樣。好,那我們就繼續我們的這個演講,那呃,今天的outline的話,首先我會先對做一個簡單的這個introduction,那之後我會花一些時間介紹Latex,那呃,就是如果有一些聽眾可能沒聽過,或者是,呃,一些這個細節比較不熟悉的話。
216140	246020	那就利用一些時間跟各位聽眾介紹一下什麼是Latex,那第三個部分是我會特別就是提一個叫做PGFTIKZ的一個繪圖的一個算是語法,它可以跟Latex有蠻好的一個結合這樣,那我也會提一些這個相關的例子,那最後會跟各位說明一些相對的,呃,呃,像說,呃,相關的資源,就是各位如果有興趣的話,可以找來做參考這樣。
246940	264820	好,那呃,今天的主題算是科學繪圖,那我相信,呃,就是各位聽眾應該是大部分都是這個學術背景,所以在學術背景之下呢,其實各位蠻常用到,就是需要做一個學術上的表達,什麼叫學術上的表達呢?
264820	290380	就是各位可能會需要寫paper,或者是需要寫就像說口頭報告,像今天這個場合就比較像是口頭報告,那有一些,呃,這個場合會需要各位做一個海報的報告,那這些呢?其實都是,呃,學術在表達一些概念,或者比較複雜想法的一些媒介,可能用文章的形式,或者是投影片的形式,或者是海報的形式。
291140	314620	好,那在這些形式當中呢?其實,呃,這個圖表其實是一個蠻有效率的溝通方式,呃,各位可以想像就是說,當你有一個比較複雜的概念需要說明的時候,呃,如果用很多很長的句子去說明,跟說畫一個,這是簡潔的圖表,大家用看的,就是一目了然這樣。
315180	336780	通常大部分的這個讀者會比較偏好,就是使用圖表去做一個概念上的表達這樣。好,所以,呃,如果各位想要在像說各位的這個發表,就是加入一些圖表的話,那接下來下一個問題就是說,好,呃,要用什麼界面產生出這個圖表?
337380	360060	那,呃,我相信就是兩週之前有提過,呃,用illustrator可以去畫出一些,就是蠻漂亮的圖表這樣。那,呃,這個禮拜的主題是說,呃,我會想要用latex這個語法這個界面,那他其實也有一些相對應的套件跟工具可以去產生這個,呃,好看的一些圖表這樣。
361060	383260	好,那,呃,我這邊快速用一句話來說明什麼是latex,就是他其實是一個排版系統,那這個排版系統他做的工作就是把很多的文字,呃,文字檔案經過一連串的編譯處理之後呢,排版成各位,呃,就是看看看到的文件檔案這樣。
383860	410380	所以其實像,呃,我今天報告的這個投影片,我也是用latex做的,那他背後其實是有很多的,就是純文字組成的一些這個敘述,那這些純文字敘述會告訴我們說,呃,像說這一頁放了什麼字,那這些字的顏色是什麼?那,呃,這幾個項目他的順序格子是什麼?這樣他會對文件做這樣的一個敘述,那latex算算是一個排版軟體。
410380	437300	他可以根據這樣的敘述,把文件編成是像說各位看到的這一張投影片的樣子,這樣好,那快速提一下p g f t i k z,呃,p g f,其實他的全名叫做,呃,portable graphics,呃,format,那呃,其實大家比較常常是t i k z的這個一個語法,那他其實是一個latex的一個套件,那這個套件呢?
437300	448340	他在針對就是對於就是畫一些像量圖形,特別是用一些就是幾何的方式去描述像量圖形,有一些特別,呃,好用的方法,這樣。
449340	474620	那剩下一些時間,我會提一個叫做p g f plots,他是一個也是一個latex的套件,他可以畫畫一些這個常用的一些圖表,那呃,我自己用過之後,我也覺得是他就是想說跟各位分享一下好,那所以今天呢?我會主要把重點放在說,我會對一些這些工具做一些介紹,然後我個人的一些使用經驗這樣。
474620	503980	好,那這個算是今天的一個我們大大智慧,呃,經過的一些這個想法,那接下來給各位看一張圖,呃,這張圖先跟各位提一下,這張圖是我從,呃,我的課堂投影片裡面去抓出來的一張圖,那呃,我想說以這張圖給各位做一個例子,例子好,首先各位看這張圖的時候呢?呃。
505500	525940	首先,各位看這張圖的時候,其實呃,各位看到非常多的字,非常多的圖形,非常多的顏色,那呃,我這邊就對這個圖表做一個舉例,其實要描述的這一張圖呢?其實大概可以分成幾個環節,一個環節是上面所標的文字。
526940	545940	像說,各位在上面看到這邊有非常多的文字,然後有一些這個相對的數學符號這樣,那下面有一些相對的文字跟數學符號,所以呢?呃,就是說,要清楚表達一個觀念的話,上面可能會有一些文字相對的敘述。
546860	552380	好,那在這張圖裡面,其實各位也可以看到說,有一些相對的形形狀。
553380	573380	舉例來說,各位可以看到這邊有很多的這個呃,這個正方形,然後有非常多,就是有規律的正方形,然後排在一起這樣。那呃,當然今天的言,呃,今天的演講重點不是介紹這些細節是什麼?我是主要是拿這張圖跟各位做一個舉例這樣。
574380	589380	所以要呃,產生這張圖呢?其實你會需要有一些對一些形狀的一些描描描述。然後各位可能會像說要產生這張圖,可能會需要做一些呃,像說畫線的相關的指令。
589380	614380	所以各位可以看到,像說不同方塊之間有像說各種不同的線段,有綠色的線,有橘色的虛線,然後上面可能還有標示一些相對的小的文字這樣。好,所以通常在這種表達上面,可能有有時候色彩或者是一些這個相對的文字風格。
614380	643380	可能都是這個表,呃,各位在設計圖表的時候可以呃,著重的一些點這樣。好,那呃,各位可能看到這張圖會覺得說,呃,他好像包含了很多細節。那呃,先跟各位說明就是說,這這這個其實是上課投影片的其中一頁。那完整的版本,其實是他是有一個相對的動畫的,就是說,呃,這個不同的顏色,不同的標示的這些地方呢?
644380	664380	會漸進的出現這樣,那不過這邊是就是給各位做一個示範跟參考。好,那就呃,一樣,如果各位的聽眾在聽的過程中有任何問題,就是呃,非常歡迎就是就是呃,做一個詢問,那我們可以就是當下做一個討論這樣。
664380	692380	好,那如果各位沒有問題,那我現在來稍微介紹一下工具。那呃,我今天的take away就是說,呃,希望各位聽過之後,會對於像說要產生這種圖,應該會有一些些想法。那當然就是說,細節上要怎麼產生這個會涉及他這些繪圖的指令。不過,呃,希望就是能夠啟發各位聽眾就是說,如果各位要產生這樣的圖的話,用類態是要怎麼做這樣。
694380	697380	那首先我來介紹一下這個latex。
698380	705380	latex呢?他其實呃,我剛剛提到他是一個排版軟體,那他其實呃。
706380	727380	並不是一個單一的軟體,他是一個有一個相對應演進的一個排版的系統。那我這邊列了幾個,就是像說,如果各位對於這種latex的細節,有一些比較呃,多的研究的話,他其實有分成一個叫plan text。呃,他是等於是最原始的版本。
728380	751380	那後人有人基於這個呃,plan text上面去做一些改良,像說改良出呃,latex或者是呃,pdf latex,或者是一些可以編譯假的中文之類的一些衍生版本這樣。好,那不過這些都是相對應的技術細節,那他其實有一個相對應的呃,相對應的發展史。
752380	772380	那我想呃,今天的主題比較是科學繪圖,所以我可能就不會對這幾項去做詳細的討論分析。那各位聽眾就是先抓到一個概念,就是說他基本上是一個呃,如果各位有一些寫程式的經驗的話,呃,你可以把它想成他是一個類似編譯器的東西。
773380	776380	他把一些純文字的資訊。
777380	784380	然後根據這些文字內容去做一些解讀分析,然後去產生相對應的文件這樣。
785380	791380	那各位在看paper的時候,其實一個比較常用的文件格式應該是pdf格式這樣。
792380	808380	那所以呃,這個latest他大家算是比較通用的一個設計,就是呃,產生文件的步驟是使用者實際上是編譯一個文字檔。
808380	817380	那這個文字檔的副檔名是點tex,然後經過適當的編譯的一些順序之後呢,他可以產生一個pdf的檔案。
818380	824380	那這個pdf就有點像是各位想讀paper好呃,看到的這些pdf檔案這樣。
825380	829380	那所以這是一個latest的一個基本的一些流程。
830380	843380	那呃,這個流程呢,其實如果各位呃,對這些流程不太熟悉的話,那好呃,各位聽眾比呃,如果有用過像說word。
845380	852380	去撰寫文件的話呃,word的這個文件,他基本上就是說你有一個這個視窗的畫面。
852380	862380	那在這個視窗畫面,你可能呃,假設有一個視窗的畫面,那你在這個畫面之下,可能做一些像說輸入文字插入圖片,或者是做一些編輯這樣。
863380	872380	那這類的編輯器比較是說,你在編輯的當下就可以看到這個文件的呃,看看起來的樣子是什麼?
873380	883380	那這個latex比較是另外一種,他稍微比較間接一點。呃,各位在操作的時候,他其實是編輯一個文字檔。
884380	893380	那文字檔,他只是描描述最終文件應該要長什麼樣子的一個敘述的一個語言。
894380	902380	所以其實各位在編輯文字檔的時候,要稍微發揮一點想像力,就是說,哎,你下這個指令,到最後他編出來的文件可能長什麼樣子?
903380	912380	那這個pdf才是各位最後看到的文件這樣。好,所以這個編輯方面跟各位常用的word可能會這個不太一樣。
913380	929380	那我們繼續。呃,接下來我來弄一個算是範例。如果呃,各位沒有就是沒有碰過latex的話,那我這邊來給各位一個簡單的範例。呃,那這樣字會不會太小?
930380	947380	他呃,左邊是左邊是tex檔。然後經過適當的編譯之後,會產生一個pdf檔。好,呃,如果聽眾覺得畫面太小,可以跟我提,那我這邊可以做一些調調整這樣。
948380	962380	好,那基本上一個常見的tex檔的,他會有一個算是標準的進行方式。這個標準進行方式是這樣,就是說,呃,你在敘述這個檔案的時候。
963380	990380	呃,你必須要說明說,呃,你產生出來的東西是算是哪一類的?是一個article?還是呃,像說有些指令是可以產生像說投影片?對,那他會需要定義說,呃,我產生出來的東西算是哪一類的?那他這邊有個指令叫做畫一個斜線,然後document class,然後後面是接你要產生的這個呃,文件的類型這樣。
991380	998380	那跟寫成是非常像的,就是說呃,你在編輯的過程中,你需要適當插入一些package。
999380	1014380	這些package可以告訴你說,呃,你接下來可以用哪一些指令?接下來哪些指令是有被定義的?好,那呃,這邊我稍微提一下,這個第一個package是一個產生呃,在16行這邊會用到。
1015380	1030380	它是一個產生就是呃,測試文字的一個指令這樣,然後第五行這個指令呢?它是一個產生呃,相對應如果各位要輸入一些數學方程式,它有一些指令會定義在這個ams math的這個環境上面。
1031380	1041380	所以下面在像說18行之後呃,有一些數學這個式子這樣。所以為了要使用這些指令,我們需要去引入一些相對應的package。
1042380	1059380	好,那另外一個就是還有一些像說一些資訊,像說是這這篇我剛剛提到是呃,它是一篇文章嗎?所以典型的文章可能會需要有一個標題的資訊,然後作者的資訊,還有這個日期時間的資訊這樣。
1059380	1075380	那可能用有需要用一些相關的指令去做說明。好,那把這些環境就是設好之後呢,下面這個第十行之後就是描述你文件的一個呃,內容的一個部分。
1075380	1085380	對像說第十三行顧名思義,它就是產生一個文件的標題。所以下了這個指令之後,就會產生右邊pdf檔的這三個部分。
1086380	1100380	就是標題,然後作者名稱跟時間。那呃,那個十六行的部分,它會產生一些測試文字。所以這個就是十六行測試文字的部分,在這個地方。
1101380	1118380	那呃,十九行之後是產生一些數學公式,那這些數學公式,它就是排在這個文字的下面這樣。好,所以呃,在使用上,其實就是它的好處就是說,你可以專注在你想要寫的東西上面。
1119380	1137380	像說你專注上你想要寫的內容上面,然後相對的排版或者是字型,或者是這些呃,文字數學是相對的位置。呃,這個排版系統,它會有一套這個方法去把這些相對的位置把它排出來。
1137380	1158380	所以各位在寫這個Latex的時候,其實就是只要專注在這個內容的撰寫就可以了。所以這個算是一個例子,就是給各位看一下這個Latex。好,那這邊跟各位說明一下Latex一些相對應的一些工具。
1159380	1172380	那我相信就是Latex這邊選擇非常非常的多。那我這邊主要分成三類,一個叫做編輯器。它主要是要編輯這個文字檔用的。
1173380	1194380	然後另外一個是排版系統。然後你最後產生出來的這個PDF檔,也會需要去有一些軟體去看這個PDF檔的內容這樣。所以,呃,如果各位要在自己的電腦去設這些環境的話,那可能就是會需要一些相對應的,像說設一個編輯器。
1194380	1219380	這個排版系統,然後設一個,選一個PDF這個viewer這樣。那編輯器呢,其實市面上有蠻多,就是說特別專為這個Latex設計的一些編輯器,像說下面這一些。或者是一些比較通用的,就是只要是可以編輯純文字的編輯器,呃,例如是這一些這樣。好,那因為時間因素,我就不全部都提。
1219380	1245380	好,那當各位把這些文字檔案編輯好之後呢,我剛剛提到就是說還需要一些編輯的這個排版的一些系統。那市面上比較常見大概就是這三個。那這三個其實都是可以免費下載的一個,呃,裝在電腦上面的一些系統這樣。那他們會有一些相對應的這個系統環境的設定。那,呃,因為時間因素,所以這些環境設定我就不提。
1246380	1264380	那當各位如果成功編輯之後呢,會有一些相對應的這個PDF檔案的這個檢視器這樣。好,所以這邊我給各位看一個算是例子好了。環境就是如果從這裡面挑的話,我挑一個。
1265380	1290380	假設我這邊挑一個,呃,visual studio code。如果各位有有在寫code的話,可能有聽過這個編輯器這樣。然後用這個text live,呃,就是我這台電腦其實已經裝了text text life,然後最後可能會有一個PDF這個檢視器這樣。好,所以我這邊就開一個示範的那個。好,就剛剛這個檔案,這個這個檔案是一樣的這樣。
1291380	1317380	然後可能就,呃,這其實就跟寫程式一樣,它背後會有一些相對應的編譯的功能,然後這個它剛好就是可以直接去看這個相對應的PDF的功能這樣。所以如果各位要編輯的話,假設要在這邊再多加其他東西,假設那就直接加入,那各位編輯的話就會直接在這邊就是編譯之後,它PDF檔就會做一個更動這樣。
1318380	1344380	好,這個算是,呃,如果各位沒用過latex的話,它其實是一個,呃,我自己感覺跟寫程式是一個蠻蠻接近的一個功能這樣。那只是最後產生出來結果是一個PDF檔。好,那以上是主要是做這個latex的基本介紹。那各位可能會好奇說,好,所以有這麼多的這個文件編輯的工具,那為什麼我們要用latex?
1344380	1370380	那我這邊就是算是快速提一下幾個latex的一些特色或優點。好,其中一個特色就是說,它對於處理這種數學方程式,假設各位的報告或者是paper裡面需要用到非常非常多的數學式的時候,那在使用latex其實它有一些優勢在這樣。
1370380	1386380	舉例來說,像說各位要輸入像右下角這個這些數學式,那這些數學式呢,呃,各位可以看到它其實是我這邊就舉例,就是它可能跟一些什麼三角函數的一些符號會有關係這樣。
1386380	1415380	那如果各位想要輸入這個內容的話呢,在latex之下,它其實就是開一個相對於數學的環境。然後,呃,像說這些函數,這些什麼sin啊,θ啊,或者是呃,分數之類的,它都會有一些相對應的這些數學符號,像說有一些sin,θ,或者是假設各位要輸入分數的話,分數有一些相對的環境。
1416380	1441380	可以輸入。那像這邊有個奇怪的符號,它其實也有一些相對的符號可以做輸入這樣。好,那,呃,如果各位的文件是數學是非常多的話,假設有非常長的這個數學推導公式證明之類的,那以純文字方式的編輯其實是比較好維護的。
1441380	1466380	因為在看文字的時候呢,其實各位就直接看,哎,這個符號就直接知道這個符號是什麼。而省去把這些符號把它翻譯成就是我們好看的數學式的樣子。好,那另外一個,呃,我順便在這一頁提,就是latex還有一個特色,就是說當你有很多東西需要交互引用的時候。
1467380	1480380	呃,舉例來說,在可能,呃,比較需要用到很多數學式的一些相關的paper裡面呢,可能有時候會用數字代表一些方程式,方程式編號1234這樣。
1481380	1494380	那在文文章的進展之下,可能我們會需要說,呃,可能利用哪一個數學是我們去推什麼東西。所以在文章敘述中呢,會需要反覆的提到一些數學式的一些。
1495380	1517380	呃,編號這樣。那latex其實也有一些蠻好的功能,就是你可以利用就是交互參照。指令這邊標出來,你可以定一個算是lay label,定一個標籤。那在文章中,你要引用這個標籤的時候,你可以去把它當成是一個變數名稱去引用它這樣。
1518380	1527380	好,那這邊快速跟各位提,這個算是latex的一個特色,在處理數學式子方面是有非常強大的這個功能這樣。
1528380	1543380	好,那另外一個算是我個人的使用經驗,就是latex的一個特色。它的一個特色是說,你在處理一個非常長的文件的時候,它有特別的優勢在這樣。
1544380	1567380	什麼叫做非常長的文件呢?假設舉例,各位要寫,假設碩士論文、博士論文。這個時候,頁數可能就會到非常多頁。或者舉例來說,假設各位要,就就是,呃,像說,呃,各位市面上看到的一些教科書,教科書可能動輒幾百幾千頁。
1567380	1584380	那這個時候如果,各位可以試著想想看,如果這種幾百幾千頁的文件要怎麼維護?那其實latex有一個蠻,我個人蠻喜歡的功能就是說,它可以把文件內容拆開成不同的檔案來撰寫。
1584380	1606380	所以我這邊舉一個例子,假設你現在有一個這個man.tex的檔案,這個各位可以看成是一個主要的檔案。那這個主要檔案會描述說,呃,這一篇文章裡面,它有兩個部分,一個是introduction,另外一個是results。
1607380	1622380	那這樣就描述結束了。呃,順便一提,這個input的這個檔案就是,呃,input的這個指令可以把它看成就是說,把這個檔案的內容把它複製過來。各位可以先這樣做一個理解這樣。
1623380	1643380	所以當latex遇到這邊的時候呢,它會把相對應的檔案把它抓過來。所以這個時候,各位在寫introduction的時候,就只要專注在introduction的敘述上就好了。那所以這個檔案就是特別在講introduction的內容,所以各位可以看到它有一些測試的文字。
1644380	1669380	然後有下面有一行測試的文字在這邊這樣。那這個introduction它其實我這邊有個指令,就是section,就是呃,它其實是這一篇文章的其中一個section,然後section後面接它的這個section的標題。好,那所以如果各位要專心寫introduction的話,就開這個檔案專心寫就可以了。
1670380	1685380	那如果各位要寫另外一個section,像說results,就是專心開這個檔案,專心就是在這邊做編輯。那所以把這些資料分開來撰寫,其實對各位在維護比較長的文件是比較簡單的。
1686380	1705380	好,那還有一個算是我個人覺得latest一個蠻,蠻,也是威力蠻強大的一個功能這樣。就是呃,如果各位善用input的這個指令,各位把它想要input的這種外面抓一個檔案,把它貼過來。
1706380	1721380	那所以其實各位在有些實驗數據,假設這些數據是純文字好的,假設各位用呃,程式算出一個數字是,假設數字是123,那你可以把這個數字存成一個文字檔。
1722380	1740380	那在文件編輯的時候,你在適當的位置就是插入這個文字檔的數字內容就可以了。各位可能會問說,那我為什麼不直接在這邊打123就好了?呃,產生出來的文件結果是一樣的。
1741380	1765380	可是如果以維護的角度而言的話,呃,我個人是比較傾向說把文件內容跟實驗數據把它分開來做一個,就是分開成不同的檔案。假設你事後跑了不同的實驗數據需要更新的時候,你只要更新這個檔案就可以了。你並不需要跳回去results的這個段落去改這個數字。
1766380	1787380	特別是說,如果這個數字被用了很,就是在文章裡面出現過很多地方,那如果你改了其中兩個,那有一個忘記改,那這個時候可能會被reviewer challenge就是說,所以你呈現出來是什麼東西這樣。對,所以呃,這個算是如果以一個比較長遠的角度,要維護一個比較大型的文件。
1787380	1798380	那這些文件可能,呃,呃,可能需要分,呃,做變動更新的時候呢?我個人是覺得這種分開檔案是蠻推薦的。
1799380	1811380	好,算是我這邊提了兩個latex的一個特色,那我接下來講一個graphics算是切入到今天的主題,就是用latex要加入一些科學繪圖的元素。
1812380	1824380	好,那呃,如果各位去網路上搜尋latex插入圖,大部分的文件都會告訴你說,呃,有一個指令叫做include graphics。
1825380	1834380	這個指令告訴我們的是,呃,好,那這個指令呢?它需要一個叫做graphics x的package才能就是使用這樣。
1835380	1852380	好,簡單來來說就是說,呃,它會從你的電腦裡面把檔案抓出來,像說這個時候有一個假設jpg檔,那這個jpg檔,它就會把它抓出來,然後把它排在你的這個,呃,pdf文件裡面的適當的地方這樣。
1853380	1861380	那所以我這邊有一個例子就是說,欸,所以它抓了兩張圖,一個是jpg檔,然後一個是png檔。
1862380	1874380	好,那抓了這兩張圖就是把它做一個排版,可能,呃,其實左邊這個是jpg檔,然後,欸,左邊是jpg,然後,呃,右邊這個是png檔。
1875380	1891380	好,所以現在各位,呃,畫面有兩張圖。那,呃,好,呃,因為時間因素,我可能沒有辦法每一個指令都說明這樣,對,那如果就是事後就是聽眾有,呃,任何問題想要了解的話,就是歡迎在就是發問。
1892380	1919380	好,那好,所以這個基本上就是插入兩張圖的一個指令這樣。那,呃,各位paper在繪圖的時候呢,其實要稍微注意就是圖片有分成是這種叫做resource scan,就是你把一個圖形,假設各位現在手邊有一張圖,呃,resource graphics有點像是說,它把這張圖呢,取很多不同的像素。
1920380	1945380	那把每一個像素的顏色把它記錄起來。那,所以像說jpg檔或者png檔,它基本上在,呃,背後在儲存的資料就是每個像素的這些資訊是什麼。那它當然是有做一些,呃,影像處理一些其他的這個處理,不過它基本的精神就是不同位置的顏色的內容把它儲存起來。
1946380	1955380	可是,呃,這類的儲存方式會有一個缺點,就是說,假設各位把這個圖放的很大的時候。
1956380	1984380	我這邊投影片可能,呃,不知道看得很清楚。各位如果手邊有像說jpg或者是png檔,各位可以試著看看把這些圖檔,你可以假設針對一個地方把它縮放,一直放大放大放大。放大到最後呢,你會看到那個邊緣有一些模糊的景象。那可能文字也會變得比較模糊,可能無法判讀這樣。
1985380	1994380	那以這個學術文件來說的話,這件事情是其實比較不好的,因為它可能會影響我們對一個觀念的認知或者是判斷這樣。
1995380	2014380	所以呢,其實在這個學術文件裡面是比較偏好用就是所謂的vector graphics,就是說你在儲存圖的時候呢,其實應該要以所謂的向量圖。你在描述這些文件資訊的時候呢,呃,應該是要用說,呃,現在有一張圖。
2015380	2037380	它的長、寬各自是多少?它的位置是什麼地方?然後它裡面的這些線條的這些點的坐標?或者是說這些線條它是圓形還是正方形還是直線還是三角形?用這些方式去描述一個圖形。
2038380	2049380	那這個是就是學術文件其實是比較偏好的這樣。那常用的vector graphics其實有像說,呃,eps檔案,它是一個常用的vector graphics的一個這個檔案格式這樣。
2050380	2066380	好,所以到這邊各位可能會想說,呃,那所以我用latest的話,我就直接像各位程式產生出來檔案,我就直接存檔,存在eps在插到裡面就可以了嘛。好,理論上是可以這樣做。
2067380	2084380	可是呢,呃,各位有沒有想過,呃,一些情況就是,我這邊跟各位舉例,呃,這些情況其實是我以前在寫paper有遇過的情況。好,假設現在有兩張圖,左邊跟右邊這張圖。
2084380	2097380	我跟各位做一個舉例。好,假設現在有,各位要呈現一個像這樣的圖,然後它可能有一條曲線在這邊,有另外一條曲線在這裡。
2098380	2113380	然後可能會有一些,呃,相對應的legend,就是說,呃,這個可能這個一號是什麼?二號是什麼?就是這個一號可能是其中一條線,二號是其中一條線。
2114380	2130380	那各位有沒有遇過一個情形就是,在出這些圖的時候,你在這個圖裡面的一些部分,像說,假設這邊相對應的一些label,它剛好跟你的paper的一些方程式編號有關係。
2131380	2141380	假設你,呃,其中一條曲線是你的根據方式編號一號產生的,那另外一個可能是根據方式編號三號產生的。
2142380	2157380	假設各位有需要碰到一個這樣的圖,那這樣的一個圖呢,如果各位先把它程式產生成EPS檔的時候,這個一號跟三號其實就已經寫死在這個檔案裡面了。
2157380	2166380	到時候如果各位在編輯paper,這個一號三號號碼變的時候呢,其實你的圖並不會做相對應的更更新。
2166380	2179380	對,所以這個是我其實以前寫paper有遇過的一個情境,那後來我其實有稍微試著想看看說有沒有一個比較有系統的方式去處理這個問題這樣。
2179380	2187380	那這個也就是我等一下要講的這個pgftikz的一個做法,那算是我個人的一些經驗這樣。
2188380	2200380	到這邊各位聽眾有沒有一些問題?如果有問題的話可以就是語音跟我提一下這樣。
2204380	2208380	如果沒有的話,那我來提一下pgftikz這個工具。
2209380	2214380	那首先講這個工具的時候呢,其實我們再回到我們要畫圖這件事情。
2217380	2223380	跟我比較相關的領域,通常會涉及的圖形大概不外乎就是這兩類。
2223380	2230380	一個叫做系統架構圖,它會描述說你的這些資訊是怎麼做處理的。
2230380	2240380	像說你有做一些加法,做一些這個不同系統的處理,然後把一些相對應的資訊把它做一些不同的連結這樣。
2240380	2246380	這個下面這張圖是在我的研究領域算是蠻常出現的一些相對應的圖形。
2247380	2252380	那這個我們會叫做系統架構圖。
2252380	2258380	那各位其實在看這種圖的時候呢,它其實還蠻簡潔的。
2258380	2274380	它主要就是由幾個元素構成,就是文字,然後一些線條,然後一些假設不同的方塊,有可能這個長方形或者是圓形這樣。
2274380	2277380	大概就是這幾個元素而已。
2277380	2280380	在敘述起來其實不會很複雜。
2280380	2288380	所以如何有效的產生這種相對應的圖,其實是一個蠻有趣的課題。
2288380	2291380	好,這是 Citizen Diagram。
2291380	2294380	那另外一個就是我剛剛提到的圖表。
2294380	2299380	像說我右邊這個也是一個示意圖,假設它有兩個曲線。
2299380	2305380	那這兩個曲線可能各自有各自的像說橫軸跟縱軸,然後會有相對應的資料點。
2305380	2307380	那我這邊只是畫一個示意圖。
2307380	2314380	那這些資料點可能用假設這個圈圈跟一個十字形來表示這樣。
2315380	2331380	那這兩張圖呢,其實你都可以用 Lattice 配上 TIKZ 或者是 PGF Plots 相對應的指令,直接在 Lattice 產生兩張圖這樣。
2332380	2339380	那所以接下來我會跟各位說明一下說,如果要產生這些圖呢,可能會需要哪些相關的一些內容。
2340380	2344380	好,那這邊我給各位看一下程式碼。
2344380	2346380	TIKZ 主要是這個樣子。
2346380	2352380	它是,你可以把它想像成它是一個描述圖形的一個語言。
2352380	2359380	那這個語言,就我剛剛提到,它是一個你要描述一個向量圖嘛。
2359380	2364380	所以如果各位回憶一下以前可能學過的一些向量的觀念。
2364380	2371380	要說明一個向量,其實可能就說明它的像說起點、終點線連起來。
2371380	2378380	然後說明不同的形狀,可能我只好說明這個三角形,就是把端點把它標出來。
2378380	2384380	那或者是圓形的話,可能就是說明它的圓形跟半徑之類的。
2384380	2391380	所以它其實是用一個幾何方式的去描述你產生出來的圖形。
2392380	2397380	所以我這邊做一個舉例就是,像說如果各位要畫一個線段的話。
2397380	2400380	那它的相對應的指令其實還蠻直接的。
2400380	2407380	就是你就是把相對應的座標點把它確定出來就可以了。
2407380	2417380	SHOW這個指令就是你畫一條直線,然後從00這個座標點畫到10這個座標點。
2418380	2426380	所以當你跑了第四行這個指令之後呢,它就會產生一個這個線段。
2426380	2431380	從00跑到10,它就畫出這條線段這樣。
2431380	2436380	那也有些指令就是說,你可以對這個線段做一些像說裝飾。
2436380	2438380	你可以畫一個箭頭。
2438380	2445380	那它的相對應指令就是說,你畫一個類似箭頭的形狀,畫一橫,然後一個三角形。
2445380	2449380	那這個箭頭形狀呢,它從00開始。
2449380	2454380	各位可以想像它是從00,然後從00到01畫一個箭頭這樣。
2454380	2457380	所以就是上面這一段箭頭。
2457380	2466380	所以它其實算是一個蠻直觀的一個描述語言,去描述一些幾何形狀。
2466380	2473380	所以像說如果各位要畫三角形的話,那其實就是把相對應的座標點。
2474380	2476380	其實就是這一點。
2476380	2479380	這一點就是我們的11座標點。
2479380	2481380	然後這一點是22。
2483380	2485380	然後這邊是2。
2488380	2492380	所以就是畫這幾條線,然後把它接起來這樣。
2492380	2502380	那有一些額外的指令,像說你可以畫調整線條的粗細,調整線條的格式,或者調整線條的顏色這樣。
2502380	2505380	那這邊就是給各位一個範例做示範。
2505380	2508380	那當然它可以畫一些像說畫圓。
2509380	2519380	那這個代表說一個圓心是1-1,圓心在1-1,然後半徑是0.5的一個圓這樣。
2519380	2521380	所以就是畫出這個。
2521380	2526380	那也可以畫出一些相對應的,像說它畫一個正方形。
2527380	2537380	它的指令是它從這個正方形的一個角落,然後拉到另外一個角落這樣。
2537380	2545380	所以左上這個角落剛好是3-1,然後右下這個角落是4-2這樣。
2546380	2559380	所以它其實就是只要各位確定好這個座標系,然後把一些座標數字確定出來之後,它其實就是由一些蠻直觀的語言去繪出這些圖這樣。
2559380	2563380	所以這個是TikZ基本上畫圖的功能。
2563380	2573380	那各位其實可以回到,假設各位研究需要畫圖的時候,如果是一些比較像說前面這一頁提到的一些架構圖。
2573380	2581380	它其實不外乎就是一些線啊、形狀,然後一些文字方塊的一些組合這樣。
2581380	2589380	所以像說如果各位,我再提一下,如果要畫文字方塊的話,它可以用一個叫node的指令。
2589380	2598380	這個node的指令,你可以把它想像成插入一個文字方塊,然後插入在哪一個位置。
2598380	2611380	像說22行這個指令就是插入在00這邊,在00這個地方插入一個文字方塊,然後它的文字內容是00這個文字內容這樣。
2611380	2624380	那一個比較特別的是說,在這個地方呢,它其實,呃,我綠色標的這個地方,它其實是跟這個latest是相容的。
2625380	2640380	簡單說就是你可以在latest裡面用到的語法,包括你用到的像說數學式,或者像說你要引用一些方程式,或者是你要引用一些reference的號碼,都可以直接寫在這邊。
2640380	2646380	然後latest在編譯的時候,它會自動針對這個部分做更新這樣。
2647380	2654380	那因為時間因素,我這些指令可能就不細講,就是基本上你可以產生一些文字方塊。
2654380	2669380	那我接下來再跟各位講一個概念就是,呃,我個人對Tik是一個蠻喜歡的地方就是,它能夠對呃,你的圖表做一個非常精準的描述。
2669380	2678380	那原因是什麼?原因就是因為它背後都是用一些座標系這些數字去,呃,描述這個圖形的。
2678380	2688380	所以舉例來說,呃,像說我畫右邊這張圖,右邊這張圖其實我有把相對應的指令列出來這樣。
2688380	2692380	那它基本上就是插入一個文字方塊。
2692380	2705380	這幾條就插入一個文字方塊,然後它的內容是這個textbox,然後一些相對應的一些風格這樣,然後它的位置是放在座標系的00。
2705380	2714380	然後一個比較特別的是,你可以針對這個文字方塊取一個名稱,用個小括號取一個名稱這樣。
2714380	2726380	那接下來你畫其他東西的時候呢,你可以相對於這個名稱textbox的這個名稱去做它,呃,不同位置之間的敘述。
2727380	2746380	舉例來說,就是像說6到8這邊,它可以針對說textbox的northwest的這個左上這一點,就是在textbox左上這一點去畫一個圓形,然後這個圓形半徑是0.05這樣。
2746380	2752380	所以各位就得到這個圓形,它就很精準地貼在這個textbox的左上角。
2752380	2761380	那你可以去畫出像說它的北邊啊,或者是其他的這個地方這樣,所以可以畫出這些相對應的位置。
2761380	2774380	那這些位置其實它也可以叫anchor point,就是到時候你如果在線段做連結的時候,你可以直接強制指定線段連到這個點,或者這個點,這個點這樣。
2775380	2779380	好,所以這是相對於TikZ用的這個。
2779380	2788380	那,呃,我接下來稍微說明一下就是我個人的一些使用經驗,畫這種系統架構圖的一些使用經驗。
2788380	2796380	呃,我個人蠻喜歡的一個點就是說,它其實對Latest是一個蠻,呃,兼容性蠻好的。
2796380	2803380	那像說各位在這個文字的這個地方呢,其實就是直接輸入相對應的Latest的指令。
2803380	2819380	所以當你有什麼方程式編號,或者是一些號碼,或者是一些比較特別的數學,呃,字型的時候,其實舉例來說,像說你這個圖裡面需要有個特別的字型,它都可以很完美地呈現出來這樣。
2820380	2831380	那另外一個就是說相對應的大小,呃,這些大小其實它都是用數字去描述的,所以它可以呃,描述的相對位置非常的精準。
2831380	2843380	所以這兩個文字方塊其實是一樣大的,就是這個方塊跟這個方塊的大小是一樣大的,而且它們其實是完整對齊的。
2843380	2853380	就是如果各位仔細把圖放的話,它這邊左半右半這邊是彎,是精準對齊的這樣。
2853380	2867380	那呃,為什麼會這樣?其實就是各位在寫的時候,其實已經把這件事情把它精準地敘述出來,所以它做出來的圖可以到非常的,就是大小啊跟位置可以非常的精準這樣。
2867380	2884380	那另外一個就是說我覺得這種圖片它是比較好做維護的,簡單說就是因為它背後是這些文字檔,所以要維護的話呢,其實假設你這個,好,假設在這個文字檔,你所有circle都要把它改得比較大。
2884380	2895380	我不想要用0.05,我想要把這些所有circle都改得大一點,那其實就是在文字檔裡面做一些搜尋取代,把這些0.05都取代掉就可以了。
2895380	2914380	好,那另外一個算是個人看法就是,因為是文字檔,所以如果各位對一些版本控制的一些軟體界面有使用經驗的話呢,它可以用像Git的方式去維護你的文件或者是圖表怎麼做的變更這樣。
2915380	2937380	好,所以這是我算關於對用TIKZ畫一些圖的一些心得這樣。那接下來我來講一些plot,這個plot的話呢,你可以把它看成就是說,剛剛我們要畫一些實驗的呈現的一些圖,然後可能會有一些橫軸、縱軸的一些描述這樣。
2938380	2950380	那要產生這張圖,各位可以先想想看,各位其實要產生這張圖的時候做了什麼事情。其實不外乎大概就是做了三件事情。
2951380	2968380	第一件事情就是說,各位很辛苦做了一些實驗,寫了一些程式,產生一些實驗數據或者收集到一些實驗數據。所以這個應該是各位做研究的一個階段,就是產生了一些實驗數據。
2969380	2981380	那另外一個階段就是說,根據你這些實驗數據呢,你想要產生一些比較漂亮的一些圖,然後可能比較清晰、比較一目瞭然的一些圖這樣。所以這可能是第二個階段。
2982380	2995380	那第三個階段就是說,到時候你產生圖之後呢,你需要把它呈現在,像說你的paper,或者說你的投影片,或者是你的海報上面。所以可能會有這三個階段。
2996380	3016380	那大家比較常用的階段可能就是,會傾向把階段一跟階段二,可能是用同一個軟體去處理。舉例來說,我自己比較常用的是matlab。matlab你可以做一些計算,然後它有一些功能可以產生圖。
3017380	3036380	那圖之後可以做一個存檔這樣,然後再把這些存檔之後再把它貼到,像說各位的paper或者是slice上面。這是一個做法。那如果各位有一些其他的語言,像說Python或者是R,或者是GNU plot,它其實有蠻多種不同的選擇這樣。
3037380	3064380	那這個是一個做法,算是大家比較通用的做法。那不過這邊我想可以請問各位幾個情境,就是這幾個情境是其實各位做研究的時候遇到的。如果當各位遇到下面這三個情境的時候,以上這些做法可能會變得有點就是比較繁瑣一點。
3065380	3084380	第一個情境就是說,好,假設你把你的圖產生好了,那給其他人看過,給你的合作者或者advisor看過,他覺得這個圖可能需要再多加一條曲線,或者是多一個方法做比較,或者是多一些資料點。
3085380	3110380	那如果是用這種,像說meta的方法,可能你還要跑回去原來的程式,程式重跑一遍。那可是各位想想看,這好像有一點,有些地方是重複到的。就是這張圖裡面呢,其實有些曲線,有些數據是你以前已經處理過了,所以其實你並不需要重新再處理一次。
3111380	3130380	而你要做的事情應該是針對你新的,還沒有做的事情,特別去做處理。那所以是不是有一個東西能夠把這件事情分開來?就是等於是第一件事情,產生資料跟畫圖,這兩件事情是不是可以分開來處理?
3131380	3143380	那當你有新的實驗的時候,其實你應該要專心在把產生新的資料上面。那畫圖這件事情應該是,你應該是有個通用的介面去把圖做更新這樣。
3144380	3164380	那另外一個情境就是說,可能各位在寫paper的時候,假設各位改了數學符號,在改paper的過程中,可能有些數學符號你本來用A,那後來你可能把它改成用B,那變成是你在這篇文章裡面,所有用符號A的東西都要換成符號B。
3165380	3184380	那如果很不幸的,它這個符號B出現在你的圖的其中一個小小的地方,那你還要再回去開matlab,再把那個B,那個A的地方手動改成B,那東西多的時候,這件事情其實是有點,就是會有點繁瑣這樣。
3184380	3207380	好,那還有另外一個就是數學相對的字型。如果各位有一些繪圖經驗的話,就是matlab產生的圖呢,下面的文字它其實是某一種字型,可是如果各位用letters寫paper,paper要求的格式的字型,其實有時候是另外一個,它不一定跟matlab的字型是一樣的。
3208380	3224380	所以有沒有方法可以就是說,把所有的字型都統一這樣。那此外就是說,如果這邊會出現數學字型的話,假設一些比較特殊的數學符號,那它能不能一併用同樣的字型出現在這張圖裡面這樣。
3225380	3240380	所以這個是,其實我之前在畫圖的遇到一些相對的,相關的一些情境這樣。那我自己稍微研究過後呢,我覺得其實我個人啦,就是使用pgfplot的這個方法。
3241380	3260380	那它其實是一個繪圖的這個tool,然後是基於Tikz作為一個繪圖功能。那它跟這個letters是相容的。那算是一個新的繪圖工具,不過它的繪圖的精神其實跟大部分的繪圖軟體都是,就是作圖的這些軟體差不多。
3260380	3270380	就是你會需要產生相對的label、letter、legend或者是一些不同線段的格式這樣。那這部分精神是接近的。
3271380	3286380	那因為時間因素,我可能快速提一下就是,雖然這是一個新的工具,可是是有一些現成的轉換工具。假設你MapLab產生出來的圖呢,可以有一些轉換器可以轉成Tikz的語法。
3287380	3299380	那這個是我在做投影片的時候,我查到就是這個Python好像產生的一些圖,也有一些相關的一些package可以去轉成Tikz的語法這樣。
3300380	3315380	好,那另外我再提一個經驗就是,一個經驗就是說,假設各位數據需要做更新的時候,剛剛提到的,假設你有三個實驗圖,那你可能又被要求要再多加另外一條曲線。
3316380	3333380	那這個時候呢,其實可以不用重新再產生圖。那我自己的做法是,其實你應該去維護一個文字檔。這個文字檔描述綠色這張裡面的這些相對的資料點的數據。
3333380	3350380	那可能有一個藍色的文字檔,描述藍色這些線的一些數,這些圖表上面的一些數值這樣。那到時候,那個PGFplot可以就是直接用引入檔案的方式,直接同步更新這些圖。
3350380	3368380	好,我想後面另外一件事,我快速跟各位提一下,它哲學是什麼。那如果各位對這些指令有興趣的話,我們可以之後再討論這樣。呃,這個算是一個PGFplot的一個使用的一個精神。那各位可以注意到,它其實是跟這個Latest相容的。
3368380	3393380	那它其實是包在這個Tikz的這個環境裡面這樣。那它要做的事情,其實就是說,呃,有一個叫做Begin and end axis的一個環境。那這個環境呢,你會需要有一個範圍去說明說,呃,這個座標走的一些,像說它的寬度啊,它的S label是什麼值,然後Y label是什麼值。
3393380	3416380	那注意到就是說,這個地方呢,你就可以放Latest的指令,所以你可以確保說它的字型是統一的。所以其實各位可以如果仔細看這張圖的話,這個地方的字型跟我頭影片的字型是一樣的。對,那所以如果你這樣更新的話,它會自動這兩個用同樣的字型去處理這樣。
3417380	3443380	那那個Fplot的就是,有點像是說你產生曲線,所以它會產生,這邊就是產生一個Data1的曲線,然後Data2的曲線。那這邊呢,就是它另外從一個外部的文字檔,這個這邊是一個外部的文字檔。它會把所有的這些資料點的數字把它定義好,然後把這些數據把它抓過來,然後貼在產生這張圖這樣。
3444380	3465380	好,那我想快速的跟各位提。那最後跟各位說明一下算是對Latest的一個看法。好,那如果各位是對於這種Latest DIKZ PjPlot是新手的話,可能從來沒碰過,或者是可能使用經驗不多的話呢,我個人是蠻推薦Overleaf。
3466380	3484380	Overleaf是一個算是線上可以寫Latest的一個平台,那它基本上那些什麼排版的一些設定都幫你設定好了,所以在撰寫上會比較簡單這樣。
3485380	3508380	那我後面列一些相對的這個參考資源,就是如果你有Overleaf的話呢,它其實有整理出一些相關的說明文件,跟一些假設它這邊宣稱30分鐘就可以學Latest的一些文件說明檔這樣。那我自己也找到一些像說,如果各位指定要做比較細部的參考的話,有一些像說Wikibook,有一些做參考。
3509380	3524380	那如果各位對這種繪圖有興趣的話,那有一個叫做PGF Manual,各位可以點進去。它有一個算是蠻詳細的說明文件這樣,可以給各位看一下。
3525380	3539380	就是它有一個針對Tikz,PGF的一個這邊一千多頁的文件,那我其實很多指定都是從裡面去找的,那觀念也從裡面去擷取出來這樣。
3540380	3557380	那有一些網站,像說你的這個網站我覺得還蠻不錯的,就是它有一些用PGF畫圖的一些範例,所以各位如果進去看一下呢,它有一些蠻漂亮的一些範例圖檔這樣,那也有把相對的指定列出來,各位可以做一個觀摩。
3558380	3565380	那另外一個就是說,網路上也有一些線上討論傳,那對於這種Tikz有問題可以在上面發問這樣。
3567380	3575380	那後面呢,我主要是列一些我前面提到的像說編輯器,有相對的編輯器的一些相對的網站這樣。
3576380	3582380	那基本上這些編輯器應該都是可以從網站上面去做下載,然後安裝。
3583380	3594380	那也有一些像說,如果各位想要在自己的電腦去設定這個編譯環境的話呢,其實有幾個比較通用的,我也把相對應的資訊列出來。
3595380	3603380	那如果各位對於這種圖表轉Tikz有興趣的話呢,其實我這邊也有列相對應的網址,各位可以做一個參考這樣。
3604380	3619380	好,那我想時間也差不多,那最後就謝謝各位的聆聽,那就是也就是希望各位就是能夠在研究中使用Latest這樣,然後成功表達出各位想要表達出的結果。
3621380	3623380	好,那我想我們就到這個地方。
3624380	3643380	謝謝老師精彩的分享,然後我剛剛看到那個聊天的對話記錄裡頭有幾個問題,然後歡迎就是在剛剛在聊天聊天室有提問的同學可以直接打開麥克風。
3644380	3646380	然後跟老師詢問你的問題。
3649380	3655380	或者是如果你的麥克風不方便的話,我可以先很快的go through一下剛剛的留言。
3656380	3677380	呃,有有幾個留言,我看到是比方說像燕他,我想要請問一下,x和html的語法相似程度有多大?喔,有沒有建議使用的text文檔?文檔編輯軟體編輯軟體?對。
3678380	3689380	OK,好,那非常謝謝燕的這個提問這樣,那我就先針對那個語法相似程度做一個算算是給各位做個介紹。
3690380	3711380	我這邊算是一個使用介面,那給各位做參考。那其實如果各位呃,對於html有點研究的話呢?呃,html它好像在說明一個標籤的時候,它會有一個它前面會加一個東西,然後結束這樣也會加一個東西這樣。
3711380	3740380	那呃,在這個latex裡面,它比較像是說它用一個反就是斜線,然後建指令,然後用這種大括號把這個東西放在裡面這樣。呃,我自己的感覺是說它的精神是潔淨的,那像說呃,如果你後面放的東西是比較在更更複雜一點,所以它會用一些像說begin end的環環境來把這邊的東西把它包起來這樣。
3741380	3768380	所以呢,呃,我覺得精神是還蠻像的,用就是跟html來描述還蠻像的這樣。那呃,就也跟我前面提的接近,就是它的精神有點像是說它可能特別在這種寫這種呃,像說處理數學式子,或者是對於這種學術文章的一個排版,它可能呃,有比較多的一些功能這樣。
3768380	3772380	好,那呃,另外看一下。
3773380	3776380	好,另外下面的話。
3776380	3778380	呃,text,對,呃。
3778380	3784380	直接使用source code,control軟體。
3784380	3786380	好,謝謝。
3786380	3788380	來追溯編輯問題。
3789380	3804380	好,謝謝。呃,剛剛我好像忘了回答一個問題,就是有沒有建議使用text文檔編輯軟體,然後認識text語法?對,我是剛剛好像沒有回答到。呃,這個編輯文檔軟體,我可以回到剛剛的那個。
3804380	3819380	呃,我個人看法是,其實就是只要用的順手就可以了。呃,其實這些都可以認得。
3819380	3828380	呃,紅色標的這幾個應該都可以認text語法。
3828380	3835380	然後,呃,右邊這幾個可能要特別裝一些套件。
3835380	3843380	呃,最後這個是記事本啊,就是windows裡面的記事本,所以他可能沒有,沒有辦法有其他的套件。
3844380	3848380	那前面這幾個編輯器其實都有相對應的套件。
3848380	3851380	可以跟各位demo一下。
3851380	3860380	我,我這邊是用那個visual studio code,然後他有一個package叫做,呃,latest workshop。
3873380	3890380	呃,他其實就跟寫的是有,有點像,如果各位看到這邊其實有一些相對的這個,呃,編譯的一些指令這樣。
3890380	3910380	那,我不知道能不能開setting。呃,好。
3911380	3922380	我平常都直接編。呃,好,呃,如果各位有興趣的話,其實可以稍微研究一下,就是,呃,visual studio code的配上那個latest workshop。
3922380	3928380	那,呃,他,他其實這個套件,他會幫你把東西設定好這樣。
3928380	3936380	所以其實你直接打的時候,他說你可以begin,然後,呃,online他就會直接產,產,產生這樣。
3936380	3951380	對,所以,呃,雖然是文字編輯器,那在適當的這個套,套件使用的時候,呃,他有時候有,有時候像說有一些環環境可以選這樣。
3952380	3960380	好,那,呃,我相信就是我標的這幾個,其實都可以做到類似的功能啦。
3960380	3967380	那如果是左邊這邊,他應該是預設內,內建就有一些相對的語法提示功能這樣。
3968380	3985380	那我再回到那個的這個第三個問題。呃,好,他,呃,如果需要多人編輯一個文檔,那是直接用source code control軟體來追蹤,還是有test專用維護平台?
3985380	3995380	呃,如果要以就是簡單易用,就是不需要做什麼設定的話呢,我個人是比較推薦overleaf。
3996380	4005380	他就是你,就是overleaf開一個帳號,那你就,呃,可以在這個帳號之下開一個就是project,然後可以分享給其他人這樣。
4005380	4014380	那如果其他人有編輯的話,其實當場其實,呃,我記得他右邊還有一些,就是可以做一些討論串,可以做一些評論這樣。
4014380	4022380	所以,呃,個人我覺得overleaf其實是對初學者而言算是比較,呃,比較有友善的一個界面這樣。
4022380	4029380	好,那如果用source control,呃,source code control軟體追蹤編輯,呃,也可以。
4030380	4037380	那,呃,如果各位有,我剛剛有提到,呃,git嘛,就是應該是有一頁就提到。
4044380	4057380	對,呃,這邊我提到git,就是說他其實他是版本控制軟體,那你可以把它想像成說他其實就是在控管,呃,一群文字檔案他做了哪些更動。
4058380	4067380	那如果你在,呃,做適當的維護的話,呃,這些更動可以在,呃,多個使用者之間去做一些分享這樣。
4067380	4078380	那,呃,我自己在用是,我自己是用,有用git的,可是我比較是寫一個段落之後,我就把它commit到那個git上面。
4078380	4088380	就是,呃,我現在圖畫到這個程度,然後先算是存起來這樣。那如果多個使用者的話,我相信git也是可以辦得到的。
4088380	4105380	那專用維護平臺可能就是,呃,overdiff吧,對,所以他比較像是說,呃,就是看各位使用者會需要用,喜歡用哪一個界面這樣。
4105380	4111380	好,那呃,不知道這樣有沒有回答到那個燕的這個問題。好,謝謝。
4112380	4130380	那我想我在這個階段的話,我先把那個錄影停止,然後歡迎大家現在如果如果老師您還有時間,然後同學還有問題的話,就自由把自由討論。
4130380	4137380	謝謝老師的分享。好,謝謝。呃,就是就我。
