WEBVTT

00:00.000 --> 00:02.000
呃,都可以

00:02.000 --> 00:04.000
你要重新再介紹嗎?還是

00:04.000 --> 00:06.000
沒關係,不用不用

00:06.000 --> 00:08.000
那就直接開始吧

00:08.000 --> 00:10.000
OK,那就交給你

00:10.000 --> 00:12.000
我希望網路等一下情況OK啦

00:12.000 --> 00:14.000
萬一又斷話,那再跟我講一下

00:14.000 --> 00:16.000
好,那現在

00:16.000 --> 00:18.000
全螢幕的畫面是OK的嗎?

00:18.000 --> 00:20.000
OK的

00:20.000 --> 00:22.000
好,OK

00:22.000 --> 00:24.000
那我就直接開始啦

00:24.000 --> 00:26.000
也謝謝剛剛主持人偉哲的介紹

00:26.000 --> 00:28.000
那我是來自海大化工系

00:28.000 --> 00:30.000
博士班的潘浩仁

00:30.000 --> 00:32.000
那今天要報告的主題

00:32.000 --> 00:34.000
就是和我的一個研究有關係

00:34.000 --> 00:36.000
它是有關

00:36.000 --> 00:38.000
P4結晶製程最佳化的一個

00:38.000 --> 00:40.000
高效能的演算法

00:40.000 --> 00:42.000
好,那首先

00:42.000 --> 00:44.000
在開始講今天的題目之前

00:44.000 --> 00:46.000
我要先釐清一件事情

00:46.000 --> 00:48.000
因為聽到結晶這兩個字

00:48.000 --> 00:50.000
如果您是材料背景

00:50.000 --> 00:52.000
或是您可能是化學背景的

00:52.000 --> 00:54.000
同學

00:54.000 --> 00:56.000
或者是學者的話

00:56.000 --> 00:58.000
你可能會想說

00:58.000 --> 01:00.000
那我可能要探討的是

01:00.000 --> 01:02.000
比方金格排列的問題

01:02.000 --> 01:04.000
比方一些morphology

01:04.000 --> 01:06.000
比方說可能我會去想說要打SRD

01:06.000 --> 01:08.000
之類的狀況

01:08.000 --> 01:10.000
但是在我們

01:10.000 --> 01:12.000
程序系統工程領域

01:12.000 --> 01:14.000
也就是這個PSE的領域裡面

01:14.000 --> 01:16.000
我們是泛指任何

01:16.000 --> 01:18.000
從溶液裡面

01:18.000 --> 01:20.000
得到固體的process

01:20.000 --> 01:22.000
所以今天哪怕只是一個沉澱反應

01:22.000 --> 01:24.000
我們也會把它廣義的稱為

01:24.000 --> 01:26.000
crystallization

01:26.000 --> 01:28.000
那在這樣的定義之下的話

01:28.000 --> 01:30.000
這個crystallization

01:30.000 --> 01:32.000
它會是一個分離和

01:32.000 --> 01:34.000
純化的一個process

01:34.000 --> 01:36.000
那它可以用這個連續的方式

01:36.000 --> 01:38.000
也可以用batch的方式

01:38.000 --> 01:40.000
來進行

01:40.000 --> 01:42.000
那SRD是所謂的過飽和度

01:42.000 --> 01:44.000
super saturation

01:44.000 --> 01:46.000
那它可以用以下四種方式

01:46.000 --> 01:48.000
來得到這個過飽和度

01:48.000 --> 01:50.000
那今天的研究我們討論的是

01:50.000 --> 01:52.000
batch的這個結晶製程

01:52.000 --> 01:54.000
那batch的結晶製程

01:54.000 --> 01:56.000
它大部分是拿來製造一些

01:56.000 --> 01:58.000
高附加價值的這個化合物

01:58.000 --> 02:00.000
比方說特用化學品

02:00.000 --> 02:02.000
比方食品添加劑

02:02.000 --> 02:04.000
比方這個

02:04.000 --> 02:06.000
一些藥物之類的化合物

02:06.000 --> 02:08.000
那

02:08.000 --> 02:10.000
它相對於這個連續式來講

02:10.000 --> 02:12.000
它的這個操作彈性比較大一些

02:12.000 --> 02:14.000
它也可以處理一些

02:14.000 --> 02:16.000
比較不好處理的系統

02:16.000 --> 02:18.000
比方說可能今天有這個

02:18.000 --> 02:20.000
毒化物

02:20.000 --> 02:22.000
可能這個漿液

02:22.000 --> 02:24.000
能度比較高

02:24.000 --> 02:26.000
它都有機會可以來做處理

02:26.000 --> 02:28.000
那結晶的話

02:28.000 --> 02:30.000
它大致上會有兩個

02:30.000 --> 02:32.000
最基本的這個mechanism

02:32.000 --> 02:34.000
那就稱為nucleation

02:34.000 --> 02:36.000
成合和crystal growth

02:36.000 --> 02:38.000
長晶

02:38.000 --> 02:40.000
那nucleation的意思就是這個

02:40.000 --> 02:42.000
新的晶體生成

02:42.000 --> 02:44.000
那它生成的時候

02:44.000 --> 02:46.000
它的體積基本上是趨近於零的

02:46.000 --> 02:48.000
那crystal growth

02:48.000 --> 02:50.000
就是一個晶體已經存在在batch裡面

02:50.000 --> 02:52.000
那它就因為會

02:52.000 --> 02:54.000
消耗過飽和度它長得越來越大

02:54.000 --> 02:56.000
這我們就稱為crystal growth

02:56.000 --> 02:58.000
那這個

02:58.000 --> 03:00.000
nucleation又可以被分為以下

03:00.000 --> 03:02.000
幾種不同的mechanism

03:02.000 --> 03:04.000
那第一種是homogeneous

03:04.000 --> 03:06.000
primary nucleation

03:06.000 --> 03:08.000
那它是一個熱力學的自發反應

03:08.000 --> 03:10.000
它只有在這個過飽和度

03:10.000 --> 03:12.000
比較高的時候它才可能會發生

03:12.000 --> 03:14.000
那第二種是

03:14.000 --> 03:16.000
所謂的heterogeneous primary nucleation

03:16.000 --> 03:18.000
它是透過一些

03:18.000 --> 03:20.000
就是不同的

03:20.000 --> 03:22.000
particle

03:22.000 --> 03:24.000
來誘導的

03:24.000 --> 03:26.000
比方說它可能會透過一些粉層particle來做誘導

03:26.000 --> 03:28.000
那第三種叫secondary nucleation

03:28.000 --> 03:30.000
它的意思是指說

03:30.000 --> 03:32.000
這個

03:32.000 --> 03:34.000
nucleation的生成是在

03:34.000 --> 03:36.000
現有晶體的這個表面

03:36.000 --> 03:38.000
那比方說在batch裡面這晶體可能會互相碰撞

03:38.000 --> 03:40.000
它就有一些這個磨損

03:40.000 --> 03:42.000
那磨損下來的這些洩洩

03:42.000 --> 03:44.000
它的體積基本上就趨近於零

03:44.000 --> 03:46.000
那我們就把它

03:46.000 --> 03:48.000
定義為一種nucleation

03:50.000 --> 03:52.000
所以今天舉個例子

03:52.000 --> 03:54.000
如果今天有一個這個batch

03:54.000 --> 03:56.000
它一開始是沒有任何的晶體在裡面的話

03:56.000 --> 03:58.000
那在這個batch的早期

03:58.000 --> 04:00.000
因為要從

04:00.000 --> 04:02.000
把晶體從無中生有

04:02.000 --> 04:04.000
所以它會主要是primary nucleation

04:04.000 --> 04:06.000
但到了後期的話

04:06.000 --> 04:08.000
因為晶體數量多了

04:08.000 --> 04:10.000
所以crystal growth和secondary nucleation

04:10.000 --> 04:12.000
就會變成主要的這一個機制

04:12.000 --> 04:14.000
那在操作一個batch的時候

04:14.000 --> 04:16.000
我們通常可以在一開始的時候

04:16.000 --> 04:18.000
加入一些晶種

04:18.000 --> 04:20.000
也就是所謂的seed crystal

04:20.000 --> 04:22.000
或簡稱seed

04:22.000 --> 04:24.000
那理由是因為

04:24.000 --> 04:26.000
這些seed可以很快的把這個過飽和度

04:26.000 --> 04:28.000
給消耗掉

04:28.000 --> 04:30.000
那一旦消耗掉以後呢

04:30.000 --> 04:32.000
就可以抑制所謂的primary nucleation

04:32.000 --> 04:34.000
那這樣有什麼好處呢

04:34.000 --> 04:36.000
這樣子的好處是

04:36.000 --> 04:38.000
因為primary nucleation有一個特性

04:38.000 --> 04:40.000
叫做所謂的stochastic

04:40.000 --> 04:42.000
就是它有一個

04:42.000 --> 04:44.000
隨機性

04:44.000 --> 04:46.000
所以在這樣子的操作之下

04:46.000 --> 04:48.000
你就可以讓這個process

04:48.000 --> 04:50.000
是比較穩定的

04:52.000 --> 04:54.000
好

04:54.000 --> 04:56.000
那接下來談到要怎麼樣

04:56.000 --> 04:58.000
去衡量一個產品的品質呢

04:58.000 --> 05:00.000
那當然我們知道

05:00.000 --> 05:02.000
產品純度會是一個很重要的指標

05:02.000 --> 05:04.000
但是除了純度以外

05:04.000 --> 05:06.000
另外一個重要的指標

05:06.000 --> 05:08.000
其實是所謂的粒徑分布

05:08.000 --> 05:10.000
crystalsat distribution

05:10.000 --> 05:12.000
或是說csd

05:12.000 --> 05:14.000
那一個好的csd

05:14.000 --> 05:16.000
通常會有以下的一些特性

05:16.000 --> 05:18.000
比方說它必須要是單峰的

05:18.000 --> 05:20.000
比方說它在這個

05:20.000 --> 05:22.000
細小顆粒的

05:22.000 --> 05:24.000
這個比例應該要低一點

05:24.000 --> 05:26.000
那再來就是

05:26.000 --> 05:28.000
因為在一些情境之下

05:28.000 --> 05:30.000
比方說我今天是想要做一個藥物

05:30.000 --> 05:32.000
那我會希望這個藥物在人體裡面的

05:32.000 --> 05:34.000
這個溶解曲線

05:34.000 --> 05:36.000
是一個我們想要的一個曲線

05:36.000 --> 05:38.000
那這樣子我可能就會需要

05:38.000 --> 05:40.000
一個指定好它的

05:40.000 --> 05:42.000
一個產品的平均粒徑

05:42.000 --> 05:44.000
和這個csd的所謂variance

05:44.000 --> 05:46.000
那如果我們可以

05:46.000 --> 05:48.000
去想辦法去設計process

05:48.000 --> 05:50.000
讓這個產品的平均粒徑

05:50.000 --> 05:52.000
和variance達到這樣子的一個要求

05:52.000 --> 05:54.000
那它也會是我們

05:54.000 --> 05:56.000
想要的一個情境

05:56.000 --> 05:58.000
那如果今天這個csd

05:58.000 --> 06:00.000
它的這個特性不太好的話

06:00.000 --> 06:02.000
它可能就會導致一些問題

06:02.000 --> 06:04.000
比方說

06:04.000 --> 06:06.000
今天這個產品它有所謂的雙峰的csd

06:06.000 --> 06:08.000
或是它的這個

06:08.000 --> 06:10.000
粒徑的

06:10.000 --> 06:12.000
分布或是說它的這個細小顆粒

06:12.000 --> 06:14.000
的比例太高

06:14.000 --> 06:16.000
它可能就會導致以下這些問題

06:16.000 --> 06:18.000
包含了這個過高的粒頻阻力

06:18.000 --> 06:20.000
包含了需要用

06:20.000 --> 06:22.000
很多這個washing liquid

06:22.000 --> 06:24.000
來清洗這個固體

06:24.000 --> 06:26.000
或甚至是說在

06:26.000 --> 06:28.000
出生的時候

06:28.000 --> 06:30.000
這些小顆粒可能會直接貼在

06:30.000 --> 06:32.000
這個管壁上面

06:32.000 --> 06:34.000
這是我們不想要看到的狀況

06:34.000 --> 06:36.000
那所以基本上

06:36.000 --> 06:38.000
該論案就是我們會想要

06:38.000 --> 06:40.000
抑制一些就是過度的

06:40.000 --> 06:42.000
new creation

06:44.000 --> 06:46.000
好,那再來如果我談到

06:46.000 --> 06:48.000
一些這個有關

06:48.000 --> 06:50.000
csd控制的一些策略

06:50.000 --> 06:52.000
那它事實上可以被分為兩大類

06:52.000 --> 06:54.000
第一大類我們稱為model-free

06:54.000 --> 06:56.000
feedback control

06:56.000 --> 06:58.000
那它的想法是它會使用一個

06:58.000 --> 07:00.000
所謂的回饋控制

07:00.000 --> 07:02.000
feedback control loop

07:02.000 --> 07:04.000
和相對應的一些

07:04.000 --> 07:06.000
製程的一些分析科技

07:06.000 --> 07:08.000
就是所謂的PAT

07:08.000 --> 07:10.000
來做這個實施

07:10.000 --> 07:12.000
那基本上這樣子的

07:12.000 --> 07:14.000
控制策略我只要知道一些

07:14.000 --> 07:16.000
系統基本的

07:16.000 --> 07:18.000
一些特性,比方說

07:18.000 --> 07:20.000
手邊耳提就ok了

07:20.000 --> 07:22.000
那這邊所謂的model-free

07:22.000 --> 07:24.000
這個model是指說

07:24.000 --> 07:26.000
crystal growth和new creation

07:26.000 --> 07:28.000
的一些動力學,我們在

07:28.000 --> 07:30.000
使用這樣子類型的策略的時候

07:30.000 --> 07:32.000
我們不需要知道這些

07:32.000 --> 07:34.000
長經和成分的動力學

07:34.000 --> 07:36.000
那有其中一種

07:36.000 --> 07:38.000
這所謂的model-free的這個策略

07:38.000 --> 07:40.000
叫做supersaturation control

07:40.000 --> 07:42.000
那有些paper會把它

07:42.000 --> 07:44.000
叫concentration control

07:44.000 --> 07:46.000
那它的意思是說

07:46.000 --> 07:48.000
它在整個batch裡面我們把

07:48.000 --> 07:50.000
這個過飽和度就控制在一個

07:50.000 --> 07:52.000
並值,那當然

07:52.000 --> 07:54.000
它會需要一些相對應的

07:54.000 --> 07:56.000
分析的一些

07:56.000 --> 07:58.000
技術,那比方說像這樣子的話

07:58.000 --> 08:00.000
就會需要一個

08:00.000 --> 08:02.000
online的這個濃度量測

08:02.000 --> 08:04.000
那比方說就可以使用FTIR

08:04.000 --> 08:06.000
來做這樣的事情

08:06.000 --> 08:08.000
好,這樣的策略還不錯

08:08.000 --> 08:10.000
因為我們不需要太多的資訊

08:10.000 --> 08:12.000
但是它有缺點就是

08:12.000 --> 08:14.000
我們還是沒有辦法去

08:14.000 --> 08:16.000
直接的去

08:16.000 --> 08:18.000
設計這一個產品的這個

08:18.000 --> 08:20.000
CSD,因為它畢竟是沒有一個

08:20.000 --> 08:22.000
model來描述的

08:22.000 --> 08:24.000
那所以相對應來講

08:24.000 --> 08:26.000
另外一種方法稱為

08:26.000 --> 08:28.000
model-based control,它基本上就會

08:28.000 --> 08:30.000
使用一個叫做

08:30.000 --> 08:32.000
population density function的一個

08:32.000 --> 08:34.000
函數來描述這個

08:34.000 --> 08:36.000
CSD,那這個CSD在

08:36.000 --> 08:38.000
batch裡面怎麼樣的去

08:38.000 --> 08:40.000
改變呢?我們就會用一個叫做

08:40.000 --> 08:42.000
population balance equation

08:42.000 --> 08:44.000
力數平衡方程來

08:44.000 --> 08:46.000
做一個描述

08:46.000 --> 08:48.000
那在這樣子的策略裡面我們通常會

08:48.000 --> 08:50.000
去乘從最佳化問題

08:50.000 --> 08:52.000
去找到所謂的這個

08:52.000 --> 08:54.000
這樣的控制策略

08:54.000 --> 08:56.000
那這個目標函數就可能包含了一些

08:56.000 --> 08:58.000
比方batch time

08:58.000 --> 09:00.000
或是包含了一些產品CSD的

09:00.000 --> 09:02.000
一些統計的一些特性

09:02.000 --> 09:04.000
那decision variable

09:04.000 --> 09:06.000
就是所謂的這個

09:06.000 --> 09:08.000
控制的這個

09:08.000 --> 09:10.000
策略,那比方說可能

09:10.000 --> 09:12.000
是跟溫度軌跡有關

09:12.000 --> 09:14.000
那或者是我可能會再考慮

09:14.000 --> 09:16.000
一些所謂的這個seed recipe

09:16.000 --> 09:18.000
也就是我要加

09:18.000 --> 09:20.000
多少seed

09:20.000 --> 09:22.000
和它的平均歷經之類的

09:22.000 --> 09:24.000
那其中一個使用

09:24.000 --> 09:26.000
這種model-based control

09:26.000 --> 09:28.000
的這個挑戰是

09:28.000 --> 09:30.000
它的這個計算負擔會比較大

09:30.000 --> 09:32.000
因為剛剛所謂的這個PBE

09:32.000 --> 09:34.000
它是屬於平衡分方程式

09:34.000 --> 09:36.000
所以它的計算負擔是

09:36.000 --> 09:38.000
比較大的

09:38.000 --> 09:40.000
那這也是我們這個研究的一個

09:40.000 --> 09:42.000
這個purpose,我們希望

09:42.000 --> 09:44.000
透過一些高效能的

09:44.000 --> 09:46.000
計算方式來對於

09:46.000 --> 09:48.000
這些批次結晶製程的這個

09:48.000 --> 09:50.000
最佳化去做求解

09:50.000 --> 09:52.000
那我們會分析幾個問題,包含的

09:52.000 --> 09:54.000
這個目標函數之間的

09:54.000 --> 09:56.000
一些競爭關係,tradeoff

09:56.000 --> 09:58.000
那再來就是我們想要去找說

09:58.000 --> 10:00.000
這個seed recipe

10:00.000 --> 10:02.000
design和一些這個

10:02.000 --> 10:04.000
控制策略的一些

10:04.000 --> 10:06.000
經驗法則,所謂的rule of thumb

10:06.000 --> 10:08.000
那再來我們也會去探討說

10:08.000 --> 10:10.000
如果我們今天使用的是

10:10.000 --> 10:12.000
長期跟溶解這樣的side-coding process

10:12.000 --> 10:14.000
那它對於

10:14.000 --> 10:16.000
CSD的這個控制會有怎麼樣的

10:16.000 --> 10:18.000
一個影響

10:18.000 --> 10:20.000
好,那再來我們要介紹一些

10:20.000 --> 10:22.000
這個理論,那這個理論的話

10:22.000 --> 10:24.000
一開始我們要先介紹

10:24.000 --> 10:26.000
所謂的這個population density function

10:26.000 --> 10:28.000
那如剛剛所說,它是用來

10:28.000 --> 10:30.000
描述CSD的

10:30.000 --> 10:32.000
那假設今天有一個

10:32.000 --> 10:34.000
系統我們只用一個這個

10:34.000 --> 10:36.000
經體的這個特徵

10:36.000 --> 10:38.000
長度來描述,比方說

10:38.000 --> 10:40.000
假設今天這個系統的

10:40.000 --> 10:42.000
這個結晶它都是結晶球狀的

10:42.000 --> 10:44.000
那我可能就可以用

10:44.000 --> 10:46.000
直徑或半徑來作為這個

10:46.000 --> 10:48.000
特徵長度

10:48.000 --> 10:50.000
那如果有這樣子的描述

10:50.000 --> 10:52.000
以後,我們把這個

10:52.000 --> 10:54.000
PDF對L積分

10:54.000 --> 10:56.000
積分出來的結果就會是

10:56.000 --> 10:58.000
這個Batch裡面的

10:58.000 --> 11:00.000
這個結晶數量

11:00.000 --> 11:02.000
那再來我們可以定義一個

11:02.000 --> 11:04.000
這個PDF的這個moment

11:04.000 --> 11:06.000
那這個moment它當然不會是

11:06.000 --> 11:08.000
翻成瞬間或是時刻

11:08.000 --> 11:10.000
那它在物理裡面

11:10.000 --> 11:12.000
有一些別的翻譯,但我覺得好像

11:12.000 --> 11:14.000
都不太貼合我們的這個

11:14.000 --> 11:16.000
情境,所以以下我又

11:16.000 --> 11:18.000
直接稱為它的moment,我就不

11:18.000 --> 11:20.000
做翻譯了,那moment的

11:20.000 --> 11:22.000
定義如下,那從

11:22.000 --> 11:24.000
μ0到μ3這些moment它都有

11:24.000 --> 11:26.000
相對應的物理意義

11:26.000 --> 11:28.000
那μ3的物理意義是這個

11:28.000 --> 11:30.000
經體的這個總體積

11:30.000 --> 11:32.000
好,那我們定義好

11:32.000 --> 11:34.000
這個PDF

11:34.000 --> 11:36.000
以後呢,我們就可以來寫出相對應的

11:36.000 --> 11:38.000
這個population balance equation了

11:38.000 --> 11:40.000
那在這個研究我們有一些

11:40.000 --> 11:42.000
這個假設,那就包含了

11:42.000 --> 11:44.000
這個Batch裡面的

11:44.000 --> 11:46.000
celery是均勻混合的

11:46.000 --> 11:48.000
再來它的體積是定值

11:48.000 --> 11:50.000
那再來我們也忽略

11:50.000 --> 11:52.000
一些現象,比方說

11:52.000 --> 11:54.000
經體碰撞

11:54.000 --> 11:56.000
直接碎成兩半,這個叫crystal breakage

11:56.000 --> 11:58.000
或是說攪一攪

11:58.000 --> 12:00.000
它就黏在一起了,這個叫aggregation

12:00.000 --> 12:02.000
聚集,那我們都

12:02.000 --> 12:04.000
假設這個情況我們先不考慮

12:04.000 --> 12:06.000
那再來就是成和的

12:06.000 --> 12:08.000
這個經體

12:08.000 --> 12:10.000
它一開始的體積會是0

12:10.000 --> 12:12.000
那在這樣的假設之下

12:12.000 --> 12:14.000
我們就可以得到一個相對應的這個

12:14.000 --> 12:16.000
PPE

12:16.000 --> 12:18.000
那如各位所見,它就是一個平衡的分方程式

12:18.000 --> 12:20.000
那等一下會對這個方程式

12:20.000 --> 12:22.000
裡面的一些

12:22.000 --> 12:24.000
物理意義和一些

12:24.000 --> 12:26.000
算法來做一些探討

12:26.000 --> 12:28.000
好,那如果

12:28.000 --> 12:30.000
去看剛剛那個PPE的話

12:30.000 --> 12:32.000
它裡面會有一些這個

12:32.000 --> 12:34.000
growth和dissolution的這一個

12:34.000 --> 12:36.000
這個動力式

12:36.000 --> 12:38.000
那所以我們要介紹一下

12:38.000 --> 12:40.000
這個動力學的一個部分

12:40.000 --> 12:42.000
那像剛剛講到的

12:42.000 --> 12:44.000
這一個結晶的這個驅動力

12:44.000 --> 12:46.000
是這個super saturation

12:46.000 --> 12:48.000
那光是super saturation其實就有

12:48.000 --> 12:50.000
很多種不同的定義了

12:50.000 --> 12:52.000
那這邊列出兩個最常見的

12:52.000 --> 12:54.000
那就是relative和absolute

12:54.000 --> 12:56.000
的這個定義

12:56.000 --> 12:58.000
那再來這個我們可以看到這個

12:58.000 --> 13:00.000
super saturation的定義

13:00.000 --> 13:02.000
會和溶液的濃度

13:02.000 --> 13:04.000
和這個飽和濃度的

13:04.000 --> 13:06.000
差距有關係

13:06.000 --> 13:08.000
那溶液的濃度本身可以用mass balance

13:08.000 --> 13:10.000
來計算,那這個

13:10.000 --> 13:12.000
BFT function我們就假設它是一個

13:12.000 --> 13:14.000
溫度的函數

13:14.000 --> 13:16.000
好,那再來

13:16.000 --> 13:18.000
我們就假設,因為我們今天討論的

13:18.000 --> 13:20.000
都是所謂的加入精種的

13:20.000 --> 13:22.000
這個P4結晶製程

13:22.000 --> 13:24.000
所以這個primary nucleation

13:24.000 --> 13:26.000
都是可以被忽略的

13:26.000 --> 13:28.000
那在這樣的情況之下,我們就可以

13:28.000 --> 13:30.000
去定義這個

13:30.000 --> 13:32.000
growth rate和nucleation rate

13:32.000 --> 13:34.000
這個動力學的表示

13:34.000 --> 13:36.000
是,那目前在

13:36.000 --> 13:38.000
這個學術界還沒有一個

13:38.000 --> 13:40.000
很完整的理論來描述

13:40.000 --> 13:42.000
這樣的現象,所以我們還是會用一些

13:42.000 --> 13:44.000
經驗式來表示

13:44.000 --> 13:46.000
那我們可以注意到的是

13:46.000 --> 13:48.000
growth rate被分為兩個部分

13:48.000 --> 13:50.000
第一部分只和

13:50.000 --> 13:52.000
super saturation有關

13:52.000 --> 13:54.000
第二部分只和晶體本身的

13:54.000 --> 13:56.000
大小有關,所以假設

13:56.000 --> 13:58.000
後面這個部分等於1的話

13:58.000 --> 14:00.000
我們就稱為size independent growth

14:00.000 --> 14:02.000
那假設不等於1的話

14:02.000 --> 14:04.000
我們就會把它稱為size independent growth

14:04.000 --> 14:06.000
那再來

14:06.000 --> 14:08.000
對大部分的系統而言,這個

14:08.000 --> 14:10.000
nucleation rate對過飽和度的

14:10.000 --> 14:12.000
這個敏感度會比

14:12.000 --> 14:14.000
growth rate還要大,所以這個

14:14.000 --> 14:16.000
參數小b就會比小g來的大

14:18.000 --> 14:20.000
好,那再來要介紹一些

14:20.000 --> 14:22.000
怎麼樣求解這個PBE

14:22.000 --> 14:24.000
的這個方法,那我們一開始

14:24.000 --> 14:26.000
會把這個PBE分成

14:26.000 --> 14:28.000
兩個部分,那

14:28.000 --> 14:30.000
數學上稱為homogeneous

14:30.000 --> 14:32.000
和non-homogeneous的部分

14:32.000 --> 14:34.000
那在物理上就是

14:34.000 --> 14:36.000
有關seed的和nucleation

14:36.000 --> 14:38.000
的兩個部分

14:38.000 --> 14:40.000
那為什麼要把它

14:40.000 --> 14:42.000
這樣子拆開來呢?有兩個理由

14:42.000 --> 14:44.000
那第一個理由是

14:44.000 --> 14:46.000
在套用一些促使方法的時候會比較

14:46.000 --> 14:48.000
方便,那另外一個理由

14:48.000 --> 14:50.000
是我們可以把這個

14:50.000 --> 14:52.000
seed和nucleation

14:52.000 --> 14:54.000
分開來去做定量的

14:54.000 --> 14:56.000
描述,那如剛剛所說的

14:56.000 --> 14:58.000
我們會希望抑制nucleation

14:58.000 --> 15:00.000
所以我們把它做定量描述

15:00.000 --> 15:02.000
會是一個比較好的一個做法

15:04.000 --> 15:06.000
好,那在開始講解一些

15:06.000 --> 15:08.000
促使方法之前,我們先給各位

15:08.000 --> 15:10.000
看一個簡單的例子

15:10.000 --> 15:12.000
那這個例子裡面的PBE

15:12.000 --> 15:14.000
它是有所謂解析解的,那順便

15:14.000 --> 15:16.000
了解一下這裡面的一些像的

15:16.000 --> 15:18.000
一些物理意義

15:18.000 --> 15:20.000
那我們假設今天有一個系統,它的

15:20.000 --> 15:22.000
growth rate和nucleation rate

15:22.000 --> 15:24.000
都是常數

15:24.000 --> 15:26.000
那這樣子我們就可以去寫出

15:26.000 --> 15:28.000
相對應的PBE,並且

15:28.000 --> 15:30.000
我們可以去寫出它相對應的解析解

15:30.000 --> 15:32.000
好,那這個解析解的

15:32.000 --> 15:34.000
物理意義該怎麼樣去判讀呢?

15:34.000 --> 15:36.000
如果說今天有一些

15:36.000 --> 15:38.000
這個seed crystal

15:38.000 --> 15:40.000
它一開始的這個pdf

15:40.000 --> 15:42.000
長得像橘色這樣子的一個

15:42.000 --> 15:44.000
樣子,那

15:44.000 --> 15:46.000
經過一段時間它們會長大

15:46.000 --> 15:48.000
那長得多大呢?那大小

15:48.000 --> 15:50.000
是不是就會增加growth rate

15:50.000 --> 15:52.000
乘以batch time

15:52.000 --> 15:54.000
所以這個黃色的部分

15:54.000 --> 15:56.000
就直接往右移

15:56.000 --> 15:58.000
移了growth rate乘以batch time

15:58.000 --> 16:00.000
那nucleation的

16:00.000 --> 16:02.000
這個部分呢,在最一開始

16:02.000 --> 16:04.000
生成的那個晶體

16:04.000 --> 16:06.000
它的大小就也會剛好

16:06.000 --> 16:08.000
是growth rate乘以batch time

16:08.000 --> 16:10.000
所以它就會有像這樣子

16:10.000 --> 16:12.000
的一個pdf

16:12.000 --> 16:14.000
好,那當然剛剛這個只是

16:14.000 --> 16:16.000
特例中的特例

16:16.000 --> 16:18.000
所以我們要講一些這個

16:18.000 --> 16:20.000
常用的數值方法

16:20.000 --> 16:22.000
大部分來講這個數值方法

16:22.000 --> 16:24.000
可以被分為兩大類

16:24.000 --> 16:26.000
那第一大類稱為massive moment

16:26.000 --> 16:28.000
它有兩個版本,standard

16:28.000 --> 16:30.000
和quadrature的

16:30.000 --> 16:32.000
那standard的版本它是把這個

16:32.000 --> 16:34.000
PBE轉成

16:34.000 --> 16:36.000
所謂的ODE,那它

16:36.000 --> 16:38.000
只能被用在size independent

16:38.000 --> 16:40.000
的kinetic

16:40.000 --> 16:42.000
的系統

16:42.000 --> 16:44.000
那quadrature的版本它是把PBE

16:44.000 --> 16:46.000
換成所謂的

16:46.000 --> 16:48.000
differential algebraic equation

16:48.000 --> 16:50.000
有微分方程和代數方程

16:50.000 --> 16:52.000
的一個連立方程式

16:52.000 --> 16:54.000
那它就可以被用來處理

16:54.000 --> 16:56.000
size independent的一些

16:56.000 --> 16:58.000
kinetics

16:58.000 --> 17:00.000
它的好處是

17:00.000 --> 17:02.000
它可以很快地去解出這個

17:02.000 --> 17:04.000
moment,但是它沒有辦法

17:04.000 --> 17:06.000
去找出這個

17:06.000 --> 17:08.000
pdf它完整的

17:08.000 --> 17:10.000
這個形式,那下面給各位

17:10.000 --> 17:12.000
看一下,如果是standard的

17:12.000 --> 17:14.000
版本的話,它的這個

17:14.000 --> 17:16.000
ODE會長這個樣子

17:16.000 --> 17:18.000
那各位可以看到

17:18.000 --> 17:20.000
它把seed和nucleation就

17:20.000 --> 17:22.000
分開來做這個求解了

17:24.000 --> 17:26.000
那第二個方法就是會去

17:26.000 --> 17:28.000
involve到一些

17:28.000 --> 17:30.000
這個離算化的方法

17:30.000 --> 17:32.000
那這方法有很多種

17:32.000 --> 17:34.000
那常用的包含的所謂的

17:34.000 --> 17:36.000
massive characteristic

17:36.000 --> 17:38.000
massive classes,或是所謂的

17:38.000 --> 17:40.000
這個有限體積法

17:40.000 --> 17:42.000
那這樣的好處當然就是它

17:42.000 --> 17:44.000
可以比較完整的

17:44.000 --> 17:46.000
去保留這個pdf的

17:46.000 --> 17:48.000
這一個形式,但是

17:48.000 --> 17:50.000
因為這樣的方法會基於

17:50.000 --> 17:52.000
一些CSD的

17:52.000 --> 17:54.000
解析度

17:54.000 --> 17:56.000
或者是一些數值

17:56.000 --> 17:58.000
方法上面的一些準確度

17:58.000 --> 18:00.000
它會需要很多的

18:00.000 --> 18:02.000
discretization point

18:02.000 --> 18:04.000
那它就會導致它的這個

18:04.000 --> 18:06.000
計算的負擔就會變得比較

18:06.000 --> 18:08.000
重,好那

18:08.000 --> 18:10.000
我們在這個研究裡面我們使用的是

18:10.000 --> 18:12.000
這個NOCH

18:12.000 --> 18:14.000
它的想法是它把這個

18:14.000 --> 18:16.000
PDE降為成

18:16.000 --> 18:18.000
所謂的特徵曲線

18:18.000 --> 18:20.000
characteristic curve

18:20.000 --> 18:22.000
那這些曲線

18:22.000 --> 18:24.000
它是用ODE

18:24.000 --> 18:26.000
的family來表示的

18:26.000 --> 18:28.000
好

18:28.000 --> 18:30.000
那剛剛是一些常用的

18:30.000 --> 18:32.000
數值方法,那再來要介紹一個

18:32.000 --> 18:34.000
今天這個研究

18:34.000 --> 18:36.000
可以大幅降低計算負擔

18:36.000 --> 18:38.000
的一個關鍵

18:38.000 --> 18:40.000
那它是一個所謂的

18:40.000 --> 18:42.000
座標轉換,coordinated transformation

18:42.000 --> 18:44.000
那這個轉換

18:44.000 --> 18:46.000
它原先是由兩位

18:46.000 --> 18:48.000
德國學者提出來的

18:48.000 --> 18:50.000
它的想法是,像我們剛剛看到

18:50.000 --> 18:52.000
的一個例子就是

18:52.000 --> 18:54.000
固定漲值數據的話

18:54.000 --> 18:56.000
那這個C的CSD會直接

18:56.000 --> 18:58.000
平移,但是我們可以

18:58.000 --> 19:00.000
想一下,既然Grossewald

19:00.000 --> 19:02.000
它的單位是速度

19:02.000 --> 19:04.000
那我們是不是就可以看

19:04.000 --> 19:06.000
這個我們

19:06.000 --> 19:08.000
國中學過的一個VT圖來做

19:08.000 --> 19:10.000
連結,那我們都知道

19:10.000 --> 19:12.000
在國中學的VT圖

19:12.000 --> 19:14.000
底下的這個面積,或是說

19:14.000 --> 19:16.000
如果我們學過積分的話

19:16.000 --> 19:18.000
那這個面積就會是位移

19:18.000 --> 19:20.000
而這個位移其實就是

19:20.000 --> 19:22.000
晶體長大的這一個

19:22.000 --> 19:24.000
大小,所以我們今天就

19:24.000 --> 19:26.000
定義一個transform time

19:26.000 --> 19:28.000
tau,那這個tau的意義

19:28.000 --> 19:30.000
就是晶體從

19:30.000 --> 19:32.000
Batch1開始到某個

19:32.000 --> 19:34.000
時間,它長大了這個大小

19:34.000 --> 19:36.000
那這個

19:36.000 --> 19:38.000
transform time只是為了方便稱呼

19:38.000 --> 19:40.000
但它的單位其實是長度

19:40.000 --> 19:42.000
所以這個要先釐清一下

19:42.000 --> 19:44.000
避免一些誤會

19:44.000 --> 19:46.000
好,那有了這個tau

19:46.000 --> 19:48.000
以後有什麼好處呢?我們就可以

19:48.000 --> 19:50.000
直接把這個C的

19:50.000 --> 19:52.000
PBE的這個性解

19:52.000 --> 19:54.000
explicit solution直接可以寫出來了

19:54.000 --> 19:56.000
那各位可以看到

19:56.000 --> 19:58.000
不管是size independent

19:58.000 --> 20:00.000
或是size dependent的系統

20:00.000 --> 20:02.000
都可以被這樣子寫出來

20:02.000 --> 20:04.000
而且這個解,它都

20:04.000 --> 20:06.000
可以直接被一個variable

20:06.000 --> 20:08.000
tau來表示,那這樣子

20:08.000 --> 20:10.000
就太好了啊,我們就只需要

20:10.000 --> 20:12.000
透過這個tau

20:12.000 --> 20:14.000
或是說這個transform time

20:14.000 --> 20:16.000
來表示這個

20:16.000 --> 20:18.000
C的PBE的解就OK了

20:18.000 --> 20:20.000
那這樣子我們當然可以很

20:20.000 --> 20:22.000
大幅度的去降低

20:22.000 --> 20:24.000
這個計算的負擔

20:24.000 --> 20:26.000
好,那介紹完了

20:26.000 --> 20:28.000
這些需要的理論以後呢

20:28.000 --> 20:30.000
我們可以開始來看這個

20:30.000 --> 20:32.000
一些case study了

20:32.000 --> 20:34.000
那第一個部分我們會想要看的是一些

20:34.000 --> 20:36.000
目標函數之間的競爭關係

20:36.000 --> 20:38.000
那如同剛剛所講的

20:38.000 --> 20:40.000
在model-based的control

20:40.000 --> 20:42.000
就是想要去在

20:42.000 --> 20:44.000
這個目標函數的

20:44.000 --> 20:46.000
一個限制之下

20:46.000 --> 20:48.000
我們想要找最好的這個

20:48.000 --> 20:50.000
control input

20:50.000 --> 20:52.000
好,那

20:52.000 --> 20:54.000
這目標函數我們大概分為

20:54.000 --> 20:56.000
三大類,那第一類是我們就

20:56.000 --> 20:58.000
直接想要最小化這個new creation

20:58.000 --> 21:00.000
的這個moment

21:00.000 --> 21:02.000
或是我們想要最大化這個產品的

21:02.000 --> 21:04.000
平均逆境,或是想要最小化

21:04.000 --> 21:06.000
這個產品的這個所謂

21:06.000 --> 21:08.000
CSD的變異係數

21:08.000 --> 21:10.000
coefficient of variation

21:10.000 --> 21:12.000
好,那再來會有一個問題是

21:12.000 --> 21:14.000
我們要怎麼樣定義

21:14.000 --> 21:16.000
最好的一個策略

21:16.000 --> 21:18.000
因為這其實是一個大哉問

21:18.000 --> 21:20.000
因為有一個研究

21:20.000 --> 21:22.000
那這個研究是由我的指導教授

21:22.000 --> 21:24.000
和他的一些這個

21:24.000 --> 21:26.000
以前的一些團隊的一個研究

21:26.000 --> 21:28.000
那這個研究發現

21:28.000 --> 21:30.000
這個最佳的這個控制

21:30.000 --> 21:32.000
這個軌跡的這個profile

21:32.000 --> 21:34.000
好像會和我選擇的目標函數

21:34.000 --> 21:36.000
有很大的一個關係

21:36.000 --> 21:38.000
那這樣就導致一個問題了

21:38.000 --> 21:40.000
就表示這目標函數

21:40.000 --> 21:42.000
之間的競爭關係可能很強烈

21:42.000 --> 21:44.000
那再來就是

21:44.000 --> 21:46.000
有沒有一個general guideline

21:46.000 --> 21:48.000
來作為這個batch

21:48.000 --> 21:50.000
crystallization process的這個

21:50.000 --> 21:52.000
操作的這個規律

21:52.000 --> 21:54.000
好,所以我們就打算說

21:54.000 --> 21:56.000
我們來考慮一些

21:56.000 --> 21:58.000
目標函數,然後我們去分析它的一些關係

21:58.000 --> 22:00.000
那我們使用了

22:00.000 --> 22:02.000
六個單一目標函數

22:02.000 --> 22:04.000
那它們的定義如下,可以看到它就和

22:04.000 --> 22:06.000
neutration moment

22:06.000 --> 22:08.000
和平均力勁

22:08.000 --> 22:10.000
和這個變異係數有相關

22:12.000 --> 22:14.000
好,那我們要怎麼樣去

22:14.000 --> 22:16.000
分析這種多目標函數這個最佳化呢

22:16.000 --> 22:18.000
我們使用的是

22:18.000 --> 22:20.000
weighting sum method

22:20.000 --> 22:22.000
它的idea是,我把這個目標函數

22:22.000 --> 22:24.000
寫成兩個單一目標函數

22:24.000 --> 22:26.000
它們的一個線性疊加

22:26.000 --> 22:28.000
那alpha這一個參數

22:28.000 --> 22:30.000
就會是所謂的這個

22:30.000 --> 22:32.000
weighting vector

22:32.000 --> 22:34.000
它要在求解最佳化化過0之前

22:34.000 --> 22:36.000
先被指定好

22:36.000 --> 22:38.000
那當我指定好以後呢,再去求解

22:38.000 --> 22:40.000
這個最佳化問題

22:40.000 --> 22:42.000
就可以得到這個

22:42.000 --> 22:44.000
platofront

22:44.000 --> 22:46.000
寫成PF上面的一個點

22:46.000 --> 22:48.000
好,那

22:48.000 --> 22:50.000
如果這個alpha設為0或是1的話

22:50.000 --> 22:52.000
那我們可以得到的是

22:52.000 --> 22:54.000
PF的這個端點

22:54.000 --> 22:56.000
而β1和β2

22:56.000 --> 22:58.000
則是這個scale vector

22:58.000 --> 23:00.000
它可以來處理一些

23:00.000 --> 23:02.000
避免兩個目標函數

23:02.000 --> 23:04.000
的這個數值的差異

23:04.000 --> 23:06.000
太大的一個問題

23:08.000 --> 23:10.000
好,那這個β要怎麼選呢

23:10.000 --> 23:12.000
那我們可以打算用

23:12.000 --> 23:14.000
這樣的方式

23:14.000 --> 23:16.000
我們先去找出PF的這個端點

23:16.000 --> 23:18.000
那找完端點以後呢

23:18.000 --> 23:20.000
我們再定義所謂的

23:20.000 --> 23:22.000
normalized objective function

23:22.000 --> 23:24.000
我們把這個目標函數

23:24.000 --> 23:26.000
壓縮到0到1之間

23:26.000 --> 23:28.000
那這樣子就可以去定義

23:28.000 --> 23:30.000
相對應的這個β

23:30.000 --> 23:32.000
另外一個好處是

23:32.000 --> 23:34.000
因為我們會想要知道在眾多的

23:34.000 --> 23:36.000
Plato optimal solution裡面

23:36.000 --> 23:38.000
哪一個solution可以代表最好的一個

23:38.000 --> 23:40.000
Tradeoff

23:40.000 --> 23:42.000
所以我們就定義在這個

23:42.000 --> 23:44.000
normalized的這個

23:44.000 --> 23:46.000
目標函數平面上

23:46.000 --> 23:48.000
我們找一個點

23:48.000 --> 23:50.000
遠點的距離最短

23:50.000 --> 23:52.000
那遠點表示的是

23:52.000 --> 23:54.000
兩個目標函數最好的一個

23:54.000 --> 23:56.000
最好的一個值

23:56.000 --> 23:58.000
所以我們把這個

23:58.000 --> 24:00.000
距離視為最短就可以表示

24:00.000 --> 24:02.000
這個值它和

24:02.000 --> 24:04.000
單一目標函數的最佳解的差異

24:04.000 --> 24:06.000
可以被最小

24:06.000 --> 24:08.000
而這個解我們把它稱為

24:08.000 --> 24:10.000
Neapoint

24:10.000 --> 24:12.000
好,那

24:12.000 --> 24:14.000
有了這些先備知識以後我們就可以

24:14.000 --> 24:16.000
去陳述這個最佳化問題了

24:16.000 --> 24:18.000
那我們在這邊先考慮的是

24:18.000 --> 24:20.000
單一個Growth stage

24:20.000 --> 24:22.000
還有Size independent

24:22.000 --> 24:24.000
的這個kinetics

24:24.000 --> 24:26.000
好,那我們也會考慮一些這個

24:26.000 --> 24:28.000
限制式,那比方說

24:28.000 --> 24:30.000
我們會想要

24:30.000 --> 24:32.000
不好意思,想要考慮一些這個

24:32.000 --> 24:34.000
Production rate的

24:34.000 --> 24:36.000
這個限制,還有

24:36.000 --> 24:38.000
Batch time的限制,還有

24:38.000 --> 24:40.000
Control input的限制

24:40.000 --> 24:42.000
那我們這邊的Control input的設為

24:42.000 --> 24:44.000
Growth rate,當然也可以

24:44.000 --> 24:46.000
設成Temperature,也可以設成

24:46.000 --> 24:48.000
Super saturation,那它們都是

24:48.000 --> 24:50.000
可以透過kinetic的

24:50.000 --> 24:52.000
代數關係轉換的,所以這個

24:52.000 --> 24:54.000
實際上是可以被視為

24:54.000 --> 24:56.000
等價的,那在

24:56.000 --> 24:58.000
這樣的情況之下我們就可以去寫出

24:58.000 --> 25:00.000
這個最佳化問題的這個

25:00.000 --> 25:02.000
Problem formulation,那如這個

25:02.000 --> 25:04.000
投影片上所示

25:04.000 --> 25:06.000
好,那像這樣的

25:06.000 --> 25:08.000
最佳化問題,因為它的

25:08.000 --> 25:10.000
Input variable和

25:10.000 --> 25:12.000
State variable,就是Growth rate

25:12.000 --> 25:14.000
和這個Nucleation moment

25:14.000 --> 25:16.000
都是時間的函數

25:16.000 --> 25:18.000
那它是屬於所謂的Dynamic

25:18.000 --> 25:20.000
Optimization problem

25:20.000 --> 25:22.000
好,那在這個文篇

25:22.000 --> 25:24.000
裡面有很多種來求解這個

25:24.000 --> 25:26.000
DOP的方法,那在

25:26.000 --> 25:28.000
我們今天這個研究

25:28.000 --> 25:30.000
我們就使用的是

25:30.000 --> 25:32.000
Optimum control

25:32.000 --> 25:34.000
Theory,那這個

25:34.000 --> 25:36.000
共識理論呢,它可以

25:36.000 --> 25:38.000
透過一個叫Pond-Stratton's

25:38.000 --> 25:40.000
Minimum Principle的一個理論

25:40.000 --> 25:42.000
來推導出

25:42.000 --> 25:44.000
最佳控制軌跡的這個

25:44.000 --> 25:46.000
所謂必要條件

25:46.000 --> 25:48.000
Necessary condition

25:48.000 --> 25:50.000
那這個condition

25:50.000 --> 25:52.000
它是以一個

25:52.000 --> 25:54.000
Two-point boundary variable problem的形式

25:54.000 --> 25:56.000
來表示

25:56.000 --> 25:58.000
好,那聽起來

25:58.000 --> 26:00.000
這方法很好,因為它可以直接就

26:00.000 --> 26:02.000
推導出這個necessary condition

26:02.000 --> 26:04.000
但是它會有一些這個挑戰

26:04.000 --> 26:06.000
第一個是

26:06.000 --> 26:08.000
我光是要寫出這個TPPVP

26:08.000 --> 26:10.000
可能就很有挑戰性了

26:10.000 --> 26:12.000
再來就是,當我們要

26:12.000 --> 26:14.000
求解這個boundary variable problem

26:14.000 --> 26:16.000
那我們知道在數值的方法上

26:16.000 --> 26:18.000
它可能會有一些

26:18.000 --> 26:20.000
convergence的一些問題

26:20.000 --> 26:22.000
好,但是在我們

26:22.000 --> 26:24.000
今天這個研究,我們只要

26:24.000 --> 26:26.000
透過剛剛的這一個

26:26.000 --> 26:28.000
coordinate transformation

26:28.000 --> 26:30.000
和一些這個假設,我們就可以

26:30.000 --> 26:32.000
把這個PPPVPP

26:32.000 --> 26:34.000
這個近似解析的

26:34.000 --> 26:36.000
把它積分起來了,那我們就可以

26:36.000 --> 26:38.000
直接跳過前面的這一個

26:38.000 --> 26:40.000
問題了

26:40.000 --> 26:42.000
那這個想法其實也是

26:42.000 --> 26:44.000
由另外兩位德國學者提出來的

26:44.000 --> 26:46.000
但他們當時

26:46.000 --> 26:48.000
只考慮了

26:48.000 --> 26:50.000
單一的目標函數

26:50.000 --> 26:52.000
那我們就把這一個想法

26:52.000 --> 26:54.000
把它拓展到

26:54.000 --> 26:56.000
多目標函數的一些探討

26:56.000 --> 26:58.000
好,那

26:58.000 --> 27:00.000
簡短的介紹這方法是怎麼運作的

27:00.000 --> 27:02.000
那這個理論

27:02.000 --> 27:04.000
它會被用在像這樣的

27:04.000 --> 27:06.000
一個最佳化問題上面

27:06.000 --> 27:08.000
那它的這個x是

27:08.000 --> 27:10.000
所謂的state variable

27:10.000 --> 27:12.000
那ε是所謂的final state

27:12.000 --> 27:14.000
constraint

27:14.000 --> 27:16.000
那在這樣子的這一個

27:16.000 --> 27:18.000
DOP的formulation之下

27:18.000 --> 27:20.000
我們就可以定義所謂的

27:20.000 --> 27:22.000
Hamiltonian

27:22.000 --> 27:24.000
那Hamiltonian裡面有一個這個符號

27:24.000 --> 27:26.000
psi,這個psi就稱為

27:26.000 --> 27:28.000
co-state equation

27:28.000 --> 27:30.000
它有如下的這個定義

27:30.000 --> 27:32.000
那co-state equation

27:32.000 --> 27:34.000
這個boundary condition

27:34.000 --> 27:36.000
而且是在這個batch結束的

27:36.000 --> 27:38.000
這個condition

27:38.000 --> 27:40.000
可以如這一個式則來表示

27:40.000 --> 27:42.000
而在我們今天的這一個

27:42.000 --> 27:44.000
研究裡面,因為τ的物理意義

27:44.000 --> 27:46.000
叫做晶體長得多大

27:46.000 --> 27:48.000
它當然就會和production rate

27:48.000 --> 27:50.000
會有關係

27:50.000 --> 27:52.000
所以既然我們有一個production rate constraint

27:52.000 --> 27:54.000
我們的這個τf

27:54.000 --> 27:56.000
就晶體長得多大

27:56.000 --> 27:58.000
就可以直接被定下來了

27:58.000 --> 28:00.000
所以這是為什麼我們要做

28:00.000 --> 28:02.000
這個condition的理由,另外一個理由

28:02.000 --> 28:04.000
而我們剛剛提到的

28:04.000 --> 28:06.000
這個necessary condition叫做

28:06.000 --> 28:08.000
這個

28:08.000 --> 28:10.000
sorry

28:10.000 --> 28:12.000
optimal control input

28:12.000 --> 28:14.000
這個u star,它必須在

28:14.000 --> 28:16.000
任何時刻都讓這個

28:16.000 --> 28:18.000
Hamiltonian有最小值

28:18.000 --> 28:20.000
好

28:20.000 --> 28:22.000
那在我們這個section裡面

28:22.000 --> 28:24.000
我們的state variable

28:24.000 --> 28:26.000
選擇的是nuclearity的momentum

28:26.000 --> 28:28.000
和真實的process time

28:28.000 --> 28:30.000
而control input選擇的是

28:30.000 --> 28:32.000
growth rate的導數

28:32.000 --> 28:34.000
那這個理由沒有為什麼

28:34.000 --> 28:36.000
就是為了在推導方程式的時候

28:36.000 --> 28:38.000
比較方便一些

28:38.000 --> 28:40.000
那再來剛剛提到的一個

28:40.000 --> 28:42.000
simplification就是

28:42.000 --> 28:44.000
我們假設nuclearity的crystal

28:44.000 --> 28:46.000
對nucleation rate

28:46.000 --> 28:48.000
不會再有任何的影響了

28:48.000 --> 28:50.000
那這是一個很合理的假設

28:50.000 --> 28:52.000
因為θ的體積

28:52.000 --> 28:54.000
應該會遠大於

28:54.000 --> 28:56.000
nucleation的這個體積

28:56.000 --> 28:58.000
那也是因為這個simplification

28:58.000 --> 29:00.000
我們可以把這個

29:00.000 --> 29:02.000
cosine equation

29:02.000 --> 29:04.000
以近似解析解的方式來把它

29:04.000 --> 29:06.000
積分起來

29:06.000 --> 29:08.000
那過程比較冗長我就不做贅述

29:08.000 --> 29:10.000
各位可以去看

29:10.000 --> 29:12.000
由我發表的這一篇paper

29:12.000 --> 29:14.000
裡面它會有些比較詳盡的

29:14.000 --> 29:16.000
一些介紹

29:16.000 --> 29:18.000
好,那如果我們來看到

29:18.000 --> 29:20.000
一些case study的話

29:20.000 --> 29:22.000
我們在這個章節我們使用了

29:22.000 --> 29:24.000
兩個不同的系統

29:24.000 --> 29:26.000
一個是以硝酸鉀為溶質

29:26.000 --> 29:28.000
一個是以所謂的濟霧四純

29:28.000 --> 29:30.000
penta-irisical

29:30.000 --> 29:32.000
來做溶質

29:32.000 --> 29:34.000
那它們的這個

29:34.000 --> 29:36.000
動力學參數就如下所示

29:36.000 --> 29:38.000
那比較需要注意的是

29:38.000 --> 29:40.000
j這個參數

29:40.000 --> 29:42.000
j這個參數指的是nucleation rate

29:42.000 --> 29:44.000
對μ3,也就是

29:44.000 --> 29:46.000
batch裡面有多少晶體的

29:46.000 --> 29:48.000
一個關係式

29:48.000 --> 29:50.000
那這個對硝酸鉀系統

29:50.000 --> 29:52.000
這個nucleation rate

29:52.000 --> 29:54.000
會和μ3成正比的

29:54.000 --> 29:56.000
但對penta系統

29:56.000 --> 29:58.000
這nucleation rate對μ3是沒有關聯的

29:58.000 --> 30:00.000
會導致一些這個

30:00.000 --> 30:02.000
最佳解的差異,那等一下也會

30:02.000 --> 30:04.000
跟大家介紹

30:04.000 --> 30:06.000
好,那除了這個

30:06.000 --> 30:08.000
最佳軌跡以外我們也會

30:08.000 --> 30:10.000
去看說一些比較單純的一些

30:10.000 --> 30:12.000
控制軌跡會導致怎麼樣的

30:12.000 --> 30:14.000
一個控制結果

30:14.000 --> 30:16.000
所以我們使用的是包含了這個

30:16.000 --> 30:18.000
線性的降溫,包含了

30:18.000 --> 30:20.000
三次函數的降溫

30:20.000 --> 30:22.000
還有我們前面所提到的super saturation control

30:22.000 --> 30:24.000
的這個軌跡

30:24.000 --> 30:26.000
那因為今天的這個系統

30:26.000 --> 30:28.000
是屬於size independent的kinetics

30:28.000 --> 30:30.000
對,super saturation control

30:30.000 --> 30:32.000
的軌跡就等於我把

30:32.000 --> 30:34.000
growth rate測成一個定值

30:36.000 --> 30:38.000
好,那這些軌跡的這個

30:38.000 --> 30:40.000
結果就如這個圖上所示

30:40.000 --> 30:42.000
我們先看這個

30:42.000 --> 30:44.000
硝酸鉀系統

30:44.000 --> 30:46.000
那我會發現如果今天是linear cooling

30:46.000 --> 30:48.000
那它會導致所謂的

30:48.000 --> 30:50.000
early growth

30:50.000 --> 30:52.000
也就是growth rate在batch的前期

30:52.000 --> 30:54.000
會比較大

30:54.000 --> 30:56.000
會導致什麼結果呢?

30:56.000 --> 30:58.000
這會導致nucleation rate在前期比較大

30:58.000 --> 31:00.000
那這些在前期

31:00.000 --> 31:02.000
生成的這些金核呢

31:02.000 --> 31:04.000
它就有很多的時間

31:04.000 --> 31:06.000
可以讓它長大

31:06.000 --> 31:08.000
那長大就會導致它的這個

31:08.000 --> 31:10.000
nucleation的這個總體積

31:10.000 --> 31:12.000
會變得比較大一些

31:12.000 --> 31:14.000
那反過來講,這個

31:14.000 --> 31:16.000
2-bit cooling,它可以被視為一個

31:16.000 --> 31:18.000
late growth,因為它的growth rate

31:18.000 --> 31:20.000
在後期是比較大的

31:20.000 --> 31:22.000
它就會有相反的一些狀況

31:24.000 --> 31:26.000
那如果我們看這個

31:26.000 --> 31:28.000
Penta系統的話,會看到一個

31:28.000 --> 31:30.000
類似的現象

31:30.000 --> 31:32.000
那比較值得提的是,如果我們去看

31:32.000 --> 31:34.000
這個temperature trajectory

31:34.000 --> 31:36.000
那會發現這個線性降溫

31:36.000 --> 31:38.000
它最後的這個溫度偏低

31:38.000 --> 31:40.000
但理由是它有很多的

31:40.000 --> 31:42.000
這個

31:42.000 --> 31:44.000
這個溶脂會被

31:44.000 --> 31:46.000
輸出成為這個nucleated

31:46.000 --> 31:48.000
moment,或是說

31:48.000 --> 31:50.000
nucleated的這一個

31:50.000 --> 31:52.000
體積

31:52.000 --> 31:54.000
所以它就會導致

31:54.000 --> 31:56.000
最後的這個batch temperature

31:56.000 --> 31:58.000
會比較低一些

31:58.000 --> 32:00.000
好,那再來如果我們看到

32:00.000 --> 32:02.000
是這個所謂目標

32:02.000 --> 32:04.000
函數的這個set

32:04.000 --> 32:06.000
的話

32:06.000 --> 32:08.000
那我們的想法是

32:08.000 --> 32:10.000
我們把目標函數先分為兩大類

32:10.000 --> 32:12.000
第一大類是所謂lower moment

32:12.000 --> 32:14.000
它是由μ0到μ2

32:14.000 --> 32:16.000
來組成的

32:16.000 --> 32:18.000
而higher moment是由μ3到μ5

32:18.000 --> 32:20.000
來組成的

32:20.000 --> 32:22.000
那在這樣的情況之下,我們就可以把這個

32:22.000 --> 32:24.000
目標函數

32:24.000 --> 32:26.000
分組,並且我們

32:26.000 --> 32:28.000
抓不同的這個

32:28.000 --> 32:30.000
目標函數的這個pair

32:30.000 --> 32:32.000
來做這個分析

32:32.000 --> 32:34.000
所以各位可以看到我們分析了

32:34.000 --> 32:36.000
四組目標函數

32:36.000 --> 32:38.000
前兩組是和

32:38.000 --> 32:40.000
前兩組是一個higher moment

32:40.000 --> 32:42.000
和一個lower moment

32:42.000 --> 32:44.000
後兩組分別是兩個higher moment

32:44.000 --> 32:46.000
和兩個lower moment

32:46.000 --> 32:48.000
我們去看一下不同的

32:48.000 --> 32:50.000
不同種類的目標函數

32:50.000 --> 32:52.000
會有怎麼樣的競爭關係

32:58.000 --> 33:00.000
好,那如果我們看到的

33:00.000 --> 33:02.000
是這個小鑽甲

33:02.000 --> 33:04.000
系統的話,那我們可以把

33:04.000 --> 33:06.000
這四組的protofront都把它

33:06.000 --> 33:08.000
畫出來,那會發現的

33:08.000 --> 33:10.000
結果是前兩組protofront

33:10.000 --> 33:12.000
也就是一個higher moment

33:12.000 --> 33:14.000
和一個lower moment的這個目標函數

33:14.000 --> 33:16.000
它會導致

33:16.000 --> 33:18.000
還蠻強烈的tradeoff

33:18.000 --> 33:20.000
那這可以從

33:20.000 --> 33:22.000
X軸的這個寬度來看

33:22.000 --> 33:24.000
像X軸都是所謂的

33:24.000 --> 33:26.000
這個μ3n就是乘合的體積

33:26.000 --> 33:28.000
它的這個範圍呢

33:28.000 --> 33:30.000
像第一個

33:30.000 --> 33:32.000
第一組它會從5000

33:32.000 --> 33:34.000
到大概7000,它大概差了40%

33:34.000 --> 33:36.000
那第二組從5000

33:36.000 --> 33:38.000
到大概快要10000,它已經差了快要一倍了

33:38.000 --> 33:40.000
所以它的tradeoff是很強的

33:40.000 --> 33:42.000
那相對而言

33:42.000 --> 33:44.000
3.3和3.4的

33:44.000 --> 33:46.000
tradeoff就會弱的蠻多的

33:46.000 --> 33:48.000
那我們也發現

33:48.000 --> 33:50.000
如果我們看這個

33:50.000 --> 33:52.000
黃色的菱形

33:52.000 --> 33:54.000
它代表的是super saturation control

33:54.000 --> 33:56.000
得到的目標函數

33:56.000 --> 33:58.000
那這個目標函數的

33:58.000 --> 34:00.000
這個值就和所謂的

34:00.000 --> 34:02.000
need point還蠻靠近的

34:02.000 --> 34:04.000
所以我們就可以推論說

34:04.000 --> 34:06.000
這個super saturation control

34:06.000 --> 34:08.000
好像可以得到

34:08.000 --> 34:10.000
還蠻不錯的一個

34:10.000 --> 34:12.000
tradeoff的結果

34:12.000 --> 34:14.000
那如果

34:14.000 --> 34:16.000
來看這個penta系統的話

34:16.000 --> 34:18.000
那tradeoff的現象

34:18.000 --> 34:20.000
跟小轉角系統

34:20.000 --> 34:22.000
還蠻類似的

34:22.000 --> 34:24.000
但比較需要注意的是

34:24.000 --> 34:26.000
可以看到這個3.1的這個圖

34:26.000 --> 34:28.000
它的這個

34:28.000 --> 34:30.000
super saturation control得到的這個

34:30.000 --> 34:32.000
黃色菱形

34:32.000 --> 34:34.000
它和need point直接重疊了

34:34.000 --> 34:36.000
那為什麼呢?

34:36.000 --> 34:38.000
因為在penta系統裡面

34:38.000 --> 34:40.000
nucleation rate和μ3

34:40.000 --> 34:42.000
或是說和這個batch裡面的

34:42.000 --> 34:44.000
這個菱體的

34:44.000 --> 34:46.000
這個密度是沒有關聯的

34:46.000 --> 34:48.000
那這樣子的話就表示說

34:48.000 --> 34:50.000
我其實不需要

34:50.000 --> 34:52.000
特別趕著在這個batch的

34:52.000 --> 34:54.000
前期或是後期

34:54.000 --> 34:56.000
讓這個super saturation變大

34:56.000 --> 34:58.000
我只要constant

34:58.000 --> 35:00.000
就可以讓這個nucleation的number

35:00.000 --> 35:02.000
有最小值了

35:02.000 --> 35:04.000
那如果我們直接來

35:04.000 --> 35:06.000
看一些這個growth rate的

35:06.000 --> 35:08.000
軌跡的話

35:08.000 --> 35:10.000
先來看這個抽象甲系統的

35:10.000 --> 35:12.000
這個single objective的

35:12.000 --> 35:14.000
體積

35:14.000 --> 35:16.000
那我們會發現

35:16.000 --> 35:18.000
這個early growth trajectory

35:18.000 --> 35:20.000
它好像都會對這個

35:20.000 --> 35:22.000
lower moment的objective

35:22.000 --> 35:24.000
會比較友善一些

35:24.000 --> 35:26.000
那這個理由是因為

35:26.000 --> 35:28.000
early growth就可以避免在

35:28.000 --> 35:30.000
batch的後期

35:30.000 --> 35:32.000
這個相體的懸浮密度偏大的時候

35:32.000 --> 35:34.000
nucleation rate變得

35:34.000 --> 35:36.000
非常的大

35:36.000 --> 35:38.000
那反過來呢

35:38.000 --> 35:40.000
這個如果是late growth

35:40.000 --> 35:42.000
的話,因為它

35:42.000 --> 35:44.000
前期的nucleation rate偏小

35:44.000 --> 35:46.000
它就會讓這些

35:46.000 --> 35:48.000
在後期生成的

35:48.000 --> 35:50.000
nuclei

35:50.000 --> 35:52.000
沒有什麼時間長大

35:52.000 --> 35:54.000
那就會讓這個nuclei的

35:54.000 --> 35:56.000
總體積偏小

35:56.000 --> 35:58.000
所以這個higher moment的

35:58.000 --> 36:00.000
objective會比較友善一些

36:00.000 --> 36:02.000
那至於

36:02.000 --> 36:04.000
如果我們看這個所謂的

36:04.000 --> 36:06.000
knee point trajectory的話

36:06.000 --> 36:08.000
會發現3.1

36:08.000 --> 36:10.000
3.2兩個問題

36:10.000 --> 36:12.000
它的growth rate的變化

36:12.000 --> 36:14.000
相對是偏小的

36:14.000 --> 36:16.000
那之後再一次

36:16.000 --> 36:18.000
驗證說

36:18.000 --> 36:20.000
super saturation control

36:20.000 --> 36:22.000
可以在higher moment和lower moment

36:22.000 --> 36:24.000
的這個目標函數之間

36:24.000 --> 36:26.000
取得還蠻不錯的一個

36:26.000 --> 36:28.000
這個權衡關係

36:28.000 --> 36:30.000
那至於3.3、3.4

36:30.000 --> 36:32.000
這兩個問題我們會發現

36:32.000 --> 36:34.000
3.3是兩個higher moment

36:34.000 --> 36:36.000
的objective

36:36.000 --> 36:38.000
那它的這個trajectory

36:38.000 --> 36:40.000
就會比較偏向所謂的late growth

36:40.000 --> 36:42.000
那反之

36:42.000 --> 36:44.000
3.4它是兩個lower moment

36:44.000 --> 36:46.000
的objective,它的這個

36:46.000 --> 36:48.000
knee point的軌跡也會偏向

36:48.000 --> 36:50.000
所謂的early growth

36:50.000 --> 36:52.000
而Penta系統

36:52.000 --> 36:54.000
會看到基本上非常類似的

36:54.000 --> 36:56.000
一個現象,除了剛剛提到的這個

36:56.000 --> 36:58.000
對小化乘和數量的

36:58.000 --> 37:00.000
這一個問題

37:00.000 --> 37:02.000
以外,那所以我們就可以再一次

37:02.000 --> 37:04.000
的討論說,這個

37:04.000 --> 37:06.000
super saturation control

37:06.000 --> 37:08.000
似乎可以被

37:08.000 --> 37:10.000
選做一個rule of thumb

37:10.000 --> 37:12.000
在這個Penta系統的操作

37:12.000 --> 37:14.000
上面

37:14.000 --> 37:16.000
好,所以這個章節的這個想法

37:16.000 --> 37:18.000
就是說,我們使用

37:18.000 --> 37:20.000
這個最佳

37:20.000 --> 37:22.000
最佳控制理論,以一個

37:22.000 --> 37:24.000
近似解析的方式

37:24.000 --> 37:26.000
來求解這些問題

37:26.000 --> 37:28.000
的這個最佳解

37:28.000 --> 37:30.000
那我們也去分析了這個

37:30.000 --> 37:32.000
tradeoff,那也發現

37:32.000 --> 37:34.000
這個higher moment和

37:34.000 --> 37:36.000
lower moment的

37:36.000 --> 37:38.000
目標函數它們的這個競爭

37:38.000 --> 37:40.000
是偏強的,而看起來

37:40.000 --> 37:42.000
在這兩個系統裡面

37:42.000 --> 37:44.000
super saturation control好像是一個

37:44.000 --> 37:46.000
還蠻不錯的一個這個策略

37:46.000 --> 37:48.000
好,但是

37:48.000 --> 37:50.000
最後提到另外一個問題了,就是

37:50.000 --> 37:52.000
這兩個系統,這個

37:52.000 --> 37:54.000
SSC,super saturation control

37:54.000 --> 37:56.000
也是不錯的想法

37:56.000 --> 37:58.000
但其他的系統呢

37:58.000 --> 38:00.000
我們就還需要再探討一下了

38:00.000 --> 38:02.000
那再來

38:02.000 --> 38:04.000
當我們在尋找這個文獻的時候

38:04.000 --> 38:06.000
發現,這個

38:06.000 --> 38:08.000
connected parameter

38:08.000 --> 38:10.000
的這個數值範圍

38:10.000 --> 38:12.000
其實很寬,它可以

38:12.000 --> 38:14.000
寬到十幾個order的

38:14.000 --> 38:16.000
差別,而且再來

38:16.000 --> 38:18.000
這個kb這個parameter

38:18.000 --> 38:20.000
的這一個

38:20.000 --> 38:22.000
unit

38:22.000 --> 38:24.000
它其實是會和

38:24.000 --> 38:26.000
這個parameter j

38:26.000 --> 38:28.000
的這個單位是有關係的

38:28.000 --> 38:30.000
那最後導致另外一個問題

38:30.000 --> 38:32.000
就是我們沒有辦法直接從

38:32.000 --> 38:34.000
數值來判斷

38:34.000 --> 38:36.000
這個系統的這個mutation rate

38:36.000 --> 38:38.000
到底是偏大

38:38.000 --> 38:40.000
還是偏小

38:40.000 --> 38:42.000
好,那另外一個問題

38:42.000 --> 38:44.000
是我們也會去想要探討

38:44.000 --> 38:46.000
這個seed recipe的design

38:46.000 --> 38:48.000
那因為有一組日本學者

38:48.000 --> 38:50.000
曾經有研究過說

38:50.000 --> 38:52.000
他們去做實驗,去探討了

38:52.000 --> 38:54.000
幾個不同的這個

38:54.000 --> 38:56.000
結晶系統

38:56.000 --> 38:58.000
他發現只要把這個

38:58.000 --> 39:00.000
seed loading ratio拉大

39:00.000 --> 39:02.000
那

39:02.000 --> 39:04.000
seed loading ratio的定義是

39:04.000 --> 39:06.000
seed和product mass的

39:06.000 --> 39:08.000
一個比值

39:08.000 --> 39:10.000
那把seed loading ratio拉大

39:10.000 --> 39:12.000
把seed的mean size拉小

39:12.000 --> 39:14.000
就可以讓這個nucleation

39:14.000 --> 39:16.000
盡可能的被抑制了

39:16.000 --> 39:18.000
但這會有

39:18.000 --> 39:20.000
兩個問題

39:20.000 --> 39:22.000
第一個是我們知道

39:22.000 --> 39:24.000
如果這個seed

39:24.000 --> 39:26.000
loading ratio偏大

39:26.000 --> 39:28.000
seed mass又

39:28.000 --> 39:30.000
seed的mean size又偏小

39:30.000 --> 39:32.000
那它的這個產品的這個平均力勁

39:32.000 --> 39:34.000
就也會偏小

39:34.000 --> 39:36.000
像前面提到的這些目標是相違背的

39:36.000 --> 39:38.000
那接下來

39:38.000 --> 39:40.000
這個seed loading ratio

39:40.000 --> 39:42.000
太大或是說seed的用戶太兇

39:42.000 --> 39:44.000
就表示我們會需要

39:44.000 --> 39:46.000
有比較大的

39:46.000 --> 39:48.000
product recycle rate

39:48.000 --> 39:50.000
那這也不是一個好現象

39:50.000 --> 39:52.000
那為了要

39:52.000 --> 39:54.000
分析以上這些問題

39:54.000 --> 39:56.000
我們會使用的是這個

39:56.000 --> 39:58.000
一個無因字化的一個model

39:58.000 --> 40:00.000
來去快速的分析

40:00.000 --> 40:02.000
這樣子的一個問題

40:02.000 --> 40:04.000
好那簡單來介紹一下

40:04.000 --> 40:06.000
這個無因字化的model

40:06.000 --> 40:08.000
第一個是我們為了想要

40:08.000 --> 40:10.000
確保這個parameter的這個數量

40:10.000 --> 40:12.000
我們把G和B的

40:12.000 --> 40:14.000
這個expiration直接combine在一起

40:14.000 --> 40:16.000
那combine以後

40:16.000 --> 40:18.000
這大型的KB的這個定義就變得

40:18.000 --> 40:20.000
不太一樣

40:20.000 --> 40:22.000
那這個定義沒有變

40:22.000 --> 40:24.000
但γ的這個定義就會是

40:24.000 --> 40:26.000
這個nucleation rate

40:26.000 --> 40:28.000
和growth rate

40:28.000 --> 40:30.000
對於這個過飽和度的相對敏感度

40:30.000 --> 40:32.000
好那再來呢

40:32.000 --> 40:34.000
我們就定義這一個

40:34.000 --> 40:36.000
reference quantity

40:36.000 --> 40:38.000
這個下標ref

40:38.000 --> 40:40.000
那一個prime就表示這個quantity

40:40.000 --> 40:42.000
它是一個無因字化的quantity

40:42.000 --> 40:44.000
那比方說

40:44.000 --> 40:46.000
我想要定義無因字化的growth rate

40:46.000 --> 40:48.000
那就是原始的值

40:48.000 --> 40:50.000
再去除以它的reference quantity

40:50.000 --> 40:52.000
好那根據

40:52.000 --> 40:54.000
如下的定義以後呢

40:54.000 --> 40:56.000
我們就可以把這個

40:56.000 --> 40:58.000
無因字化的模型給建立起來了

40:58.000 --> 41:00.000
而在模型裡面

41:00.000 --> 41:02.000
這個無因字化的c的mass

41:02.000 --> 41:04.000
就剛好會是c的loading ratio

41:04.000 --> 41:06.000
這樣我們就比較好去看說

41:06.000 --> 41:08.000
這個ratio是多大

41:10.000 --> 41:12.000
那在這個目標函數的一個選用方面

41:12.000 --> 41:14.000
因為我們剛剛有提到

41:14.000 --> 41:16.000
這higher moment和lower moment

41:16.000 --> 41:18.000
的目標函數的競爭關係

41:18.000 --> 41:20.000
那所以我們就決定

41:20.000 --> 41:22.000
各選一個作為代表

41:22.000 --> 41:24.000
那我們就選擇了

41:24.000 --> 41:26.000
這個nucleated volume和nucleated number

41:26.000 --> 41:28.000
作為higher moment

41:28.000 --> 41:30.000
和lower moment的代表

41:30.000 --> 41:32.000
那我們一樣可以

41:32.000 --> 41:34.000
去把目標函數寫成

41:34.000 --> 41:36.000
這樣的線性疊加

41:36.000 --> 41:38.000
好那就可以用一樣的方式

41:38.000 --> 41:40.000
來糾結這個最佳化問題了

41:40.000 --> 41:42.000
那過程都類似我就不再贅述

41:44.000 --> 41:46.000
好那至於這個

41:46.000 --> 41:48.000
city recipe的話呢

41:48.000 --> 41:50.000
因為我們可以知道

41:50.000 --> 41:52.000
應該會有無限多組的city recipe

41:52.000 --> 41:54.000
可以把這個nucleation給盡可能的抑制下來

41:54.000 --> 41:56.000
那我們就定義

41:56.000 --> 41:58.000
所謂的critical city recipe

41:58.000 --> 42:00.000
那它是一組

42:00.000 --> 42:02.000
city loading ratio和city mean size

42:02.000 --> 42:04.000
的這個組合

42:04.000 --> 42:06.000
它可以讓這個need point

42:06.000 --> 42:08.000
的這個μ3n

42:08.000 --> 42:10.000
也就是在need point得到的nucleated volume

42:10.000 --> 42:12.000
剛好等於

42:12.000 --> 42:14.000
city volume的1%

42:14.000 --> 42:16.000
那我們就把這個1%視為說

42:16.000 --> 42:18.000
因為它已經

42:18.000 --> 42:20.000
幾乎可以忽略了

42:20.000 --> 42:22.000
那就可以當作這樣的city recipe

42:22.000 --> 42:24.000
基本上可以

42:24.000 --> 42:26.000
抑制所謂的成合現象

42:26.000 --> 42:28.000
好

42:28.000 --> 42:30.000
那再來我們看一下這個

42:30.000 --> 42:32.000
所謂的這個

42:34.000 --> 42:36.000
critical parameter

42:36.000 --> 42:38.000
那在我們的研究裡面我們去找了

42:38.000 --> 42:40.000
32組不同的crystalline system

42:40.000 --> 42:42.000
那我們會看到它相對應的

42:42.000 --> 42:44.000
這個parameter

42:44.000 --> 42:46.000
γ和j的這一個範圍

42:46.000 --> 42:48.000
那大部分的系統來講

42:48.000 --> 42:50.000
這γ會落在1到2.5之間

42:50.000 --> 42:52.000
而j會落在

42:52.000 --> 42:54.000
0到1之間

42:54.000 --> 42:56.000
那這個詳細的一些parameter

42:56.000 --> 42:58.000
各位可以去參考

42:58.000 --> 43:00.000
由我當第一作者的這一篇paper

43:00.000 --> 43:02.000
那這個

43:02.000 --> 43:04.000
考量了這個

43:04.000 --> 43:06.000
結晶系統的容值

43:06.000 --> 43:08.000
包含了很多有機化合物

43:08.000 --> 43:10.000
無機化合物

43:10.000 --> 43:12.000
一些食品添加劑或是一些藥物

43:12.000 --> 43:14.000
那這些細節

43:14.000 --> 43:16.000
都可以去參考paper裡面

43:16.000 --> 43:18.000
有比較詳盡的一個table

43:18.000 --> 43:20.000
好

43:20.000 --> 43:22.000
那在這樣的情況之下

43:22.000 --> 43:24.000
我們就求解相對應的parietal front

43:24.000 --> 43:26.000
那我們發現

43:26.000 --> 43:28.000
當γ的這個值比較偏大

43:28.000 --> 43:30.000
的時候

43:30.000 --> 43:32.000
這parietal front它會比較寬

43:32.000 --> 43:34.000
那反過來想就是

43:34.000 --> 43:36.000
如果今天nucleation rate

43:36.000 --> 43:38.000
和growth rate

43:38.000 --> 43:40.000
對super saturation的敏感度差不多

43:40.000 --> 43:42.000
那就是γ會靠近1

43:42.000 --> 43:44.000
那這時候

43:44.000 --> 43:46.000
這個tradeoff就會變得比較弱一些

43:46.000 --> 43:48.000
那同時

43:48.000 --> 43:50.000
我們也發現

43:50.000 --> 43:52.000
這個當γ偏大

43:52.000 --> 43:54.000
那而且這個J

43:54.000 --> 43:56.000
偏小的時候

43:56.000 --> 43:58.000
這super saturation control

43:58.000 --> 44:00.000
得到的這個結果

44:00.000 --> 44:02.000
和Nippon的結果

44:02.000 --> 44:04.000
差距會比較大一些

44:04.000 --> 44:06.000
那其他情況就會差距

44:06.000 --> 44:08.000
比較小一些

44:08.000 --> 44:10.000
那這個理由是因為

44:10.000 --> 44:12.000
當J等於0的時候

44:12.000 --> 44:14.000
這個super saturation control會得到

44:14.000 --> 44:16.000
最小化μ0n

44:16.000 --> 44:18.000
就是最小化乘和數量的

44:18.000 --> 44:20.000
最佳解

44:20.000 --> 44:22.000
那所以它就會和這個Nippon的差距比較遠一些

44:22.000 --> 44:24.000
那另外的情況就是

44:24.000 --> 44:26.000
如果今天這個γ

44:26.000 --> 44:28.000
不大

44:28.000 --> 44:30.000
就表示這個

44:30.000 --> 44:32.000
parietal front不寬

44:32.000 --> 44:34.000
那Nippon和

44:34.000 --> 44:36.000
super saturation control得到的這個結果

44:36.000 --> 44:38.000
也不會差太多

44:38.000 --> 44:40.000
那這就再一次的驗證說

44:40.000 --> 44:42.000
這個super saturation control

44:42.000 --> 44:44.000
其實是一個還蠻不錯的一個

44:44.000 --> 44:46.000
控制策略

44:46.000 --> 44:48.000
都是如此

44:48.000 --> 44:50.000
那至於這個seed recipe design

44:50.000 --> 44:52.000
那我們會想要去探討一下

44:52.000 --> 44:54.000
這個batch time

44:54.000 --> 44:56.000
對seed recipe的一個影響

44:56.000 --> 44:58.000
那因為batch time越長

44:58.000 --> 45:00.000
這平均的過飽和度

45:00.000 --> 45:02.000
和nucleation rate

45:02.000 --> 45:04.000
就會變小一點

45:04.000 --> 45:06.000
所以在這樣的情況之下

45:06.000 --> 45:08.000
這個seed就可以不用加那麼多

45:08.000 --> 45:10.000
但同時會有問題就是

45:10.000 --> 45:12.000
這值不值得

45:12.000 --> 45:14.000
因為batch time變長當然也不是一件

45:14.000 --> 45:16.000
好事情

45:16.000 --> 45:18.000
所以這有沒有

45:18.000 --> 45:20.000
這樣子一個cp值

45:20.000 --> 45:22.000
來去延長batch time

45:22.000 --> 45:24.000
以減小這個

45:24.000 --> 45:26.000
seed的這個使用量

45:26.000 --> 45:28.000
那這樣的一個情況它是對於

45:28.000 --> 45:30.000
不同的系統

45:30.000 --> 45:32.000
會有不同的情況呢

45:32.000 --> 45:34.000
還是還有一個general rule

45:34.000 --> 45:36.000
那我們就一樣會希望

45:36.000 --> 45:38.000
透過這個

45:38.000 --> 45:40.000
無因式化的framework

45:40.000 --> 45:42.000
來做一個分析

45:42.000 --> 45:44.000
好那結果是

45:44.000 --> 45:46.000
這個延長batch time

45:46.000 --> 45:48.000
對於這個seed loading ratio的影響

45:48.000 --> 45:50.000
對於這個系統的

45:50.000 --> 45:52.000
應該說

45:52.000 --> 45:54.000
會看你是怎樣的一個系統

45:54.000 --> 45:56.000
像比方說

45:56.000 --> 45:58.000
這個8號這個系統

45:58.000 --> 46:00.000
如果我把這個batch time從1小時

46:00.000 --> 46:02.000
變成12小時

46:02.000 --> 46:04.000
它的這個seed的用量從

46:04.000 --> 46:06.000
product的100%

46:06.000 --> 46:08.000
變成了

46:08.000 --> 46:10.000
大概20%

46:10.000 --> 46:12.000
但對於像這個系統3號

46:12.000 --> 46:14.000
這個延長batch time

46:14.000 --> 46:16.000
基本上就沒有任何的影響

46:16.000 --> 46:18.000
所以這就會

46:18.000 --> 46:20.000
所謂的system specific

46:20.000 --> 46:22.000
好

46:22.000 --> 46:24.000
那所以在這個chapter裡面呢

46:24.000 --> 46:26.000
我們就去分析了這一個

46:26.000 --> 46:28.000
seed recipe design

46:28.000 --> 46:30.000
和一些這個

46:30.000 --> 46:32.000
seed loading ratio

46:32.000 --> 46:34.000
的一些這個關係

46:34.000 --> 46:36.000
那我們又再一次的

46:36.000 --> 46:38.000
透過這個高效的運算

46:38.000 --> 46:40.000
framework

46:40.000 --> 46:42.000
解析起來的方式或是說

46:42.000 --> 46:44.000
近似的方式

46:44.000 --> 46:46.000
來分析出這樣的一個最佳解

46:48.000 --> 46:50.000
好那最後這個部分呢

46:50.000 --> 46:52.000
我們考慮的是這一個

46:52.000 --> 46:54.000
bonus stage的一個

46:54.000 --> 46:56.000
情況

46:56.000 --> 46:58.000
那在一些文獻裡面有提到說

46:58.000 --> 47:00.000
如果我們可以把這個

47:00.000 --> 47:02.000
dissolution的這個機制

47:02.000 --> 47:04.000
包含到這個操作裡面

47:04.000 --> 47:06.000
我們就有機會去

47:06.000 --> 47:08.000
控制這個seed的CSD

47:08.000 --> 47:10.000
同時移除一些這個

47:10.000 --> 47:12.000
nucleated crystal

47:12.000 --> 47:14.000
好那

47:14.000 --> 47:16.000
只是說如果我們要用這個model-based

47:16.000 --> 47:18.000
的這個方法來做分析的話

47:18.000 --> 47:20.000
我們就要去

47:20.000 --> 47:22.000
試圖去分析這個crystal disappearance

47:22.000 --> 47:24.000
的這個現象

47:24.000 --> 47:26.000
那這個現象是說

47:26.000 --> 47:28.000
在溶解的過程裡面

47:28.000 --> 47:30.000
有一些晶體會直接消失不見

47:30.000 --> 47:32.000
但這個現象在過往的

47:32.000 --> 47:34.000
model-based的描述

47:34.000 --> 47:36.000
都是用所謂離散化的方式來描述

47:36.000 --> 47:38.000
那這就會導致一些

47:38.000 --> 47:40.000
比較高的計算負擔

47:40.000 --> 47:42.000
所以這個session

47:42.000 --> 47:44.000
我們就想要去處理這樣的一個

47:44.000 --> 47:46.000
問題

47:46.000 --> 47:48.000
好那

47:48.000 --> 47:50.000
既然我們要探討到dissolution

47:50.000 --> 47:52.000
那就得再探討

47:52.000 --> 47:54.000
一些這個PPE的事情

47:54.000 --> 47:56.000
那我們假設呢

47:56.000 --> 47:58.000
這個app-based裡面

47:58.000 --> 48:00.000
有很多個stage

48:00.000 --> 48:02.000
那每個stage呢它都只有

48:02.000 --> 48:04.000
growth或是只有dissolution

48:04.000 --> 48:06.000
會發生

48:06.000 --> 48:08.000
那另外這個process永遠是從

48:08.000 --> 48:10.000
growth stage開始

48:10.000 --> 48:12.000
那在這樣的假設之下

48:12.000 --> 48:14.000
我們就可以把growth stage

48:14.000 --> 48:16.000
和dissolution stage的這個編號

48:16.000 --> 48:18.000
給寫下來

48:18.000 --> 48:20.000
並且可以寫出這個相對應的PPE

48:20.000 --> 48:22.000
而這個下標K

48:22.000 --> 48:24.000
就是stage的這個編號

48:24.000 --> 48:26.000
那同時

48:26.000 --> 48:28.000
這kinetic expression

48:28.000 --> 48:30.000
和definition of transform time

48:30.000 --> 48:32.000
其實這個dissolution stage

48:32.000 --> 48:34.000
的這個expression

48:34.000 --> 48:36.000
也是照著growth stage的這個

48:36.000 --> 48:38.000
expression來做所謂的analogy

48:38.000 --> 48:40.000
所以這邊呢

48:40.000 --> 48:42.000
就可以看到這個

48:42.000 --> 48:44.000
expression基本上

48:44.000 --> 48:46.000
都是蠻類似的

48:46.000 --> 48:48.000
那這邊就不再多做這個贅述了

48:50.000 --> 48:52.000
好那再一次的

48:52.000 --> 48:54.000
我們把這個PPE分成

48:54.000 --> 48:56.000
seed和nucleation的part

48:56.000 --> 48:58.000
那seed的part

48:58.000 --> 49:00.000
都可以再一次的

49:00.000 --> 49:02.000
在這個tau domain裡面

49:02.000 --> 49:04.000
求解出這個explicit solution

49:04.000 --> 49:06.000
好那可以

49:06.000 --> 49:08.000
看到一樣不管是

49:08.000 --> 49:10.000
growth rate

49:10.000 --> 49:12.000
抱歉不管是growth stage

49:12.000 --> 49:14.000
或dissolution stage

49:14.000 --> 49:16.000
這個

49:16.000 --> 49:18.000
explicit solution

49:18.000 --> 49:20.000
都可以一樣用tau來表示

49:20.000 --> 49:22.000
所以再一次的我們

49:22.000 --> 49:24.000
用了一個

49:24.000 --> 49:26.000
高計算效能的方法

49:26.000 --> 49:28.000
來做seed的這個PPE

49:28.000 --> 49:30.000
那nucleation就比較麻煩一點

49:30.000 --> 49:32.000
因為它有牽涉到

49:32.000 --> 49:34.000
這個dissolution的問題

49:34.000 --> 49:36.000
那我們做個假設

49:36.000 --> 49:38.000
我們假設這些nucleated crystal

49:38.000 --> 49:40.000
它都服從

49:40.000 --> 49:42.000
size independent的這個growth

49:42.000 --> 49:44.000
和dissolution kinetics

49:44.000 --> 49:46.000
那這個理由是

49:46.000 --> 49:48.000
因為如果我們想要用這個

49:48.000 --> 49:50.000
standard method

49:50.000 --> 49:52.000
of moment

49:52.000 --> 49:54.000
來做這個求解的話

49:54.000 --> 49:56.000
這是必要的一個

49:56.000 --> 49:58.000
這個

49:58.000 --> 50:00.000
假設

50:00.000 --> 50:02.000
那它同時也是合理的假設

50:02.000 --> 50:04.000
因為這個GL和DL

50:04.000 --> 50:06.000
在這個L偏小的時候

50:06.000 --> 50:08.000
它的這個值

50:08.000 --> 50:10.000
都很靠近1

50:10.000 --> 50:12.000
那再來就是在做實驗

50:12.000 --> 50:14.000
去fitting這個parameter的時候

50:14.000 --> 50:16.000
這些參數大部分都是

50:16.000 --> 50:18.000
透過seed-borne crystal

50:18.000 --> 50:20.000
的這個實驗

50:20.000 --> 50:22.000
來去做fitting的

50:22.000 --> 50:24.000
那這樣證據顯示

50:24.000 --> 50:26.000
偏小的這些nucleated crystal

50:26.000 --> 50:28.000
會有一模一樣的

50:28.000 --> 50:30.000
kinetic的行為

50:30.000 --> 50:32.000
所以我們做以上的這個假設

50:32.000 --> 50:34.000
那在這樣的假設之下

50:34.000 --> 50:36.000
我們就可以寫出相對應的

50:36.000 --> 50:38.000
這一個PPE了

50:38.000 --> 50:40.000
那可以看到

50:40.000 --> 50:42.000
它是一個連續的一個解

50:42.000 --> 50:44.000
那這有什麼好處呢

50:44.000 --> 50:46.000
這可以導致我們可以直接

50:46.000 --> 50:48.000
來去使用這個standard method

50:48.000 --> 50:50.000
of moment

50:50.000 --> 50:52.000
這個連續的expression

50:52.000 --> 50:54.000
就可以去推導出

50:54.000 --> 50:56.000
相對應的這個ODE了

50:56.000 --> 50:58.000
那這個連續expression的

50:58.000 --> 51:00.000
假設是什麼呢

51:00.000 --> 51:02.000
我們來看這個圖

51:02.000 --> 51:04.000
假設今天我們有個batch

51:04.000 --> 51:06.000
它只有兩個stage

51:06.000 --> 51:08.000
第一個stage結束完以後

51:08.000 --> 51:10.000
它的這個nucleated

51:10.000 --> 51:12.000
這個csd長這個樣子

51:12.000 --> 51:14.000
那第二個stage

51:14.000 --> 51:16.000
因為它要溶解

51:16.000 --> 51:18.000
這個csd會全部往左移

51:18.000 --> 51:20.000
但是一旦這個crystal size

51:20.000 --> 51:22.000
小於等於0

51:22.000 --> 51:24.000
它就會直接消失不見了

51:24.000 --> 51:26.000
所以這個連續的expression

51:26.000 --> 51:28.000
就可以被拿來當作

51:28.000 --> 51:30.000
這個crystal

51:30.000 --> 51:32.000
消失不見的

51:32.000 --> 51:34.000
這一個速率

51:34.000 --> 51:36.000
的一個參考

51:36.000 --> 51:38.000
好那

51:38.000 --> 51:40.000
談完這一些數值方法

51:40.000 --> 51:42.000
和理論以後呢

51:42.000 --> 51:44.000
我們就可以來看這一個

51:44.000 --> 51:46.000
所謂這個attainable seed

51:46.000 --> 51:48.000
的部分了

51:48.000 --> 51:50.000
那為什麼我們想要去找這個

51:50.000 --> 51:52.000
cssd的這個attainable region呢

51:52.000 --> 51:54.000
那主要的想法是

51:54.000 --> 51:56.000
因為在這個

51:56.000 --> 51:58.000
不管是在篩選

51:58.000 --> 52:00.000
精種或是在篩選產品

52:00.000 --> 52:02.000
的時候我們常常會使用

52:02.000 --> 52:04.000
這個篩網來做這個產品的

52:04.000 --> 52:06.000
篩選

52:06.000 --> 52:08.000
但這樣子呢產品的平均濾鏡

52:08.000 --> 52:10.000
和這個csd的寬度

52:10.000 --> 52:12.000
就會被篩網的

52:12.000 --> 52:14.000
這個網目大小所限制

52:14.000 --> 52:16.000
所以如果我們可以去

52:16.000 --> 52:18.000
想辦法直接設計一個process

52:18.000 --> 52:20.000
直接去控制產品的

52:20.000 --> 52:22.000
這個濾鏡分布

52:22.000 --> 52:24.000
比方說平均和它的這個csd

52:24.000 --> 52:26.000
有多寬那這樣當然是最好的

52:26.000 --> 52:28.000
那所以我們就可以

52:28.000 --> 52:30.000
透過剛剛推導出來的

52:30.000 --> 52:32.000
這一個algorithm

52:32.000 --> 52:34.000
就可以來做

52:34.000 --> 52:36.000
快速的這樣的分析

52:36.000 --> 52:38.000
那在這個章節我們使用的是一個

52:38.000 --> 52:40.000
這個民凡的一個系統

52:40.000 --> 52:42.000
那民凡的系統的kinetic

52:42.000 --> 52:44.000
如下稿所示

52:46.000 --> 52:48.000
那下一個問題是

52:48.000 --> 52:50.000
我們要怎麼樣去定義這個

52:50.000 --> 52:52.000
所謂的atom origin

52:52.000 --> 52:54.000
那就決定我們使用了這個

52:54.000 --> 52:56.000
產品的這個

52:56.000 --> 52:58.000
mean和variance

52:58.000 --> 53:00.000
來做這個定義

53:00.000 --> 53:02.000
那可以看到我們就定義了這個

53:02.000 --> 53:04.000
cd

53:04.000 --> 53:06.000
和一些這個等一下要

53:06.000 --> 53:08.000
求解最佳化化問題的一些

53:08.000 --> 53:10.000
constraint

53:10.000 --> 53:12.000
initial condition

53:12.000 --> 53:14.000
包含了cd loading

53:14.000 --> 53:16.000
包含了solubility

53:16.000 --> 53:18.000
包含了我們不可以讓cd

53:18.000 --> 53:20.000
crystal直接消失不見

53:20.000 --> 53:22.000
就會有一個這個

53:22.000 --> 53:24.000
crystal size的一個限制

53:24.000 --> 53:26.000
以及production rate

53:26.000 --> 53:28.000
那一些比較詳盡的一些

53:28.000 --> 53:30.000
這個介紹一樣可以去參考

53:30.000 --> 53:32.000
由我當第一作者的另外一篇

53:32.000 --> 53:34.000
這個paper那這邊就不再

53:34.000 --> 53:36.000
做太仔細的這個描述

53:36.000 --> 53:40.000
好那再來因為

53:40.000 --> 53:42.000
照剛剛的這樣的限制是

53:42.000 --> 53:44.000
產品的μ0

53:44.000 --> 53:46.000
和μ3

53:46.000 --> 53:48.000
都可以被直接計算

53:48.000 --> 53:50.000
計算出來

53:50.000 --> 53:52.000
所以我們在這個

53:52.000 --> 53:54.000
定義這個atom origin的時候

53:54.000 --> 53:56.000
使用的這個mean size

53:56.000 --> 53:58.000
是所謂的number volume mean

53:58.000 --> 54:00.000
那定義如下

54:00.000 --> 54:02.000
那定義好這個number volume mean以後呢

54:02.000 --> 54:04.000
我們就可以在

54:04.000 --> 54:06.000
剛剛提到的這些common的限制式

54:06.000 --> 54:08.000
以及

54:08.000 --> 54:10.000
這個target的

54:10.000 --> 54:12.000
這個number volume mean的限制之下

54:12.000 --> 54:14.000
去最大化

54:14.000 --> 54:16.000
或最小化產品

54:16.000 --> 54:18.000
cd的這個σp或是說

54:18.000 --> 54:20.000
variance

54:20.000 --> 54:22.000
那這樣子就可以去定義出

54:22.000 --> 54:24.000
所謂的這個atom origin

54:24.000 --> 54:26.000
那需要注意的是

54:26.000 --> 54:28.000
在這邊我們都只談到這個cd的部分

54:28.000 --> 54:30.000
那cd的

54:30.000 --> 54:32.000
這個PBE又可以直接被

54:32.000 --> 54:34.000
這個τ來表示

54:34.000 --> 54:36.000
所以呢可以看到在這邊

54:36.000 --> 54:38.000
都還沒有提到任何有關於

54:38.000 --> 54:40.000
這個supersaturation trajectory

54:40.000 --> 54:42.000
的一個部分

54:42.000 --> 54:44.000
好那這個是

54:44.000 --> 54:46.000
我們得到的一個結果

54:46.000 --> 54:48.000
那首先我們可以來看這個atom origin

54:48.000 --> 54:50.000
那結果會發現

54:50.000 --> 54:52.000
如果今天是所謂的single stage

54:52.000 --> 54:54.000
process那我們會得到一條

54:54.000 --> 54:56.000
atom curve

54:56.000 --> 54:58.000
甚至不是一個region

54:58.000 --> 55:00.000
但如果我們今天的這個stage變得越來越多

55:00.000 --> 55:02.000
這個region就會

55:02.000 --> 55:04.000
越來越寬

55:04.000 --> 55:06.000
但是我們可以看到這個寬的這個方向

55:06.000 --> 55:08.000
基本上是以

55:08.000 --> 55:10.000
增加σp的方向來

55:10.000 --> 55:12.000
來做

55:12.000 --> 55:14.000
來做擴展的

55:14.000 --> 55:16.000
所以如果我們來看

55:16.000 --> 55:18.000
這個a b c

55:18.000 --> 55:20.000
三個點它相對應的

55:20.000 --> 55:22.000
相對應的cd

55:22.000 --> 55:24.000
它會變得越來越寬

55:24.000 --> 55:26.000
但對於d e f g

55:26.000 --> 55:28.000
這四個點

55:28.000 --> 55:30.000
它的cd變化就不大了

55:30.000 --> 55:32.000
好那

55:32.000 --> 55:34.000
為什麼會這樣子呢

55:34.000 --> 55:36.000
那我們去探討一下

55:36.000 --> 55:38.000
會發現結果是因為

55:38.000 --> 55:40.000
這個growth rate和dissolution rate

55:40.000 --> 55:42.000
它對於這個crystal size的

55:42.000 --> 55:44.000
敏感度是不同的

55:44.000 --> 55:46.000
growth rate

55:46.000 --> 55:48.000
它大部分的時候

55:48.000 --> 55:50.000
它的這個敏感度會比較高

55:50.000 --> 55:52.000
而dissolution rate它只在

55:52.000 --> 55:54.000
一個很小的範圍裡面

55:54.000 --> 55:56.000
有著比較高的敏感度

55:56.000 --> 55:58.000
那假設我今天想要

55:58.000 --> 56:00.000
把這個cd變窄

56:00.000 --> 56:02.000
我只能在一個很窄的區間裡面

56:02.000 --> 56:04.000
這樣做cycling

56:04.000 --> 56:06.000
所以就會導致剛剛看到的這個現象

56:06.000 --> 56:08.000
那同時也會導致

56:08.000 --> 56:10.000
在這個

56:10.000 --> 56:12.000
growth stage裡面

56:12.000 --> 56:14.000
它的這個μ3的變化

56:14.000 --> 56:16.000
其實是偏小的

56:18.000 --> 56:20.000
好那如果我們探討完了

56:20.000 --> 56:22.000
這一個這個

56:22.000 --> 56:24.000
attainable region的事情以後

56:24.000 --> 56:26.000
那如果今天呢

56:26.000 --> 56:28.000
這個有一個我們

56:28.000 --> 56:30.000
想要的這個product

56:30.000 --> 56:32.000
mean size和σp

56:32.000 --> 56:34.000
而且這個值

56:34.000 --> 56:36.000
又落在這個attainable region裡面

56:36.000 --> 56:38.000
我們其實就可以再透過

56:38.000 --> 56:40.000
求解這樣的一個最佳化問題

56:40.000 --> 56:42.000
去找出一組cd holding

56:42.000 --> 56:44.000
和一組這個tau f

56:44.000 --> 56:46.000
但這個問題呢

56:46.000 --> 56:48.000
會有很多組解

56:48.000 --> 56:50.000
那每一組解得到的fetch time和nucleated volume

56:50.000 --> 56:52.000
就會不太一樣

56:52.000 --> 56:54.000
但fetch time和nucleated volume

56:54.000 --> 56:56.000
就會取決於

56:56.000 --> 56:58.000
這個smooth saturation的

56:58.000 --> 57:00.000
這個軌跡了

57:00.000 --> 57:02.000
那我們假設這個軌跡

57:02.000 --> 57:04.000
它是以一個

57:04.000 --> 57:06.000
二次函數

57:06.000 --> 57:08.000
和一個constant function

57:08.000 --> 57:10.000
組成的一個連續且

57:10.000 --> 57:12.000
smooth的一個函數

57:12.000 --> 57:14.000
那我們就可以再去

57:14.000 --> 57:16.000
透過求解這個最佳化問題

57:16.000 --> 57:18.000
去找到說

57:18.000 --> 57:20.000
在我們想要的這個

57:20.000 --> 57:22.000
product的mean和variance的條件之下

57:22.000 --> 57:24.000
那最小的fetch time

57:24.000 --> 57:26.000
會是多少

57:26.000 --> 57:28.000
好

57:28.000 --> 57:30.000
那這會是一個tradeoff

57:30.000 --> 57:32.000
因為我們把這個smooth saturation的set point

57:32.000 --> 57:34.000
設得越大fetch time就會越短

57:34.000 --> 57:36.000
但同樣的

57:36.000 --> 57:38.000
這個nucleation rate又會

57:38.000 --> 57:40.000
越大

57:40.000 --> 57:42.000
那所以就一樣去畫出了

57:42.000 --> 57:44.000
這樣的一個曲線

57:44.000 --> 57:46.000
去分析這樣的

57:46.000 --> 57:48.000
競爭關係

57:48.000 --> 57:50.000
同時也可以去推導出

57:50.000 --> 57:52.000
它相對應的temperature取決於投入

57:52.000 --> 57:54.000
這樣就可以去分析說

57:54.000 --> 57:56.000
我大概要用多大的這個

57:56.000 --> 57:58.000
set point會是比較好的

57:58.000 --> 58:00.000
一個結果

58:00.000 --> 58:02.000
好,所以這個章節

58:02.000 --> 58:04.000
我們就透過了這一個

58:04.000 --> 58:06.000
這個framework

58:06.000 --> 58:08.000
去分析了這個seed CSD

58:08.000 --> 58:10.000
的這個tailoring problem

58:10.000 --> 58:12.000
那我們去使用了這個growth

58:12.000 --> 58:14.000
dissolution cycles

58:14.000 --> 58:16.000
那我們這樣的一個這個方法

58:16.000 --> 58:18.000
去分析所謂的crystal disappearance

58:18.000 --> 58:20.000
的一個現象

58:20.000 --> 58:22.000
好,那至於這個

58:22.000 --> 58:24.000
attainable region

58:24.000 --> 58:26.000
可以擴張的一個情況

58:26.000 --> 58:28.000
就會根據它的kinetic來

58:28.000 --> 58:30.000
決定,那我們同時也去討論

58:30.000 --> 58:32.000
這個fetch time

58:32.000 --> 58:34.000
和inhibiting nucleation

58:34.000 --> 58:36.000
這樣的目標的一些競爭關係

58:36.000 --> 58:38.000
好,所以

58:38.000 --> 58:40.000
最後這個

58:40.000 --> 58:42.000
研究的這一個結論

58:42.000 --> 58:44.000
就是我們透過了

58:44.000 --> 58:46.000
unlimited transformation

58:46.000 --> 58:48.000
optimal control theory

58:48.000 --> 58:50.000
和無因次化的這一個方法

58:50.000 --> 58:52.000
來分析了以下這些問題

58:52.000 --> 58:54.000
包含了目標元素tradeoff的分析

58:54.000 --> 58:56.000
包含了這個

58:56.000 --> 58:58.000
rule of sum的

58:58.000 --> 59:00.000
這個控制策略

59:00.000 --> 59:02.000
包含了這個seed holding ratio的

59:02.000 --> 59:04.000
這個saving的problem

59:04.000 --> 59:06.000
還有這個attainable region的一些problem

59:06.000 --> 59:08.000
那這樣的一個

59:08.000 --> 59:10.000
這個framework也可以

59:10.000 --> 59:12.000
被用在一些這個

59:12.000 --> 59:14.000
不同的領域,那這些是未來的一些

59:14.000 --> 59:16.000
研究方向,包含了

59:16.000 --> 59:18.000
去分析

59:18.000 --> 59:20.000
更複雜的這個kinetic

59:20.000 --> 59:22.000
系統的最佳控制

59:22.000 --> 59:24.000
可能會包含了一些

59:24.000 --> 59:26.000
這個考慮crystal shape

59:26.000 --> 59:28.000
的process,包含了一些

59:28.000 --> 59:30.000
temperature dependent的一些系統

59:30.000 --> 59:32.000
那或者是也可以考慮一些

59:32.000 --> 59:34.000
所謂的韌性控制

59:34.000 --> 59:36.000
因為model-based control

59:36.000 --> 59:38.000
的一個

59:38.000 --> 59:40.000
致命上是

59:40.000 --> 59:42.000
會有一些這個parameter uncertainty的問題

59:42.000 --> 59:44.000
所以會需要一些

59:44.000 --> 59:46.000
所謂的robustness analysis

59:46.000 --> 59:48.000
那再來就是可以去

59:48.000 --> 59:50.000
分析

59:50.000 --> 59:52.000
把這個高效演算法

59:52.000 --> 59:54.000
用在一些高階的控制策略

59:54.000 --> 59:56.000
比方說所謂的

59:56.000 --> 59:58.000
model predictive control裡面

59:58.000 --> 01:00:00.000
那這樣的控制策略

01:00:00.000 --> 01:00:02.000
會需要比較高的計算效能

01:00:02.000 --> 01:00:04.000
那剛好就可以用我們的這個方法

01:00:04.000 --> 01:00:06.000
來做一些補助

01:00:06.000 --> 01:00:08.000
好

01:00:08.000 --> 01:00:10.000
那以上是今天的

01:00:10.000 --> 01:00:12.000
這個

01:00:12.000 --> 01:00:14.000
演講的這個內容

01:00:14.000 --> 01:00:16.000
有點長,那也謝謝各位在

01:00:16.000 --> 01:00:18.000
討論時間一大早和美國

01:00:18.000 --> 01:00:20.000
消夜時間來聽我做這個報告

01:00:20.000 --> 01:00:22.000
那也歡迎各位提出任何的

01:00:22.000 --> 01:00:24.000
問題來做這個討論

01:00:28.000 --> 01:00:30.000
謝謝Howard今天的演講

01:00:30.000 --> 01:00:32.000
那有任何

01:00:32.000 --> 01:00:34.000
問題的都可以現在

01:00:34.000 --> 01:00:36.000
提出來

01:00:38.000 --> 01:00:40.000
Hey

01:00:40.000 --> 01:00:42.000
Hey

01:00:42.000 --> 01:00:44.000
Hello

01:00:44.000 --> 01:00:46.000
聽得到嗎

01:00:46.000 --> 01:00:48.000
可以

01:00:48.000 --> 01:00:50.000
非常

01:00:50.000 --> 01:00:52.000
非常informative的

01:00:52.000 --> 01:00:54.000
talk

01:00:54.000 --> 01:00:56.000
我有一個quick question

01:00:56.000 --> 01:00:58.000
就是你說

01:00:58.000 --> 01:01:00.000
robust analysis

01:01:00.000 --> 01:01:02.000
基本上是

01:01:02.000 --> 01:01:04.000
有點像是error analysis

01:01:04.000 --> 01:01:06.000
就假設你

01:01:06.000 --> 01:01:08.000
假設你

01:01:08.000 --> 01:01:10.000
有一定的uncertainty

01:01:10.000 --> 01:01:12.000
然後呢

01:01:12.000 --> 01:01:14.000
因為你在做計算的時候你一定是

01:01:14.000 --> 01:01:16.000
只能給一個給定的值

01:01:16.000 --> 01:01:18.000
那你robust analysis

01:01:18.000 --> 01:01:20.000
是說假設有這樣的誤差範圍

01:01:20.000 --> 01:01:22.000
那你如果

01:01:22.000 --> 01:01:24.000
你如果在這樣誤差範圍的話

01:01:24.000 --> 01:01:26.000
然後你在這個誤差範圍上下之內

01:01:26.000 --> 01:01:28.000
然後再去重跑一遍

01:01:28.000 --> 01:01:30.000
那你跑出來的結果會差異多少

01:01:30.000 --> 01:01:32.000
是這個意思嗎

01:01:32.000 --> 01:01:34.000
對差不多是這樣的意思

01:01:34.000 --> 01:01:36.000
那這個

01:01:36.000 --> 01:01:38.000
我只是好奇

01:01:38.000 --> 01:01:40.000
那這個是你之後要做的

01:01:40.000 --> 01:01:42.000
方向還是

01:01:42.000 --> 01:01:44.000
其實你paper已經有提到這件事

01:01:44.000 --> 01:01:46.000
所以我只好奇說

01:01:46.000 --> 01:01:48.000
因為kinetic

01:01:48.000 --> 01:01:50.000
對確實

01:01:50.000 --> 01:01:52.000
你這樣看起來

01:01:52.000 --> 01:01:54.000
可以理解

01:01:54.000 --> 01:01:56.000
因為我自己像是做實驗的

01:01:56.000 --> 01:01:58.000
你要得到一個很準確的

01:01:58.000 --> 01:02:00.000
kinetic parameter其實是很困難的

01:02:00.000 --> 01:02:02.000
那我只想說

01:02:02.000 --> 01:02:04.000
這個error到底是多少

01:02:04.000 --> 01:02:06.000
那如果說根據像現有

01:02:06.000 --> 01:02:08.000
我們實驗的

01:02:08.000 --> 01:02:10.000
實驗

01:02:10.000 --> 01:02:12.000
這樣最好的data

01:02:12.000 --> 01:02:14.000
你明明是材質文獻

01:02:14.000 --> 01:02:16.000
那如果說你假設

01:02:16.000 --> 01:02:18.000
這樣存在這樣error的話

01:02:18.000 --> 01:02:20.000
你再重下

01:02:20.000 --> 01:02:22.000
你根據這個error再重跑下去

01:02:22.000 --> 01:02:24.000
那這個差距會多大

01:02:24.000 --> 01:02:26.000
然後這樣會不會造成一些

01:02:26.000 --> 01:02:28.000
非常嚴重的後果

01:02:28.000 --> 01:02:30.000
假設如果說

01:02:30.000 --> 01:02:32.000
假設如果說有一定的error存在的話

01:02:32.000 --> 01:02:34.000
因為我們知道可能

01:02:34.000 --> 01:02:36.000
modeling有蝴蝶效應嘛

01:02:36.000 --> 01:02:38.000
你可能一開始initial contingent差一點點

01:02:38.000 --> 01:02:40.000
你後面跑的整個東西就會

01:02:40.000 --> 01:02:42.000
整個不一樣

01:02:42.000 --> 01:02:44.000
想聽聽看你在這方面的comment

01:02:46.000 --> 01:02:48.000
首先就是

01:02:48.000 --> 01:02:50.000
這個部分其實是未來的

01:02:50.000 --> 01:02:52.000
研究方向

01:02:52.000 --> 01:02:54.000
目前我們還在一些

01:02:54.000 --> 01:02:56.000
很前期的一些study

01:02:56.000 --> 01:02:58.000
也的確其實在這個

01:02:58.000 --> 01:03:00.000
結晶process

01:03:00.000 --> 01:03:02.000
這個robust control

01:03:02.000 --> 01:03:04.000
或是像你剛剛所謂的

01:03:04.000 --> 01:03:06.000
這個error analysis

01:03:06.000 --> 01:03:08.000
其實研究還蠻多的

01:03:08.000 --> 01:03:10.000
會不會造成

01:03:10.000 --> 01:03:12.000
災難性的結果

01:03:12.000 --> 01:03:14.000
可能

01:03:14.000 --> 01:03:16.000
比較還好是因為這個

01:03:16.000 --> 01:03:18.000
結晶其實算是蠻後段的製程

01:03:18.000 --> 01:03:20.000
那當然

01:03:20.000 --> 01:03:22.000
它可能會造成一些

01:03:22.000 --> 01:03:24.000
後段操作的一些困擾

01:03:24.000 --> 01:03:26.000
所以的確是會需要

01:03:26.000 --> 01:03:28.000
去把這個

01:03:28.000 --> 01:03:30.000
可能的一些batch to batch的variation

01:03:30.000 --> 01:03:32.000
或者是一些

01:03:32.000 --> 01:03:34.000
error上下線

01:03:34.000 --> 01:03:36.000
可能會需要做一些

01:03:36.000 --> 01:03:38.000
探討

01:03:38.000 --> 01:03:40.000
那至於剛剛我們提到的

01:03:40.000 --> 01:03:42.000
這些系統

01:03:42.000 --> 01:03:44.000
因為我們目前是先去用別人的

01:03:44.000 --> 01:03:46.000
這個實驗參數

01:03:46.000 --> 01:03:48.000
先去做所謂的

01:03:48.000 --> 01:03:50.000
unknown case的分析

01:03:50.000 --> 01:03:52.000
那目前我們也是比較先

01:03:52.000 --> 01:03:54.000
活動在一些比較

01:03:54.000 --> 01:03:56.000
基本算法和一些

01:03:56.000 --> 01:03:58.000
所謂目標來說

01:03:58.000 --> 01:04:00.000
tradeoff的一些

01:04:00.000 --> 01:04:02.000
所以目前我們

01:04:02.000 --> 01:04:04.000
還沒有去探討到

01:04:04.000 --> 01:04:06.000
這個方面,但這樣的研究

01:04:06.000 --> 01:04:08.000
在別的group是有做過的

01:04:08.000 --> 01:04:10.000
了解

01:04:10.000 --> 01:04:12.000
了解

01:04:12.000 --> 01:04:14.000
因為你們討論資料化

01:04:14.000 --> 01:04:16.000
所以基本上假設你

01:04:16.000 --> 01:04:18.000
kinetic parameter有

01:04:18.000 --> 01:04:20.000
些許誤差,但是最後

01:04:20.000 --> 01:04:22.000
還是一個最佳化的結果

01:04:22.000 --> 01:04:24.000
對

01:04:24.000 --> 01:04:26.000
這樣

01:04:26.000 --> 01:04:28.000
蠻

01:04:28.000 --> 01:04:30.000
合理的

01:04:30.000 --> 01:04:32.000
對,就可能會考慮一些

01:04:32.000 --> 01:04:34.000
比方說所謂的nominal value

01:04:34.000 --> 01:04:36.000
跟一些所謂的

01:04:36.000 --> 01:04:38.000
robust

01:04:38.000 --> 01:04:40.000
或是說比方說在一些

01:04:40.000 --> 01:04:42.000
這個

01:04:42.000 --> 01:04:44.000
error之下

01:04:44.000 --> 01:04:46.000
它的這個產品

01:04:46.000 --> 01:04:48.000
出來的variation會多大

01:04:48.000 --> 01:04:50.000
這樣子

01:04:50.000 --> 01:04:52.000
了解

01:04:52.000 --> 01:04:54.000
你這個

01:04:54.000 --> 01:04:56.000
最佳化策略有實際跟

01:04:56.000 --> 01:04:58.000
實驗的人合作過嗎

01:04:58.000 --> 01:05:00.000
就是

01:05:00.000 --> 01:05:02.000
把這個東西套用到一些

01:05:02.000 --> 01:05:04.000
可能不可能直接套用到工廠

01:05:04.000 --> 01:05:06.000
可能先一個小的

01:05:06.000 --> 01:05:08.000
實驗的batch或之類的

01:05:08.000 --> 01:05:10.000
或者你要不要去compare一些

01:05:10.000 --> 01:05:12.000
experimental data

01:05:12.000 --> 01:05:14.000
就是最後跑出來profile的結果

01:05:16.000 --> 01:05:18.000
ok,老實講

01:05:18.000 --> 01:05:20.000
沒有

01:05:20.000 --> 01:05:22.000
比較直白來講就是

01:05:22.000 --> 01:05:24.000
我們目前

01:05:24.000 --> 01:05:26.000
設備上就主動在最佳化

01:05:26.000 --> 01:05:28.000
主動在計算

01:05:28.000 --> 01:05:30.000
了解

01:05:32.000 --> 01:05:34.000
謝謝

01:05:44.000 --> 01:05:46.000
還有其他人有問題嗎

01:05:48.000 --> 01:05:50.000
好

01:05:54.000 --> 01:05:56.000
這樣變成就我問題最多

01:05:58.000 --> 01:06:00.000
我前面其實有好奇

01:06:00.000 --> 01:06:02.000
一個問題只是我不太確定

01:06:02.000 --> 01:06:04.000
後面有沒有講到

01:06:04.000 --> 01:06:06.000
你前面在講

01:06:06.000 --> 01:06:08.000
應該是

01:06:08.000 --> 01:06:10.000
多目標函數的pb

01:06:10.000 --> 01:06:12.000
我忘記哪一頁了

01:06:12.000 --> 01:06:14.000
你一開始在介紹那個alpha跟beta

01:06:14.000 --> 01:06:16.000
beta1跟beta2的時候

01:06:16.000 --> 01:06:18.000
你後來就在講說

01:06:18.000 --> 01:06:20.000
就是怎麼

01:06:20.000 --> 01:06:22.000
去看beta1跟beta2

01:06:22.000 --> 01:06:24.000
就是看那個曲線

01:06:24.000 --> 01:06:26.000
然後

01:06:26.000 --> 01:06:28.000
你一開始在介紹

01:06:28.000 --> 01:06:30.000
前面那個函數的時候

01:06:30.000 --> 01:06:32.000
前面那個

01:06:32.000 --> 01:06:34.000
就是我有點好奇

01:06:34.000 --> 01:06:36.000
說就是

01:06:36.000 --> 01:06:38.000
你是怎麼決定權重

01:06:38.000 --> 01:06:40.000
看起來你這邊是

01:06:40.000 --> 01:06:42.000
牽涉到兩個

01:06:42.000 --> 01:06:44.000
就phi1跟phi2

01:06:44.000 --> 01:06:46.000
那你們有考慮過就是

01:06:46.000 --> 01:06:48.000
牽涉到更多的嗎

01:06:48.000 --> 01:06:50.000
還是

01:06:50.000 --> 01:06:52.000
就是

01:06:52.000 --> 01:06:54.000
都是用這種表達式

01:06:58.000 --> 01:07:00.000
phi2

01:07:00.000 --> 01:07:02.000
那alpha設成1會

01:07:02.000 --> 01:07:04.000
怎麼講

01:07:04.000 --> 01:07:06.000
alpha設成1會變成

01:07:06.000 --> 01:07:08.000
單一考慮phi1

01:07:08.000 --> 01:07:10.000
那所以只有alpha在0到1之間

01:07:10.000 --> 01:07:12.000
就會變成

01:07:12.000 --> 01:07:14.000
phi1和phi2任何

01:07:14.000 --> 01:07:16.000
權重的tradeoff

01:07:16.000 --> 01:07:18.000
那只要我們

01:07:18.000 --> 01:07:20.000
把alpha在0到1之間

01:07:20.000 --> 01:07:22.000
這樣子去調的話

01:07:22.000 --> 01:07:24.000
那是不是就可以把他所有

01:07:24.000 --> 01:07:26.000
tradeoff的情況都分析出來

01:07:28.000 --> 01:07:30.000
sorry你剛剛可能有點斷掉

01:07:30.000 --> 01:07:32.000
你意思說

01:07:34.000 --> 01:07:36.000
你可以稍微再講

01:07:36.000 --> 01:07:38.000
ok因為

01:07:38.000 --> 01:07:40.000
alpha如果設為0或是1的話

01:07:40.000 --> 01:07:42.000
就會退化成

01:07:42.000 --> 01:07:44.000
單純考慮phi1或單純考慮

01:07:44.000 --> 01:07:46.000
phi2

01:07:46.000 --> 01:07:48.000
那只要把alpha設為0和1之間

01:07:48.000 --> 01:07:50.000
的任何數值

01:07:50.000 --> 01:07:52.000
就可以變成phi1和phi2的任何權重

01:07:54.000 --> 01:07:56.000
對

01:07:56.000 --> 01:07:58.000
我的意思就是說

01:07:58.000 --> 01:08:00.000
那你怎麼知道怎麼樣的權重是比較好

01:08:00.000 --> 01:08:02.000
就是就等於是說

01:08:02.000 --> 01:08:04.000
你alpha越大那你就是phi1

01:08:04.000 --> 01:08:06.000
就是越重要你alpha越小

01:08:06.000 --> 01:08:08.000
你phi2就越重要

01:08:08.000 --> 01:08:10.000
那你怎麼知道說

01:08:10.000 --> 01:08:12.000
phi1跟phi2哪個比較重要

01:08:12.000 --> 01:08:14.000
那又比另外一個重要多少

01:08:14.000 --> 01:08:16.000
ok好

01:08:16.000 --> 01:08:18.000
因為

01:08:18.000 --> 01:08:20.000
第一個問題是的確很難去

01:08:20.000 --> 01:08:22.000
定量去說

01:08:22.000 --> 01:08:24.000
比方說phi1是phi2的兩倍重要

01:08:24.000 --> 01:08:26.000
這樣不好定義

01:08:26.000 --> 01:08:28.000
所以想法是我們在

01:08:28.000 --> 01:08:30.000
第二十二頁這邊

01:08:30.000 --> 01:08:32.000
做一個所謂的normalization

01:08:32.000 --> 01:08:34.000
我們把phi1和phi2就壓縮到

01:08:34.000 --> 01:08:36.000
0和1之間

01:08:36.000 --> 01:08:38.000
那所以像是右邊的這張圖

01:08:38.000 --> 01:08:40.000
這兩個點

01:08:40.000 --> 01:08:42.000
端點對應到

01:08:42.000 --> 01:08:44.000
其實是phi1和phi2的

01:08:44.000 --> 01:08:46.000
最佳解

01:08:46.000 --> 01:08:48.000
那在normalize

01:08:48.000 --> 01:08:50.000
之後就會對應到

01:08:50.000 --> 01:08:52.000
01和10

01:08:52.000 --> 01:08:54.000
這兩個點

01:08:54.000 --> 01:08:56.000
所以在這樣的一個平面上

01:08:56.000 --> 01:08:58.000
原點的意義其實是

01:08:58.000 --> 01:09:00.000
兩個目標函數同時達到

01:09:00.000 --> 01:09:02.000
最佳解的一個情況

01:09:02.000 --> 01:09:04.000
但是因為競爭關係這件事情無法達到

01:09:04.000 --> 01:09:06.000
所以我們會想說

01:09:06.000 --> 01:09:08.000
那就把tradeoff front

01:09:08.000 --> 01:09:10.000
先畫出來

01:09:10.000 --> 01:09:12.000
然後我們去找一個點

01:09:12.000 --> 01:09:14.000
讓這個點跟原點的距離是最短的

01:09:14.000 --> 01:09:16.000
那意思就是說

01:09:16.000 --> 01:09:18.000
這個點

01:09:18.000 --> 01:09:20.000
它在phi1和phi2

01:09:20.000 --> 01:09:22.000
得到的這個值

01:09:22.000 --> 01:09:24.000
和它們最佳解的這一個

01:09:24.000 --> 01:09:26.000
所謂的percentage difference

01:09:26.000 --> 01:09:28.000
是最小的

01:09:28.000 --> 01:09:30.000
而這個點就把它視同為最好的

01:09:30.000 --> 01:09:32.000
那一個tradeoff

01:09:32.000 --> 01:09:34.000
那有一個

01:09:34.000 --> 01:09:36.000
在多目標函數裡面有一個名詞

01:09:36.000 --> 01:09:38.000
叫knee point就可以來描述

01:09:38.000 --> 01:09:40.000
這樣的一個點

01:09:40.000 --> 01:09:42.000
大致上是用這樣的一個方式來做的

01:09:44.000 --> 01:09:46.000
了解

01:09:46.000 --> 01:09:48.000
我剛剛看到就是

01:09:48.000 --> 01:09:50.000
你按照它對原點距離

01:09:50.000 --> 01:09:52.000
去做最小化的時候

01:09:52.000 --> 01:09:54.000
我直覺是可能

01:09:54.000 --> 01:09:56.000
數學上來看就是那個點同時

01:09:56.000 --> 01:09:58.000
也代表說就是

01:09:58.000 --> 01:10:00.000
你在求的那個

01:10:00.000 --> 01:10:02.000
最佳解它解出來

01:10:02.000 --> 01:10:04.000
應該variance 它的變異數

01:10:04.000 --> 01:10:06.000
應該也是最小化

01:10:06.000 --> 01:10:08.000
這個是對的嗎?還是說其實不一定

01:10:08.000 --> 01:10:10.000
單純因為好奇

01:10:10.000 --> 01:10:12.000
它們之間有沒有連結

01:10:12.000 --> 01:10:14.000
應該說

01:10:14.000 --> 01:10:16.000
其實在解的時候會有

01:10:16.000 --> 01:10:18.000
所謂的雙層的最佳化

01:10:18.000 --> 01:10:20.000
那

01:10:20.000 --> 01:10:22.000
第一層就是去找出

01:10:22.000 --> 01:10:24.000
這個tradeoff front上面的任何一個點

01:10:24.000 --> 01:10:26.000
那其實任何一個點我們都可以把它

01:10:26.000 --> 01:10:28.000
稱之為一個最佳解

01:10:28.000 --> 01:10:30.000
那只是說在

01:10:30.000 --> 01:10:32.000
最佳解之間要再找到一個

01:10:32.000 --> 01:10:34.000
最好

01:10:34.000 --> 01:10:36.000
最佳的最佳解

01:10:36.000 --> 01:10:38.000
那就要再去

01:10:38.000 --> 01:10:40.000
最小化這一個距離

01:10:40.000 --> 01:10:42.000
所以其實在解這樣的

01:10:42.000 --> 01:10:44.000
問題的時候

01:10:44.000 --> 01:10:46.000
其實是雙層的最佳化問題

01:10:46.000 --> 01:10:48.000
那雙層

01:10:48.000 --> 01:10:50.000
可能就是來自於說你有兩個

01:10:50.000 --> 01:10:52.000
目標函數這樣子

01:10:52.000 --> 01:10:54.000
那你們

01:10:54.000 --> 01:10:56.000
就是

01:10:56.000 --> 01:10:58.000
剛好看到說你有一些

01:10:58.000 --> 01:11:00.000
不同的組合就可能四個組合

01:11:00.000 --> 01:11:02.000
然後就是每個組合裡面牽扯到

01:11:02.000 --> 01:11:04.000
兩個目標函數

01:11:04.000 --> 01:11:06.000
但就是可能

01:11:06.000 --> 01:11:08.000
在最佳化的時候

01:11:08.000 --> 01:11:10.000
兩個目標函數必須要

01:11:10.000 --> 01:11:12.000
有點互相抗衡的意思

01:11:12.000 --> 01:11:14.000
那這樣做才會怎麼講

01:11:14.000 --> 01:11:16.000
才比較有意義

01:11:16.000 --> 01:11:18.000
不然的話就是單純的兩個都拉到最小

01:11:18.000 --> 01:11:20.000
或兩個都拉到最大那就可以了

01:11:20.000 --> 01:11:22.000
所以

01:11:22.000 --> 01:11:24.000
我可以想像的是就是

01:11:24.000 --> 01:11:26.000
假設有N個目標函數

01:11:26.000 --> 01:11:28.000
你的組合一定是小於

01:11:28.000 --> 01:11:30.000
Cn取2之類的

01:11:30.000 --> 01:11:32.000
只是我在想

01:11:32.000 --> 01:11:34.000
你們

01:11:34.000 --> 01:11:36.000
有沒有試著考慮過

01:11:36.000 --> 01:11:38.000
考慮超過兩個目標函數

01:11:38.000 --> 01:11:40.000
是不是合理的

01:11:40.000 --> 01:11:42.000
甚至三個或者是更多目標函數

01:11:42.000 --> 01:11:44.000
OK

01:11:44.000 --> 01:11:46.000
那這有幾個想法

01:11:46.000 --> 01:11:48.000
第一個想法是

01:11:48.000 --> 01:11:50.000
因為當然可以去把這個

01:11:50.000 --> 01:11:52.000
考慮的這個目標函數有六個

01:11:52.000 --> 01:11:54.000
那當然可以去做一個

01:11:54.000 --> 01:11:56.000
C6取2等於15

01:11:56.000 --> 01:11:58.000
這個OK

01:11:58.000 --> 01:12:00.000
那只是說有沒有這樣的必要性

01:12:00.000 --> 01:12:02.000
因為其實

01:12:02.000 --> 01:12:04.000
有些目標函數之間

01:12:06.000 --> 01:12:08.000
該怎麼說呢

01:12:08.000 --> 01:12:10.000
就是在做分析的時候就發現說

01:12:10.000 --> 01:12:12.000
這個higher moment和lower moment

01:12:12.000 --> 01:12:14.000
的這個目標函數

01:12:14.000 --> 01:12:16.000
它的關係是

01:12:16.000 --> 01:12:18.000
明顯強的

01:12:18.000 --> 01:12:20.000
所以這樣子的話我們在做

01:12:20.000 --> 01:12:22.000
回到analysis

01:12:22.000 --> 01:12:24.000
或是說想要去找一個

01:12:24.000 --> 01:12:26.000
rope sum的時候其實就沒有必要

01:12:26.000 --> 01:12:28.000
再去探討太多

01:12:28.000 --> 01:12:30.000
所謂2個higher moment

01:12:30.000 --> 01:12:32.000
或是2個lower moment的這個

01:12:32.000 --> 01:12:34.000
目標函數組合

01:12:34.000 --> 01:12:36.000
所以當然實際上是可以做的

01:12:36.000 --> 01:12:38.000
那數學上也都做得到

01:12:38.000 --> 01:12:40.000
但只是說在

01:12:40.000 --> 01:12:42.000
在formulation的時候

01:12:42.000 --> 01:12:44.000
似乎沒有這樣的一個必要性

01:12:44.000 --> 01:12:46.000
那再來就是在更多的

01:12:46.000 --> 01:12:48.000
目標函數那當然是OK的

01:12:48.000 --> 01:12:50.000
只是說這樣子在

01:12:50.000 --> 01:12:52.000
在這個表示這個

01:12:52.000 --> 01:12:54.000
競爭關係的時候可能就要變成

01:12:54.000 --> 01:12:56.000
plato surface

01:12:56.000 --> 01:12:58.000
或甚至更高維是無法表示的

01:12:58.000 --> 01:13:00.000
那我相信數學上

01:13:00.000 --> 01:13:02.000
可以做,那只是說我們沒有

01:13:02.000 --> 01:13:04.000
去做這樣的一個

01:13:04.000 --> 01:13:06.000
事情,那加上說

01:13:06.000 --> 01:13:08.000
通常在

01:13:08.000 --> 01:13:10.000
去探討這個

01:13:10.000 --> 01:13:12.000
最佳,這個

01:13:12.000 --> 01:13:14.000
最佳化的時候

01:13:14.000 --> 01:13:16.000
大概都只會去看到

01:13:16.000 --> 01:13:18.000
很多2個目標函數

01:13:18.000 --> 01:13:20.000
大概目前很少看到有文獻

01:13:20.000 --> 01:13:22.000
是會把目標函數

01:13:22.000 --> 01:13:24.000
看到3個以上的,那另外一個

01:13:24.000 --> 01:13:26.000
想法可能是因為

01:13:26.000 --> 01:13:28.000
這些都是產品SSD的一些

01:13:28.000 --> 01:13:30.000
統計特性,所以大概

01:13:30.000 --> 01:13:32.000
2個特性就可以還蠻

01:13:32.000 --> 01:13:34.000
蠻明確的去描述

01:13:34.000 --> 01:13:36.000
這個

01:13:36.000 --> 01:13:38.000
做產品的一些好壞

01:13:38.000 --> 01:13:40.000
了解

01:13:40.000 --> 01:13:42.000
所以可能在絕大多數

01:13:42.000 --> 01:13:44.000
你的case裡面

01:13:44.000 --> 01:13:46.000
可能是你們在做之前

01:13:46.000 --> 01:13:48.000
你們大概就知道說

01:13:48.000 --> 01:13:50.000
可能幾乎都已經知道說

01:13:50.000 --> 01:13:52.000
怎麼講,該

01:13:52.000 --> 01:13:54.000
該取哪2個

01:13:54.000 --> 01:13:56.000
就是怎麼講

01:13:56.000 --> 01:13:58.000
可能有哪2個

01:13:58.000 --> 01:14:00.000
就是目標函數之間

01:14:00.000 --> 01:14:02.000
是比較有強烈的

01:14:02.000 --> 01:14:04.000
抗衡的關係,然後哪些的關係

01:14:04.000 --> 01:14:06.000
對,其實在

01:14:06.000 --> 01:14:08.000
一些比較前面的

01:14:08.000 --> 01:14:10.000
研究是說會發現

01:14:10.000 --> 01:14:12.000
這個比方說

01:14:12.000 --> 01:14:14.000
今天的目標函數

01:14:14.000 --> 01:14:16.000
這個moment是偏大的

01:14:16.000 --> 01:14:18.000
它的軌跡就會變成

01:14:18.000 --> 01:14:20.000
growth rate在後期偏大

01:14:20.000 --> 01:14:22.000
那反之就是如果今天的目標函數

01:14:22.000 --> 01:14:24.000
是以

01:14:24.000 --> 01:14:26.000
所謂的小moment的組成

01:14:26.000 --> 01:14:28.000
它的軌跡是growth rate

01:14:28.000 --> 01:14:30.000
前期偏大,那光是

01:14:30.000 --> 01:14:32.000
這樣子就會

01:14:32.000 --> 01:14:34.000
有一些這個想法

01:14:34.000 --> 01:14:36.000
就是說,那會不會

01:14:36.000 --> 01:14:38.000
前期偏大

01:14:38.000 --> 01:14:40.000
後期偏大,它的tradeoff

01:14:40.000 --> 01:14:42.000
就是constant

01:14:42.000 --> 01:14:44.000
所以其實在

01:14:44.000 --> 01:14:46.000
比較早期的一些研究就有這樣的

01:14:46.000 --> 01:14:48.000
一個想法了

01:14:48.000 --> 01:14:50.000
但之所以早期的研究

01:14:50.000 --> 01:14:52.000
比較不能像這樣子去

01:14:52.000 --> 01:14:54.000
畫protofront

01:14:54.000 --> 01:14:56.000
的一個理由是因為

01:14:56.000 --> 01:14:58.000
其實像剛剛的這樣的

01:14:58.000 --> 01:15:00.000
講法,我定一個alpha

01:15:00.000 --> 01:15:02.000
就要解一次這個

01:15:02.000 --> 01:15:04.000
最佳化問題

01:15:04.000 --> 01:15:06.000
那如果是用一些

01:15:06.000 --> 01:15:08.000
比較不一樣的

01:15:08.000 --> 01:15:10.000
所謂求解方法的話

01:15:10.000 --> 01:15:12.000
它可能就會牽扯到一些

01:15:12.000 --> 01:15:14.000
我把這個input variable

01:15:14.000 --> 01:15:16.000
離散化,那

01:15:16.000 --> 01:15:18.000
這樣子去做iterative的話

01:15:18.000 --> 01:15:20.000
我光是求出一個點,我可能就

01:15:20.000 --> 01:15:22.000
dead bounce了

01:15:22.000 --> 01:15:24.000
那更別提說我要去把一個完整的protofront

01:15:24.000 --> 01:15:26.000
畫出來,還要去找這個

01:15:26.000 --> 01:15:28.000
need point,所以

01:15:28.000 --> 01:15:30.000
早期的研究是有這樣的想法

01:15:30.000 --> 01:15:32.000
但是礙於

01:15:32.000 --> 01:15:34.000
計算負擔

01:15:34.000 --> 01:15:36.000
所以早期沒有去

01:15:36.000 --> 01:15:38.000
做,直到後來

01:15:38.000 --> 01:15:40.000
去把這個

01:15:40.000 --> 01:15:42.000
德國學者的

01:15:42.000 --> 01:15:44.000
近似解析的方式

01:15:44.000 --> 01:15:46.000
把它導進來以後

01:15:46.000 --> 01:15:48.000
我們才發現說,好那我們可以

01:15:48.000 --> 01:15:50.000
很快速的去

01:15:50.000 --> 01:15:52.000
定量的定性的去描述

01:15:52.000 --> 01:15:54.000
這樣的一個tradeoff

01:15:56.000 --> 01:15:58.000
單純好奇

01:15:58.000 --> 01:16:00.000
你們有大概知道說你們今天

01:16:02.000 --> 01:16:04.000
計算的成本跟

01:16:04.000 --> 01:16:06.000
怎麼講

01:16:06.000 --> 01:16:08.000
跟那個目標函數的

01:16:08.000 --> 01:16:10.000
個數的時間複雜度

01:16:10.000 --> 01:16:12.000
大概是多少嗎?

01:16:12.000 --> 01:16:14.000
哇,這個

01:16:14.000 --> 01:16:16.000
平方之類的

01:16:16.000 --> 01:16:18.000
這個可能不太確定

01:16:18.000 --> 01:16:20.000
但我可以確定的是

01:16:20.000 --> 01:16:22.000
如果今天是像

01:16:22.000 --> 01:16:24.000
這樣的一個情況的話

01:16:24.000 --> 01:16:26.000
因為這個投影片的

01:16:26.000 --> 01:16:28.000
時間限制

01:16:28.000 --> 01:16:30.000
所以沒把它秀出來

01:16:30.000 --> 01:16:32.000
但其實這個

01:16:32.000 --> 01:16:34.000
最佳的這一個

01:16:34.000 --> 01:16:36.000
所謂

01:16:36.000 --> 01:16:38.000
所謂的

01:16:38.000 --> 01:16:40.000
最佳的這個

01:16:40.000 --> 01:16:42.000
這個

01:16:42.000 --> 01:16:44.000
解析解是可以被

01:16:44.000 --> 01:16:46.000
寫出來的,只要在一些

01:16:46.000 --> 01:16:48.000
這個假設之下

01:16:48.000 --> 01:16:50.000
是可以把這個解析解寫出來的

01:16:50.000 --> 01:16:52.000
那解析解寫出來的話

01:16:52.000 --> 01:16:54.000
那就只是積分OD

01:16:54.000 --> 01:16:56.000
的一些問題

01:16:56.000 --> 01:16:58.000
而且所謂的

01:16:58.000 --> 01:17:00.000
積分是指

01:17:00.000 --> 01:17:02.000
積分這個Initial Value Problem

01:17:02.000 --> 01:17:04.000
所以就會變成一個很單純的

01:17:04.000 --> 01:17:06.000
這個比方說

01:17:06.000 --> 01:17:08.000
用一些這個

01:17:08.000 --> 01:17:10.000
Force Order的一些sober就可以解出來的

01:17:10.000 --> 01:17:12.000
一些問題

01:17:12.000 --> 01:17:14.000
所以就是這個方法就是

01:17:14.000 --> 01:17:16.000
競爭力很高的一個

01:17:16.000 --> 01:17:18.000
理由

01:17:18.000 --> 01:17:20.000
了解,感謝

01:17:30.000 --> 01:17:32.000
還有有人有

01:17:32.000 --> 01:17:34.000
針對演講

01:17:34.000 --> 01:17:36.000
有什麼問題嗎

01:17:42.000 --> 01:17:44.000
我剛剛其實

01:17:44.000 --> 01:17:46.000
就是針對剛剛的問題我其實有

01:17:46.000 --> 01:17:48.000
就是

01:17:48.000 --> 01:17:50.000
可能一點

01:17:50.000 --> 01:17:52.000
想法就是說像我們

01:17:52.000 --> 01:17:54.000
實驗室有學長他們可能

01:17:54.000 --> 01:17:56.000
當然我們不是做程控領域,我們是做分子模擬

01:17:56.000 --> 01:17:58.000
模擬卡羅之類的

01:17:58.000 --> 01:18:00.000
但那個像我們實驗室

01:18:00.000 --> 01:18:02.000
就有學長他可能就是

01:18:02.000 --> 01:18:04.000
比如說今天他要去

01:18:04.000 --> 01:18:06.000
參數化某個

01:18:06.000 --> 01:18:08.000
某些分子的一些

01:18:08.000 --> 01:18:10.000
立場的一些參數這樣子

01:18:10.000 --> 01:18:12.000
那他參數化的過程中

01:18:12.000 --> 01:18:14.000
他要去就有點像是

01:18:14.000 --> 01:18:16.000
今天假設對於某一種

01:18:16.000 --> 01:18:18.000
某一種分子裡面某一顆原子

01:18:18.000 --> 01:18:20.000
他可能

01:18:20.000 --> 01:18:22.000
要去fit

01:18:22.000 --> 01:18:24.000
他的那個Lennard-Jones

01:18:24.000 --> 01:18:26.000
的那兩個參數

01:18:26.000 --> 01:18:28.000
那他可能就是

01:18:28.000 --> 01:18:30.000
他可能有四種

01:18:30.000 --> 01:18:32.000
四個就是

01:18:32.000 --> 01:18:34.000
experimental data

01:18:34.000 --> 01:18:36.000
他可以拿下去fit這樣子

01:18:36.000 --> 01:18:38.000
然後因為當時可能也

01:18:38.000 --> 01:18:40.000
不知道說四個裡面到底要

01:18:40.000 --> 01:18:42.000
四個全上還是四個取三個

01:18:42.000 --> 01:18:44.000
還是四個取兩個,然後取兩個又要取哪兩個

01:18:44.000 --> 01:18:46.000
之類的,所以這就好像

01:18:46.000 --> 01:18:48.000
也有點

01:18:48.000 --> 01:18:50.000
那個就是多

01:18:50.000 --> 01:18:52.000
目標函數的意味

01:18:52.000 --> 01:18:54.000
我不太確定這可能

01:18:54.000 --> 01:18:56.000
跟你的

01:18:56.000 --> 01:18:58.000
就是做法未必

01:18:58.000 --> 01:19:00.000
怎麼講,未必可以直接套用

01:19:00.000 --> 01:19:02.000
在你的領域,但是

01:19:02.000 --> 01:19:04.000
讓我聯想到就是當時我們學長

01:19:04.000 --> 01:19:06.000
是用Bayesian inference

01:19:06.000 --> 01:19:08.000
他可能就是比如說

01:19:08.000 --> 01:19:10.000
他Bayesian inference他裡面有一個重要的東西

01:19:10.000 --> 01:19:12.000
就是Base factor

01:19:12.000 --> 01:19:14.000
然後他那個Base factor基本上就是說

01:19:14.000 --> 01:19:16.000
可以去估計說今天加入

01:19:16.000 --> 01:19:18.000
這個函數之後,他的精準度

01:19:18.000 --> 01:19:20.000
多了多少這樣子

01:19:20.000 --> 01:19:22.000
那或者是有時候

01:19:22.000 --> 01:19:24.000
那個函數他可能反而就是

01:19:24.000 --> 01:19:26.000
結果不如預期之類

01:19:26.000 --> 01:19:28.000
所以他就有點是透過這種

01:19:28.000 --> 01:19:30.000
比較Base factor的

01:19:30.000 --> 01:19:32.000
的手段

01:19:32.000 --> 01:19:34.000
然後去判斷說哪個參數應該被考慮

01:19:34.000 --> 01:19:36.000
進來,然後哪個參數不該被

01:19:36.000 --> 01:19:38.000
考慮進來這樣子

01:19:38.000 --> 01:19:40.000
不過這我覺得因為多目標函數

01:19:40.000 --> 01:19:42.000
就我剛剛會好奇時間複雜度

01:19:42.000 --> 01:19:44.000
是因為就是有時候可能

01:19:44.000 --> 01:19:46.000
思考就是高維的問題的時候

01:19:46.000 --> 01:19:48.000
會有就是

01:19:48.000 --> 01:19:50.000
他可能那個

01:19:50.000 --> 01:19:52.000
怎麼講,計算成本並不是線性增加

01:19:52.000 --> 01:19:54.000
所以就會變成

01:19:54.000 --> 01:19:56.000
學長那個方法

01:19:56.000 --> 01:19:58.000
大概不是每一種事情都適用

01:19:58.000 --> 01:20:00.000
因為有時候可能光是要

01:20:00.000 --> 01:20:02.000
optimize那種東西就已經成本太高了

01:20:02.000 --> 01:20:04.000
那假設今天考慮到兩個

01:20:04.000 --> 01:20:06.000
參數就可以做到90%準確的話

01:20:06.000 --> 01:20:08.000
那其實做到三個或四個目標函數

01:20:08.000 --> 01:20:10.000
大概也是

01:20:10.000 --> 01:20:12.000
有點沒那麼多

01:20:12.000 --> 01:20:14.000
意義這樣子

01:20:14.000 --> 01:20:16.000
其實你講的這件事情剛好

01:20:16.000 --> 01:20:18.000
最近我們也在碰到這樣的問題

01:20:18.000 --> 01:20:20.000
跟這個

01:20:20.000 --> 01:20:22.000
怎麼講

01:20:22.000 --> 01:20:24.000
跟這個題目可能比較無關

01:20:24.000 --> 01:20:26.000
就是說像我們在做一些

01:20:26.000 --> 01:20:28.000
產學

01:20:28.000 --> 01:20:30.000
合作案的時候常常會需要去

01:20:30.000 --> 01:20:32.000
fitting一些就是現場的一個

01:20:32.000 --> 01:20:34.000
data

01:20:34.000 --> 01:20:36.000
那比方說

01:20:36.000 --> 01:20:38.000
像今天有一個

01:20:38.000 --> 01:20:40.000
學弟

01:20:40.000 --> 01:20:42.000
之前是在做一個高分子

01:20:42.000 --> 01:20:44.000
裂解爐的一個

01:20:44.000 --> 01:20:46.000
project

01:20:46.000 --> 01:20:48.000
那高分子裂解反應的

01:20:48.000 --> 01:20:50.000
動力室就很複雜

01:20:50.000 --> 01:20:52.000
大概就可能

01:20:52.000 --> 01:20:54.000
光動力室就二三十條

01:20:54.000 --> 01:20:56.000
那更別說每條動力室還有它各自的parameter

01:20:56.000 --> 01:20:58.000
那所以當時

01:20:58.000 --> 01:21:00.000
大家也是在想說

01:21:00.000 --> 01:21:02.000
那這樣子要怎麼樣去

01:21:02.000 --> 01:21:04.000
找說怎麼樣去

01:21:04.000 --> 01:21:06.000
做fitting才可以讓這個

01:21:08.000 --> 01:21:10.000
建出來的model

01:21:10.000 --> 01:21:12.000
不管是用AspenPlus或是用別的東西來建model

01:21:12.000 --> 01:21:14.000
的這個model

01:21:14.000 --> 01:21:16.000
都是夠準確的

01:21:16.000 --> 01:21:18.000
那當時我們也確實

01:21:18.000 --> 01:21:20.000
有個學弟確實是用了一個叫做

01:21:20.000 --> 01:21:22.000
Bayesian

01:21:22.000 --> 01:21:24.000
Bayesian Optimization的一個

01:21:24.000 --> 01:21:26.000
套件在Python裡面用的

01:21:26.000 --> 01:21:28.000
那不知道是不是你剛剛提到的

01:21:28.000 --> 01:21:30.000
這一個東西

01:21:30.000 --> 01:21:32.000
但我們

01:21:32.000 --> 01:21:34.000
有一些project在

01:21:34.000 --> 01:21:36.000
在這樣子的情況之下

01:21:36.000 --> 01:21:38.000
是有透過Bayesian

01:21:38.000 --> 01:21:40.000
Bayesian Optimization

01:21:40.000 --> 01:21:42.000
的方法來取得一些成功的

01:21:42.000 --> 01:21:44.000
我覺得應該是

01:21:44.000 --> 01:21:46.000
我沒有用過Python那個套件

01:21:46.000 --> 01:21:48.000
不過我猜應該是跟

01:21:48.000 --> 01:21:50.000
就是理論基礎上應該是

01:21:50.000 --> 01:21:52.000
差不多的

01:21:52.000 --> 01:21:54.000
就是因為有一些就是

01:21:54.000 --> 01:21:56.000
像我現在自己也碰到類似的問題

01:21:56.000 --> 01:21:58.000
就是像我現在在

01:21:58.000 --> 01:22:00.000
建一個

01:22:00.000 --> 01:22:02.000
CDR的一個model

01:22:02.000 --> 01:22:04.000
那這個model的問題

01:22:04.000 --> 01:22:06.000
是用Aspen來算的話

01:22:06.000 --> 01:22:08.000
每算一輪要算

01:22:08.000 --> 01:22:10.000
蠻久的

01:22:10.000 --> 01:22:12.000
那大概一輪要算

01:22:12.000 --> 01:22:14.000
大概

01:22:14.000 --> 01:22:16.000
一分半其實不算太久

01:22:18.000 --> 01:22:20.000
但因為這個

01:22:20.000 --> 01:22:22.000
需要fitting的這個

01:22:22.000 --> 01:22:24.000
組數很多

01:22:24.000 --> 01:22:26.000
那電腦的效能又有限

01:22:26.000 --> 01:22:28.000
然後

01:22:28.000 --> 01:22:30.000
也不知道怎樣的parameter

01:22:30.000 --> 01:22:32.000
組合會最好的

01:22:32.000 --> 01:22:34.000
所以現在也在試著說

01:22:34.000 --> 01:22:36.000
看有沒有辦法去

01:22:36.000 --> 01:22:38.000
找出一些比較好的一個fitting的方法

01:22:38.000 --> 01:22:40.000
因為它的

01:22:40.000 --> 01:22:42.000
不管是可以調的參數

01:22:42.000 --> 01:22:44.000
或者是一些

01:22:44.000 --> 01:22:46.000
coherent data的一些uncertainty

01:22:46.000 --> 01:22:48.000
其實都蠻大的

01:22:48.000 --> 01:22:50.000
所以目前也是我一個

01:22:50.000 --> 01:22:52.000
蠻頭痛的一件事情

01:22:52.000 --> 01:22:54.000
那聽起來好像

01:22:54.000 --> 01:22:56.000
偉哲剛剛講的這樣的一個

01:22:56.000 --> 01:22:58.000
想法也可以被套用在

01:22:58.000 --> 01:23:00.000
像我們現在

01:23:00.000 --> 01:23:02.000
合作的一些案子裡面

01:23:02.000 --> 01:23:04.000
我沒有

01:23:04.000 --> 01:23:06.000
要不要考慮轉machine learning

01:23:08.000 --> 01:23:10.000
欸

01:23:10.000 --> 01:23:12.000
沒有啦

01:23:12.000 --> 01:23:14.000
fitting只是你一個

01:23:14.000 --> 01:23:16.000
你的工作一個part

01:23:16.000 --> 01:23:18.000
我只是開玩笑

01:23:18.000 --> 01:23:20.000
因為現在大家都在machine learning

01:23:20.000 --> 01:23:22.000
其實前幾

01:23:22.000 --> 01:23:24.000
大概兩三年前開始

01:23:24.000 --> 01:23:26.000
我們跟

01:23:26.000 --> 01:23:28.000
台塑集團

01:23:28.000 --> 01:23:30.000
的一些案子

01:23:30.000 --> 01:23:32.000
就在做這些

01:23:32.000 --> 01:23:34.000
machine learning的事情

01:23:34.000 --> 01:23:36.000
因為台塑集團他們大概在

01:23:36.000 --> 01:23:38.000
兩年前總裁提出了

01:23:38.000 --> 01:23:40.000
這個

01:23:40.000 --> 01:23:42.000
AI時代的一個這個想法

01:23:42.000 --> 01:23:44.000
所以他們就要求

01:23:44.000 --> 01:23:46.000
每一個這個

01:23:46.000 --> 01:23:48.000
部門都提一個

01:23:48.000 --> 01:23:50.000
這個改善案子

01:23:50.000 --> 01:23:52.000
那都要和AI扯上關係

01:23:52.000 --> 01:23:54.000
然後這個案子的好壞

01:23:54.000 --> 01:23:56.000
直接影響年終考期跟分紅

01:23:56.000 --> 01:23:58.000
所以當時就有很多

01:23:58.000 --> 01:24:00.000
這麼硬?

01:24:00.000 --> 01:24:02.000
對,這麼硬,所以當時的結果就是

01:24:02.000 --> 01:24:04.000
廠商就

01:24:04.000 --> 01:24:06.000
投報紙的時候就來

01:24:06.000 --> 01:24:08.000
找台大台科大

01:24:08.000 --> 01:24:10.000
說你們會不會一些這樣的一個東西

01:24:10.000 --> 01:24:12.000
那當時我們其實

01:24:12.000 --> 01:24:14.000
也不是很熟,所以甚至我們當時

01:24:14.000 --> 01:24:16.000
還跑去找了氣管系

01:24:16.000 --> 01:24:18.000
做一些那種商業分析的團隊

01:24:18.000 --> 01:24:20.000
來做這樣的案子

01:24:20.000 --> 01:24:22.000
就把一個案子搞得變成一個

01:24:24.000 --> 01:24:26.000
化足化工氣管

01:24:26.000 --> 01:24:28.000
跟實際工廠的

01:24:28.000 --> 01:24:30.000
一個團隊,就弄得浩浩蕩蕩的

01:24:30.000 --> 01:24:32.000
對,但是

01:24:32.000 --> 01:24:34.000
就有發現因為

01:24:34.000 --> 01:24:36.000
現場表典數據的一些

01:24:36.000 --> 01:24:38.000
缺失或者是一些

01:24:38.000 --> 01:24:40.000
不確定性或是一些

01:24:40.000 --> 01:24:42.000
表典損壞的一些狀況

01:24:42.000 --> 01:24:44.000
所以最後結果其實

01:24:44.000 --> 01:24:46.000
目前來講

01:24:46.000 --> 01:24:48.000
能做的事情太有限了

01:24:50.000 --> 01:24:52.000
就是在一些

01:24:52.000 --> 01:24:54.000
經驗裡面就是

01:24:54.000 --> 01:24:56.000
可以做到的東西都還滿有限的

01:24:56.000 --> 01:24:58.000
就是這個

01:24:58.000 --> 01:25:00.000
成效沒有很好

01:25:00.000 --> 01:25:02.000
但也不知道說

01:25:02.000 --> 01:25:04.000
是不是因為我們

01:25:04.000 --> 01:25:06.000
這個道行還不夠高

01:25:06.000 --> 01:25:08.000
不知道是不是其實

01:25:08.000 --> 01:25:10.000
在一些比較其他國家

01:25:10.000 --> 01:25:12.000
這確實也是在發展的

01:25:12.000 --> 01:25:14.000
階段,因為

01:25:14.000 --> 01:25:16.000
這個東西

01:25:16.000 --> 01:25:18.000
最後還是要回歸物理

01:25:18.000 --> 01:25:20.000
最後你要怎麼跟物理去連結

01:25:20.000 --> 01:25:22.000
其實也是

01:25:22.000 --> 01:25:24.000
大家一直在努力的課題

01:25:26.000 --> 01:25:28.000
加上因為

01:25:28.000 --> 01:25:30.000
data-driven的model

01:25:30.000 --> 01:25:32.000
它其實是不具物理意義的

01:25:32.000 --> 01:25:34.000
所以就變成

01:25:34.000 --> 01:25:36.000
使用上的限制很多

01:25:36.000 --> 01:25:38.000
比方說你今天想要做一個

01:25:38.000 --> 01:25:40.000
現場節能的

01:25:40.000 --> 01:25:42.000
NG saving analysis

01:25:42.000 --> 01:25:44.000
會變成說

01:25:44.000 --> 01:25:46.000
你不可能去用

01:25:46.000 --> 01:25:48.000
data-driven的model

01:25:48.000 --> 01:25:50.000
因為它會直接做一個

01:25:50.000 --> 01:25:52.000
所謂對現有的操作條件

01:25:52.000 --> 01:25:54.000
做一些破壞性的一些改變

01:25:54.000 --> 01:25:56.000
那這樣會直接

01:25:56.000 --> 01:25:58.000
讓這個data-based的model

01:25:58.000 --> 01:26:00.000
不能用

01:26:00.000 --> 01:26:02.000
難忽一些常控也蠻困難的

01:26:04.000 --> 01:26:06.000
因為你在

01:26:06.000 --> 01:26:08.000
做一個

01:26:08.000 --> 01:26:10.000
machinery它沒有被chain

01:26:10.000 --> 01:26:12.000
的一件事情

01:26:12.000 --> 01:26:14.000
當然就會造成毀滅性的結果

01:26:14.000 --> 01:26:16.000
所以就變成說

01:26:16.000 --> 01:26:18.000
對於

01:26:18.000 --> 01:26:20.000
我們接到的這些案子

01:26:20.000 --> 01:26:22.000
可以使用的

01:26:22.000 --> 01:26:24.000
程度其實是蠻受限的

01:26:24.000 --> 01:26:26.000
那雖然他們現在

01:26:26.000 --> 01:26:28.000
還在

01:26:28.000 --> 01:26:30.000
繼續所謂的AI時代

01:26:30.000 --> 01:26:32.000
所以到最後變成

01:26:32.000 --> 01:26:34.000
有一些案子會

01:26:36.000 --> 01:26:38.000
我們

01:26:38.000 --> 01:26:40.000
所謂

01:26:40.000 --> 01:26:42.000
會

01:26:46.000 --> 01:26:48.000
網路是不是不太好

01:26:48.000 --> 01:26:50.000
對 它是不是又斷了

01:26:50.000 --> 01:26:52.000
對

01:26:54.000 --> 01:26:56.000
那

01:26:58.000 --> 01:27:00.000
欸浩仁浩仁你這邊有點斷

01:27:00.000 --> 01:27:02.000
我不確定你現在聽不聽得到

01:27:02.000 --> 01:27:04.000
公認的AI但我們應該用AI來包裝它

01:27:04.000 --> 01:27:06.000
喔

01:27:12.000 --> 01:27:14.000
喂

01:27:14.000 --> 01:27:16.000
喂

01:27:16.000 --> 01:27:18.000
喂 你剛剛幾乎全部

01:27:18.000 --> 01:27:20.000
斷掉了

01:27:20.000 --> 01:27:22.000
對 你剛剛幾乎全部斷掉了

01:27:24.000 --> 01:27:26.000
喔 好像還沒回來

01:27:26.000 --> 01:27:28.000
OK

01:27:30.000 --> 01:27:32.000
就是會有一些這個

01:27:32.000 --> 01:27:34.000
AI在像我們這樣的案子上面的應用

01:27:34.000 --> 01:27:36.000
還是受限還蠻大的啦

01:27:36.000 --> 01:27:38.000
對 那

01:27:38.000 --> 01:27:40.000
恩

01:27:40.000 --> 01:27:42.000
再來就是說現在變成

01:27:42.000 --> 01:27:44.000
有些案子會變成

01:27:44.000 --> 01:27:46.000
明明不是AI但我們卻硬要套

01:27:46.000 --> 01:27:48.000
AI的這個殼上去

01:27:48.000 --> 01:27:50.000
對 這是另外一個

01:27:50.000 --> 01:27:52.000
現在這種

01:27:52.000 --> 01:27:54.000
MLD有

01:27:54.000 --> 01:27:56.000
就是怎麼講 太氾濫的感覺

01:27:56.000 --> 01:27:58.000
就是

01:27:58.000 --> 01:28:00.000
好像在上面的人都覺得很簡單

01:28:00.000 --> 01:28:02.000
隨便都可以套

01:28:02.000 --> 01:28:04.000
機器學習

01:28:04.000 --> 01:28:06.000
這種量子

01:28:06.000 --> 01:28:08.000
這種名詞很酷的

01:28:08.000 --> 01:28:10.000
就很容易變得很腐爛

01:28:10.000 --> 01:28:12.000
對 就是會被

01:28:12.000 --> 01:28:14.000
神化啦這個東西

01:28:14.000 --> 01:28:16.000
對 有點太被神化

01:28:16.000 --> 01:28:18.000
因為它

01:28:18.000 --> 01:28:20.000
最後它是Data-driven

01:28:20.000 --> 01:28:22.000
就回歸不了

01:28:22.000 --> 01:28:24.000
沒辦法reasonable

01:28:24.000 --> 01:28:26.000
然後回歸物理的話

01:28:26.000 --> 01:28:28.000
還是有侷限性

01:28:28.000 --> 01:28:30.000
非常大的侷限性

01:28:30.000 --> 01:28:32.000
對對對

01:28:32.000 --> 01:28:34.000
那當然這個就跟今天的

01:28:34.000 --> 01:28:36.000
主題關係比較不大

01:28:36.000 --> 01:28:38.000
但它就是的確我們最近

01:28:38.000 --> 01:28:40.000
有碰到的一些

01:28:40.000 --> 01:28:42.000
這個問題

01:28:50.000 --> 01:28:52.000
那還有

01:28:52.000 --> 01:28:54.000
其他人有問題嗎

01:29:04.000 --> 01:29:06.000
OK

01:29:06.000 --> 01:29:08.000
那如果沒有的話我們可能

01:29:08.000 --> 01:29:10.000
時間或許也差不多了

01:29:10.000 --> 01:29:12.000
那今天謝謝

01:29:12.000 --> 01:29:14.000
浩仁的演講

01:29:14.000 --> 01:29:16.000
好 謝謝大家好

01:29:16.000 --> 01:29:18.000
大家可以

01:29:18.000 --> 01:29:20.000
好久沒有聽到這個靈異的東西

01:29:20.000 --> 01:29:22.000
OK

01:29:22.000 --> 01:29:24.000
差不多

01:29:24.000 --> 01:29:26.000
大家可以去吃宵夜或吃午餐了

01:29:26.000 --> 01:29:28.000
對

01:29:28.000 --> 01:29:30.000
如果有興趣想要報演講的

01:29:30.000 --> 01:29:32.000
我們最近在徵集下半年的演講

01:29:32.000 --> 01:29:34.000
有興趣的可以

01:29:34.000 --> 01:29:36.000
報名TERA的會員

01:29:36.000 --> 01:29:38.000
然後之後我們會有

01:29:38.000 --> 01:29:40.000
相關消息釋出

01:29:40.000 --> 01:29:42.000
就是可以再填寫表單

01:29:42.000 --> 01:29:44.000
那今天就謝謝大家 大家晚安 大家早安

01:29:44.000 --> 01:29:46.000
掰掰

01:29:46.000 --> 01:29:48.000
謝謝大家好 掰掰囉

01:29:48.000 --> 01:29:50.000
各位掰掰

01:29:50.000 --> 01:29:52.000
掰掰

01:29:52.000 --> 01:29:54.000
怎麼突然之間失聲了

01:29:54.000 --> 01:29:56.000
沒有 我就是

01:29:56.000 --> 01:29:58.000
刷一下存在感

01:30:00.000 --> 01:30:02.000
成功

