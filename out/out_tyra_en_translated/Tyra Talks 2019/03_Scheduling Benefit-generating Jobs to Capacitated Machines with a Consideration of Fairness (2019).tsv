start	end	text
0	5000	Welcome to today's Taira Talk.
5000	10000	Today is February 16, 2019.
10000	13000	Our speaker is Professor Kong Lingjie.
14000	31000	Professor Kong Lingjie is a Vice-Professor of Information Management at National Taiwan University.
31000	35000	He was a Ph.D. student at Berkley University in the U.S.,
35000	40000	and a master's and master's student at National Taiwan University.
40000	44000	His research focuses on competition theory and professional research,
44000	49000	and discusses decision-making in the business sector.
49000	53000	We are delighted to welcome Professor Kong Lingjie.
53000	58000	Let's welcome Professor Kong Lingjie.
58000	66000	Let's give a round of applause to welcome Professor Kong Lingjie.
66000	70000	Thank you all.
70000	72000	Can I start now?
72000	74000	Yes, you can.
74000	80000	Thank you all for coming to this talk.
80000	90000	This is a rare opportunity for me.
90000	94000	When I was a Ph.D. student or when I started teaching,
94000	96000	I would like to listen to all kinds of strange talks.
96000	100000	The so-called strange talk is different from my own field.
100000	103000	From a certain perspective, it is very necessary for people like us.
103000	106000	Because we study information management.
106000	109000	Let me briefly introduce information management.
109000	112000	We study information technology at the Department of Management.
112000	118000	We want to use information technology to see if we can do something in the field of management.
118000	124000	Basically, it is a cross-field field.
124000	127000	So we often listen to all kinds of other talks,
127000	130000	and we can get a lot of inspiration.
130000	132000	Sometimes it doesn't inspire at all, but it doesn't matter.
132000	134000	Just treat it as a broad text.
134000	136000	So when I was a Ph.D. student,
136000	139000	Jason often introduced me to some physics-related knowledge.
139000	141000	Although I almost forgot everything,
141000	145000	I still feel very happy about this exchange.
145000	150000	Today, I will use this opportunity to introduce my research field to you.
150000	154000	This is of course one of the studies, but I personally quite like it.
154000	159000	It was done by a student of my previous master's class named Liu Qiwei.
159000	161000	This is actually his master's thesis.
161000	164000	Of course, we did it together in the process.
165000	171000	As a result, I think this study is still quite good in terms of academic results.
171000	177000	So a Ph.D. student from NTU or a Ph.D. student who is serious can really achieve quite good results.
177000	181000	Okay, what is this study about?
181000	186000	The theme of this study is called Job Allocation with a Consideration of Fairness.
186000	190000	It is a work allocation problem that considers fairness.
190000	193000	Let's take a look at what this is about.
193000	199000	Today, when we want to do job allocation, we usually have to consider a lot of issues.
199000	204000	For example, let's assume that the job is a toy car.
204000	206000	In general, I am a worker.
206000	208000	I make a toy car.
208000	211000	If I make a toy car that takes two hours,
211000	213000	I sell it to the buyer, the consumer.
213000	215000	The buyer will pay me.
215000	220000	So the job is to spend time to make something, sell it, and change the money.
220000	222000	It's that simple.
222000	230000	Today, the reason why we started to discuss this topic was probably the year I came back to Taiwan.
230000	236000	At that time, I met a company in Zhukou.
236000	239000	There are five or six supply factories.
239000	242000	There are many factories in Nankou and China.
242000	244000	Sorry, it's not a supply factory.
244000	246000	It's a company that makes LED chips.
246000	251000	The problem with this company is that its customers will place orders with it.
251000	254000	For example, this order says I want 100 toy cars.
254000	257000	Or how many LED chips do I want?
257000	263000	The company's owner is responsible for allocating work to each factory.
263000	269000	When allocating work, there will be a so-called fairness issue.
269000	274000	Every factory wants to fight for the so-called better order.
274000	277000	Some orders have a work load.
277000	280000	That is, you have to spend a lot of time.
280000	285000	Benefit is that the cost-effectiveness or the degree of easy-to-earn money is very low.
285000	288000	For example, some relatively traditional things are produced.
288000	293000	This kind of profit is small and time-consuming to do.
293000	295000	Everyone doesn't like this.
295000	298000	Or, for example, the yield rate is very low when doing it.
298000	300000	It's difficult and everyone doesn't like it.
300000	306000	So these factory managers are all going to be reviewed in the end.
306000	309000	Then they will really happen.
309000	313000	They will go to the head of the company and scold him.
313000	317000	Why is this order divided to others and not to me?
317000	326000	So from that time on, I realized that when this work allocation happened between people.
326000	329000	He did encounter some interesting issues.
329000	332000	It is not encountered in traditional work allocation.
332000	335000	Traditional work allocation is usually at the beginning.
335000	338000	Whether it's an employee or a public person.
338000	341000	They are talking about this work allocation.
341000	346000	It's more often that I assign the work to the machine or the CPU.
346000	350000	Then they naturally don't have any fair or unfair questions.
350000	352000	Does everyone listen to you?
352000	356000	When you assign work to people, people will definitely care about fairness.
357000	360000	In addition to caring about their own workload and their own revenge.
360000	363000	I care about how I compare with others.
363000	365000	It's probably like this.
365000	368000	That's why everybody wants to earn more money.
368000	372000	So in the food problem just now.
372000	375000	Motivate us to do this study.
375000	381000	After that, we slowly simplified it into the following topics.
381000	384000	In other words, we will have a lot of work.
384000	387000	Every work will have the time it takes.
387000	390000	And how much money can be made after this work.
390000	393000	For example, it takes two hours to make this small car.
393000	395000	Then you can make so much money.
395000	397000	It takes 2.5 hours to make this medium car.
397000	398000	You can make more money.
398000	400000	The big car is the most advanced.
400000	402000	It takes 4.5 hours to make the most money.
402000	405000	So there are all kinds of work.
405000	406000	Some are more difficult to do.
406000	408000	Some make more money.
408000	410000	Then we have a lot of so-called factories.
410000	417000	Their capacity is limited.
417000	420000	You can't give all the work to the same factory.
420000	422000	So in this problem.
422000	424000	We want to do work allocation.
424000	426000	Then you might think.
426000	428000	Is there any other situation?
428000	430000	I also want to do this kind of work allocation.
430000	432000	In fact, there are quite a few.
432000	434000	Here are a few examples.
434000	437000	These examples were later seen one after another.
437000	439000	The first example is Kaohsiung Port.
439000	444000	Kaohsiung Port is a project we are discussing now.
444000	447000	Kaohsiung Port is probably like this.
447000	449000	We are talking about the so-called flood.
449000	452000	If you don't know much about flood.
452000	454000	If you are interested, you can google it.
454000	456000	Is to find out what the flood is doing.
456000	457000	Probably like this.
457000	460000	Suppose there is a boat here today.
460000	462000	This boat wants to come to Kaohsiung Port.
462000	464000	Then stop like this.
464000	466000	The route I am drawing now is Port 2.
466000	468000	This place is Port 1.
468000	470000	Port 1 is closer to the north.
470000	472000	So this is near Shanduoshang Circle.
472000	475000	This place is probably like this.
475000	477000	This one here.
477000	479000	Is a miracle that everyone may have been to.
479000	481000	In short.
481000	483000	When this boat wants to come in now.
483000	485000	He can't come in directly.
485000	487000	He must be in this place.
487000	489000	Waiting for the flood people to go up.
489000	492000	Flood people are those who live near the pier.
492000	495000	The senior captain.
496000	499000	They used to have many years of boat.
499000	501000	The experience of running around everywhere.
501000	502000	Then later.
502000	504000	After turning into a flood person.
504000	507000	They will live near the port.
507000	509000	When there is a boat coming in.
509000	511000	Flood people will be in the open sea.
511000	513000	Will take a small boat to the open sea.
513000	515000	Temporarily take over this boat.
515000	517000	With the captain of that boat.
517000	519000	Drive the boat in.
519000	520000	The reason for the need for flood people.
520000	522000	Of course it is because of a port.
522000	524000	Local people know better.
524000	526000	So these people in Kaohsiung Port.
526000	528000	Or flood people.
528000	530000	They know more about the situation in Kaohsiung Port.
530000	532000	Then inside Kaohsiung Port.
532000	534000	The setting of this port.
534000	535000	And so on.
535000	537000	So he can bring the boat in like this.
537000	539000	It's the same to take it out.
539000	542000	Then the boat moves between the pier.
542000	543000	It's the same.
543000	545000	All need flood people.
545000	547000	In terms of the size of Kaohsiung Port.
547000	551000	Kaohsiung Port has about 40,000 boats a year.
551000	553000	Then there are 40 flood people.
553000	554000	Then they are obviously.
554000	556000	All the work in this year.
556000	560000	It's going to be divided to these 40 flood people.
560000	563000	There are more than 100 boats on average every day.
563000	565000	Then there are more than 100 boats.
565000	566000	Come in and out.
566000	568000	Scattered within 24 hours.
568000	569000	Then these flood people.
569000	571000	I'm going to finish them one by one.
571000	573000	That's it.
573000	577000	Why is there a so-called fairness problem here?
577000	578000	A boat comes in.
578000	580000	A flood person to bring.
580000	582000	Some boats are difficult to bring.
582000	584000	For example, a boat carrying oil.
584000	586000	Boat carrying dangerous goods.
586000	588000	Or a super big boat.
588000	589000	This kind of boat is difficult to bring.
589000	591000	Some boats are very simple.
591000	593000	Then it's more troublesome to get to the port.
593000	594000	It's easy to get out of the port.
594000	596000	Everyone imagines parking on the side of the road.
596000	598000	Of course, parking on the side of the road is easy to drive out of the road.
598000	600000	It's hard to park.
600000	603000	So it's obvious that your work is simple and difficult.
603000	606000	So there are different bonuses.
606000	607000	What about the flood people?
607000	610000	He gets some bonuses every time he brings a boat.
610000	612000	That's tens of thousands of dollars less.
612000	613000	Hundreds of thousands of dollars more.
613000	615000	This amount is amazing.
615000	616000	It's a lot worse.
616000	618000	So for the flood people.
618000	621000	If they want to allocate their work.
621000	625000	What they care about most is not the degree of overtime.
625000	629000	Or the relationship between me and the merchant.
629000	631000	They all consider these.
631000	633000	But what they care about most.
633000	635000	Or something that can't be ignored.
635000	638000	Is it fair to divide these jobs?
638000	641000	I can't do some races every time I go.
641000	643000	Then do something that is difficult to do.
643000	644000	The salary is relatively low.
644000	646000	Then give it to him every time it's done.
646000	647000	That won't work.
647000	651000	So this is an example of job allocation.
651000	652000	I divide the work.
652000	655000	Everyone has to be able to eat and play.
655000	657000	Can't risk driving.
657000	662000	At the same time, we have to consider everyone's so-called money.
662000	663000	Can't be too different.
663000	666000	Or can't be too different from his job.
667000	669000	A similar example is a massage shop.
669000	671000	There will be a lot on the side of the road.
671000	673000	Whether he is a blind man or not.
673000	676000	Or this is a special massage for you to relax.
676000	679000	Then you can relax after work.
679000	680000	This kind of massage shop.
680000	682000	Massage shop is generally you go in.
682000	684000	It's quite a job.
684000	686000	Then there are a bunch of massage masters inside.
686000	688000	Usually there are a few people in turn.
688000	690000	So they have to be divided.
690000	693000	Some shops will use the way of turning around.
693000	696000	The way of turning around may be good or bad.
696000	698000	But it's the same.
698000	700000	He will definitely encounter a problem of fairness.
700000	703000	You can't do the same job every time.
703000	705000	Then give it to another person.
705000	710000	Finally, there is the so-called social enterprise.
710000	714000	The meaning of the word social enterprise is probably to say.
714000	717000	The purpose of the establishment of this company.
717000	720000	Is to promote social welfare.
720000	723000	Instead of his own company to make the most money.
723000	725000	For Taiwan.
725000	727000	Just give an example.
727000	730000	There is a company called Dazhi Culture.
730000	734000	He basically sells the so-called Dazhi magazine.
734000	735000	This is called Big Issue.
735000	738000	This is not unique to Taiwan.
738000	740000	His feature is.
740000	742000	He put the newspaper magazine.
742000	744000	This is the Dazhi magazine.
744000	746000	He handed it to the tourist.
746000	748000	Let the tourist sell it.
749000	751000	This mechanism itself is not the point.
751000	752000	The point is.
752000	757000	Since you are giving these jobs to the so-called tourist.
757000	762000	Of course, your goal is to hope that every tourist can make a certain amount of money.
762000	766000	Instead of maximizing the company's total profits.
766000	769000	So in many of these examples.
769000	771000	We can all see.
771000	773000	Basically there is a person.
773000	776000	He is a central control unit.
776000	778000	He is responsible for the distribution of work.
778000	781000	The traditional distribution of work is.
781000	782000	I have some subordinates.
782000	783000	I will divide the work.
783000	784000	They will be obedient.
784000	787000	Then they will finish their work after they have finished listening.
787000	789000	Then we have profits.
789000	790000	There is a revenge, etc.
790000	793000	Then I maximize my personal total profits.
793000	795000	It used to be like this.
795000	797000	But in some topics.
797000	799000	For example, in this topic we consider.
799000	801000	You can also see that a lot of time.
801000	804000	The distribution of work is not actually concerned about overall efficiency.
805000	807000	In fact, it is fairness.
807000	809000	If that's the case.
809000	811000	Maybe you need a new way.
811000	813000	Or you need to adjust the old way.
813000	815000	It's probably like this.
815000	818000	So, uh.
818000	820000	In terms of this question.
820000	823000	Job this thing can be said to be a love and hate.
823000	826000	On the one hand, it is that you have to spend time doing your job.
826000	828000	But it is also a precious resource.
828000	831000	Because doing the job is making money.
831000	833000	So, we have to use a good way.
833000	837000	Divide the job to our work units.
837000	839000	Then we are on the word.
839000	842000	I will still call these work units machine.
842000	844000	Because in this schedule.
844000	846000	Scheduling in this field.
846000	847000	That's what everyone calls it.
847000	848000	Just call him a machine.
848000	849000	But we know ourselves.
849000	851000	Our so-called machine is here.
851000	854000	More like an agent or an employee.
854000	856000	Like this.
856000	858000	So, we don't just consider.
858000	861000	We don't just want to maximize the total profit.
861000	863000	The main thing is to consider fairness.
863000	867000	So, our machine will have the so-called limited capacity.
867000	868000	It's just you.
868000	870000	One day's work is limited.
870000	874000	So you can't do more than your load.
874000	875000	Work.
875000	877000	So, we.
877000	879000	The setting in this place is.
879000	882000	As long as you have enough capacity.
882000	884000	Then you will want to do more work.
884000	888000	Just like a masseur or a waterman.
888000	890000	So, you are on duty today.
890000	893000	Then, as long as your workload can be replenished.
893000	894000	You want to do a little more.
894000	895000	Make more money.
895000	896000	That's probably what it means.
896000	900000	Then, we assume that the work cannot be split.
900000	902000	That depends on the situation.
902000	905000	But in the example we just talked about.
905000	907000	Massage master usually.
907000	909000	His work will not be divided.
909000	910000	You go in.
910000	911000	Someone will give you a foot massage.
911000	913000	Or someone will help you relax your shoulders.
913000	915000	He won't relax his shoulders until two-thirds.
915000	917000	Suddenly change the next person.
917000	918000	Right?
918000	919000	It's usually like this.
919000	920000	That's not to mention Kaohsiung Port.
920000	922000	He helped you bring the boat in from the sea.
922000	923000	Stop well.
923000	924000	He won't change a waterman halfway.
924000	926000	This is a waste of time.
926000	928000	So, we assume here.
928000	930000	Job can't be divided.
930000	933000	In some cases, of course.
933000	936000	For example, there is a customer who orders with me.
936000	938000	He wants 100 toy cars.
938000	941000	Of course, I can give it to factory A and factory B.
941000	943000	Each makes 40 and 60.
943000	944000	Right?
944000	946000	But in terms of food.
946000	949000	Sometimes the company doesn't want to split the order like this.
949000	951000	Because it's obvious that it's going to cause some homework.
951000	953000	Difficulties and troubles.
953000	955000	In addition to the academic.
955000	957000	We can easily prove.
957000	960000	If the work of this problem can be freely distributed.
960000	962000	And if there is no cost.
962000	964000	Then this problem will be very.
964000	966000	The existing method can be easily solved.
966000	969000	So whether from the perspective of food or from the perspective of theory.
969000	972000	Support us to do this setting.
972000	975000	In some cases, work can't be divided.
975000	978000	Then we will also discuss this point.
978000	982000	So the overall goal of our question is.
982000	986000	I want to maximize this so-called minimum benefit.
986000	988000	Among machines.
988000	991000	This thing is a core setting of our topic.
991000	993000	So let's talk about it.
993000	995000	Why are we doing this?
995000	997000	Uh, basically.
997000	999000	I have a question.
999000	1000000	You can come.
1000000	1004000	Uh, I can't split that assumption.
1004000	1006000	It will lead to that.
1006000	1008000	Because you just said that if you can split it.
1008000	1011000	It can be easily solved.
1011000	1013000	So what you mean is.
1013000	1016000	For example, if you can split it to infinity.
1016000	1018000	Basically, it's a concept of division.
1018000	1021000	You divide it by how many agents in total.
1021000	1023000	Then that's it.
1023000	1025000	Is it like this?
1025000	1028000	A little bit more complicated than that.
1028000	1031000	Uh, that's what we're doing today.
1031000	1035000	Uh, uh, uh, uh, uh, uh, uh, uh.
1035000	1037000	First, from a technical point of view.
1037000	1040000	Uh, we'll show you the mathematical model later.
1040000	1044000	So you'll see that we're going to have a whole number of planning problems.
1044000	1046000	So if the work can be divided today.
1046000	1048000	It will become a linear planning problem.
1048000	1050000	That linear planning problem already has.
1050000	1052000	Uh, everyone can accept it.
1052000	1054000	A good way to solve it.
1054000	1056000	Uh, so this is.
1056000	1058000	A more academic answer.
1058000	1060000	So what you just said is.
1060000	1063000	So-called it's all gone.
1063000	1065000	Similar similar.
1065000	1067000	Uh, although it's not a very.
1067000	1069000	It's not always possible to get the best solution.
1069000	1071000	But it's almost the same concept.
1071000	1074000	So that's it.
1074000	1076000	If today's job can be.
1076000	1077000	Any partition.
1077000	1078000	And then to infinity.
1078000	1079000	And then there's no cost.
1079000	1081000	If you want to divide it by a few points.
1081000	1084000	Indeed, this problem does not need to be studied.
1084000	1088000	Like this.
1088000	1089000	Is that okay?
1089000	1090000	Did I turn it on?
1090000	1091000	Oh, I turned it on.
1091000	1093000	Hey, can you hear me now?
1093000	1094000	There is.
1094000	1095000	Oh, okay.
1095000	1096000	So good.
1096000	1097000	Then I have another small problem.
1097000	1098000	I just got that.
1098000	1100000	The other small problem is.
1100000	1102000	If you have this assumption.
1102000	1104000	It sounds like it's still you.
1104000	1105000	You're still going to use it next.
1105000	1106000	Right?
1106000	1107000	Or will you say.
1107000	1108000	It's going to be like throwing some.
1108000	1109000	For example, like.
1109000	1110000	Material simulation.
1110000	1111000	And then run some.
1111000	1112000	What kind of simulation?
1112000	1113000	And then look at some.
1113000	1114000	The results of the statistical distribution.
1114000	1115000	Still.
1115000	1116000	You will still tend to.
1116000	1119000	Is to calculate the result.
1119000	1122000	Yeah.
1122000	1123000	OK.
1123000	1124000	Yeah, because you just said.
1124000	1125000	OK, good.
1125000	1126000	That's it.
1126000	1127000	Thank you.
1127000	1128000	Thank you.
1128000	1129000	That's right.
1129000	1130000	That's what we're going to do.
1130000	1132000	This study is basically.
1132000	1133000	A study of homework.
1133000	1135000	That is, as you will see later.
1135000	1137000	The main task is.
1137000	1139000	Write a mathematical model to describe this problem.
1139000	1141000	And help him write a algorithm.
1141000	1144000	Oh, uh, you just mentioned Monte Carlo.
1144000	1146000	Ah, this value simulation and so on.
1146000	1147000	Because of our problem.
1147000	1148000	You'll see it later.
1148000	1150000	We are a deterministic problem.
1150000	1153000	So, uh, you don't need to use these.
1153000	1155000	Uh, statistical distribution, and so on.
1155000	1158000	It's basically a standard algorithm problem.
1158000	1160000	Oh, but we'll talk about it later.
1160000	1161000	Then we'll see you later.
1161000	1163000	That's above this line.
1164000	1167000	Basically, it's about the setting of our topic.
1167000	1168000	We have a bunch of jobs.
1168000	1170000	We have a bunch of so-called machine or agent.
1170000	1174000	And then, uh, we think about the so-called fairness that agent cares about.
1174000	1178000	That fairness needs a measurement.
1178000	1181000	That is, after we distribute the work, they make money.
1181000	1184000	After that, we need to measure the so-called fairness.
1184000	1187000	There are many ways to measure fairness.
1187000	1191000	For example, there are people in academia who do this.
1191000	1194000	That is, everyone makes money.
1194000	1196000	The person who makes the most money.
1196000	1197000	Don't make the most.
1197000	1198000	Don't make too much.
1198000	1201000	Or the person who makes the most and the person who makes the least.
1201000	1203000	Don't be too different.
1203000	1205000	Or the money everyone makes.
1205000	1207000	Don't be too big.
1207000	1208000	Oh, and so on.
1208000	1211000	So you can write a lot of goals.
1211000	1213000	For example, I minimized.
1213000	1216000	Maximum benefit.
1216000	1218000	It means that I have ten people.
1218000	1220000	And then everyone makes money.
1220000	1222000	That ten people make the most money.
1222000	1223000	See how much money he makes.
1223000	1225000	I'm going to minimize the money he makes.
1225000	1227000	Or I minimized.
1227000	1229000	Maximum benefit.
1231000	1234000	Minimum benefit.
1235000	1236000	Like this.
1236000	1238000	Oh, there's one person who makes the most.
1238000	1239000	There's one person who makes the least.
1239000	1241000	And then we're going to minimize this gap.
1241000	1243000	Or I'm going to minimize.
1243000	1246000	Variance of benefit.
1246000	1248000	Oh, that's fine.
1249000	1251000	These things are OK.
1251000	1254000	But in our topic.
1254000	1257000	If we choose these goals.
1257000	1261000	Then we have to deal with benefit at the same time.
1261000	1262000	I'm sorry.
1262000	1265000	We have to deal with fairness and efficiency at the same time.
1265000	1266000	It's going to be a lot of trouble.
1266000	1267000	Why?
1267000	1269000	Because if we use these goals.
1269000	1272000	Then the best solution will become very natural.
1272000	1274000	Don't do all the work.
1274000	1275000	Don't do it all.
1275000	1276000	Everyone makes $0.
1276000	1277000	This is also the best.
1277000	1278000	This is also the best.
1278000	1279000	This is also the best.
1279000	1281000	All the goals are optimized by you.
1281000	1283000	Can't be optimized anymore.
1283000	1285000	But efficiency is 0.
1285000	1286000	It will become that.
1286000	1289000	We have to use other ways to limit.
1289000	1293000	We can't give up our overall efficiency completely.
1293000	1297000	So, in the end, we use this.
1297000	1298000	The goal is this.
1298000	1300000	This is my job for everyone.
1300000	1301000	Everyone makes money.
1301000	1304000	I see which unlucky guy makes the least.
1304000	1306000	I'm going to maximize that unlucky guy.
1306000	1307000	I make money.
1307000	1310000	If that's the case.
1310000	1312000	First of all, the poorest person will not be too poor.
1312000	1314000	The worst person will not be too bad.
1314000	1318000	This is quite in line with our fair intuition.
1318000	1322000	The second is if you want to maximize as much as possible.
1322000	1325000	The money of the person who makes the least money.
1325000	1328000	Naturally, other people will not make much more than him.
1328000	1331000	Because in this case, this goal will not be satisfied.
1332000	1333000	That's the end.
1333000	1336000	If my goal is to maximize the minimum benefit.
1336000	1339000	In fact, we will show it to you at the end.
1339000	1343000	The overall efficiency will not be too different.
1343000	1345000	We can ask the same question.
1345000	1348000	I maximize efficiency or maximize fairness.
1348000	1351000	If we use this setting to maximize fairness.
1351000	1354000	That efficiency will not go anywhere.
1354000	1355000	That's about it.
1355000	1358000	So we will start with this goal.
1359000	1361000	Then we are today.
1361000	1364000	Uh, because, uh, most of us.
1364000	1368000	This friend is not doing the so-called research in this field.
1368000	1372000	So, of course, we choose the gold.
1372000	1373000	How do you say it?
1373000	1376000	It's easier to understand.
1376000	1378000	So I'll do a few more things later.
1378000	1383000	I'm going to write down the formulation of this problem.
1383000	1385000	You mean to use simple mathematical formulas.
1385000	1388000	Let's define exactly what I just said.
1388000	1391000	After that, there is a model.
1391000	1394000	It will allow us to prove that it is NP-hard.
1394000	1397000	That NP-hard is a CS.
1397000	1402000	Or, uh, it's the word used by people in the field of computer science or research.
1402000	1404000	That's probably what I mean.
1404000	1407000	I want to prove that this problem is very difficult.
1407000	1411000	Oh, is it that we can't look forward to it?
1411000	1414000	You can get the best result within a reasonable time frame.
1414000	1418000	So we're going to design a so-called heuristic.
1418000	1422000	That is to say, oh, this problem is so difficult that we can't find the best solution.
1422000	1424000	So let's find a feasible solution.
1424000	1427000	And then we'll take a look at this feasible solution.
1427000	1429000	Let's analyze its performance.
1429000	1431000	It's probably like this.
1431000	1435000	That analysis of performance is, uh, how do you say it?
1435000	1436000	It's also very difficult.
1436000	1440000	So we're just going to pick one of the little parts of our whole study.
1440000	1444000	It's the easiest part to understand, but it's also the most essential part to share with you.
1444000	1446000	That is to say, the same problem.
1446000	1448000	You can also design a heuristic.
1448000	1449000	I can also design a heuristic.
1449000	1450000	He can also design a heuristic.
1450000	1452000	It's easy to design a heuristic.
1452000	1458000	But what we want to do is to find the theoretical nature of our heuristic.
1458000	1461000	See how good it can be or how bad it can be.
1461000	1466000	Hopefully, this will give us a better understanding of the heuristic.
1466000	1468000	That's about it.
1468000	1470000	Okay.
1470000	1473000	So let's formulate this problem.
1473000	1476000	Uh, our field is called homework research.
1476000	1477000	Operations research.
1477000	1479000	At the beginning, it was.
1479000	1484000	Linear programming that everyone learned when they were young.
1484000	1489000	If you have no impression of linear programming, you probably did something like this when you were a kid.
1489000	1491000	You have x and y.
1491000	1494000	And then they're limited.
1494000	1496000	That is, for example, x plus 2y.
1496000	1498000	Uh, sorry, this is 2x plus y.
1498000	1502000	And then x plus 2y, and then x plus 2y, and then x plus 4, and so on.
1502000	1508000	So you're going to have a feasible region, x is greater than 0, y is greater than 0, and so on.
1508000	1513000	And then you're supposed to have a goal, like I want to maximize x plus y.
1513000	1518000	Yeah, well, then you're going to have a line, and then you're going to push it this way, and then you're going to get the best solution.
1518000	1520000	This thing is linear programming.
1521000	1530000	Generally speaking, the homework research method is that I try to write the problem into linear programming, non-linear programming, and so on.
1530000	1533000	And then we use all kinds of methods to solve it.
1533000	1536000	So now we're going to do something similar.
1536000	1539000	I'm going to define my decision problem.
1539000	1543000	The goal is limited and there are character variables.
1543000	1546000	So let's go back to the topic we just talked about.
1547000	1550000	I have a group of people, agents or machines.
1550000	1552000	It's my work unit.
1552000	1555000	And then I have a group of jobs that I'm going to divide.
1555000	1559000	And then, today, I have a few jobs.
1559000	1562000	I have a few machines.
1562000	1566000	So m is machine, and the other symbol n is job, like this.
1566000	1571000	And then I have a limit on every machine.
1571000	1574000	I work eight hours a day, this kind of thing.
1574000	1577000	So I have a limit on my work time.
1577000	1579000	This is called K, called Capacity.
1579000	1583000	Every job has the work time it needs.
1583000	1585000	So it's called CJ.
1585000	1592000	This is usually called Processing Time in Scheduling Literature.
1592000	1595000	How long does this job take to finish?
1595000	1597000	And then JobJ.
1597000	1602000	JobJ has its benefit, which is how much money I can get after I'm done.
1603000	1610000	So our task is to determine the so-called XIJ.
1610000	1613000	XIJ is a so-called 0-1 variable.
1613000	1618000	It's for every job and every machine.
1618000	1624000	I ask myself if I'm going to let machine I do JobJ.
1624000	1627000	If so, that means I'm going to assign J to I.
1627000	1629000	Then I'm going to set its value to 1.
1629000	1631000	Otherwise, I'm going to set it to 0.
1631000	1632000	Something like this.
1632000	1634000	Now that we have this role variable,
1634000	1637000	Let's see how we're going to describe what we just talked about.
1637000	1641000	The target room, the limit room, and so on.
1641000	1643000	This problem is very simple to describe.
1643000	1645000	Let's look at the bottom here.
1645000	1650000	The first thing is that for every machine or every agent.
1650000	1656000	The total workload I assign to it cannot exceed its work time.
1656000	1657000	How do you say that?
1657000	1661000	XIJ is equal to 1, which means I assign J to I.
1661000	1663000	So I ask every job,
1663000	1666000	Did I assign J to this I?
1666000	1670000	If so, then this work time has to be added up.
1670000	1675000	So the total work time I get cannot exceed the amount I can recover.
1675000	1677000	This is the limit room 1.
1677000	1687000	The limit room 2 is that every job is assigned to at most one machine.
1687000	1691000	So I look at all the machines that I may be assigned.
1691000	1695000	XIJ can only have one person at most.
1695000	1701000	Here, XIJ, we set it to be either 0 or 1.
1701000	1703000	It can't be 0.3 or 0.8 or something like that.
1703000	1706000	This means that this work cannot be divided.
1706000	1711000	The final goal is here.
1711000	1715000	I want to maximize the so-called minimum benefit.
1715000	1716000	How do you say that?
1716000	1720000	For every I, for every machine,
1720000	1723000	I'm going to calculate how much benefit I get.
1723000	1727000	If XIJ is 1, it means I got that job.
1727000	1731000	I got that job, I did it, and then I got this benefit.
1731000	1736000	So XIJ is the benefit I get.
1736000	1739000	You earn $8, I earn $5, he earns $16.
1739000	1741000	The unluckiest of us is $5.
1741000	1743000	The goal value is 5.
1743000	1748000	I want to maximize the money earned by the least amount of money.
1748000	1750000	It's probably like this.
1750000	1752000	So this place.
1754000	1755000	There are a few values.
1755000	1757000	It's here.
1757000	1759000	Let's review it.
1759000	1763000	I basically maximize the minimum total benefit among machines.
1763000	1765000	Then the first one is capacity constraint.
1765000	1767000	That is, my work time is limited.
1767000	1770000	The second one is job can be done only once.
1770000	1772000	So it's a job that can only be done once.
1772000	1773000	It can only be distributed to one person.
1773000	1776000	And then finally, the job can't be split.
1776000	1777000	It's probably like this.
1777000	1780000	Let's jump out here and talk about a few things.
1780000	1782000	We have a few settings here.
1782000	1785000	BJ, CJ and K.
1786000	1791000	This is equivalent to assuming that each machine is exactly the same.
1791000	1793000	So their work time constraints are the same.
1793000	1799000	And then every job is, uh, every job is assigned to you or assigned to me.
1799000	1801000	The profit is the same.
1801000	1804000	And then how long does each job take?
1804000	1805000	It's the same.
1805000	1810000	These settings are sometimes established and sometimes not.
1810000	1814000	For example, K.
1814000	1815000	What about K?
1815000	1819000	If I'm talking about a massage master today, it's not necessarily.
1819000	1821000	Some people might be able to do it for eight hours a day.
1821000	1823000	Some people can only do it for four hours a day, right?
1823000	1826000	BJ is doing a job today.
1826000	1828000	How much can you charge the customer?
1828000	1829000	This may be the same.
1829000	1830000	Massage master.
1830000	1831000	But this one person comes in.
1831000	1833000	Then you press, you are 400 yuan, I press, you are 400 yuan.
1833000	1834000	OK.
1834000	1837000	That CJ is not necessarily the same.
1837000	1839000	Not necessarily the same or not the same.
1839000	1842000	For example, a massage master is usually a job.
1843000	1846000	30 minutes, 20 minutes, and so on.
1846000	1848000	So that CJ will naturally be the same.
1848000	1851000	But if today is, for example, a drinker, a drinker.
1851000	1854000	Some people have better skills, some people are faster, some people are slower.
1854000	1855000	This is possible.
1855000	1860000	But in the end, in fact, we have done it before.
1860000	1862000	K, you can make it different for everyone.
1862000	1863000	This is OK.
1863000	1865000	CJ, you can become C.I.J.
1865000	1867000	BJ, you can become B.I.J.
1867000	1871000	As long as you meet some reasonable settings, this problem can still be dealt with.
1871000	1874000	But today, because of the time limit, we don't talk so much.
1874000	1877000	We just assume that BJ is the same for everyone.
1877000	1879000	CJ is the same for everyone.
1879000	1880000	The so-called everyone is the same.
1880000	1882000	It's divided for you or for me.
1882000	1884000	We make the same money.
1884000	1885000	That's what it means.
1885000	1887000	And then finally, K, everyone is the same.
1887000	1888000	Let's assume this thing.
1888000	1895000	Then, uh, I just mentioned that if this job can be divided.
1895000	1898000	Then this place will become X.I.J.
1898000	1900000	Between 0 to 1.
1900000	1905000	At this time, this problem is that you can move a little bit more.
1905000	1907000	It will become a linear program.
1907000	1908000	It becomes a linear program.
1908000	1911000	That linear program will be the general commercial server.
1911000	1912000	It can be solved.
1912000	1915000	Well, there's nothing to study about this problem.
1915000	1919000	Okay, so today, uh, I'm going to skip it.
1919000	1927000	So today, after that question, in our field, first of all, we have to prove that this question is NP-hard.
1927000	1930000	The meaning of NP-hard, of course, I'm not going to talk about the details here.
1930000	1936000	But what it means is that if you can prove that a problem is NP-hard.
1936000	1945000	It means that people in the academic world basically recognize that this problem is not the best solution within a reasonable time range.
1945000	1948000	You mean that the complexity of this problem is very high.
1948000	1949000	That's probably what it means.
1949000	1958000	Okay, so the question just now, if you're not in this field, it's probably hard to imagine why it's so complicated.
1958000	1961000	Okay, why is it so difficult to get the best solution?
1961000	1965000	So let's just describe this proof a little bit.
1965000	1967000	So here's the problem.
1967000	1971000	I'm going to assume that my question just now is a little bit simpler.
1971000	1972000	A special case.
1972000	1976000	There are actually only two machines in this special case.
1976000	1982000	And these two machines are uncapacitated, which means that their workload is infinitely large.
1982000	1986000	Or far larger than all the workload.
1986000	1991000	So in this case, our problem will become the so-called partition problem.
1991000	1992000	What does it mean?
1992000	1995000	My workload is already limitless.
1995000	1998000	So the workload limit no longer exists.
1998000	2006000	I only care about how many benefits these jobs will get.
2006000	2010000	Work 1 can earn $3, work 2 can earn $4, and so on.
2010000	2019000	And then my fairness issue is that I'm going to divide this pile of benefits as evenly as possible to two people, right?
2019000	2022000	It's best to stack it up like this.
2022000	2027000	This problem is called partition problem in mathematics or computer science.
2027000	2030000	I give you a bunch of integers and you divide it into two piles.
2030000	2033000	Try to make these two piles the same size.
2033000	2036000	In fact, this problem is NP-hard.
2036000	2040000	As long as you have enough numbers, you can't find a good answer to this problem.
2040000	2042000	You divide it, you divide it, but you can't tell.
2042000	2048000	And then you can't even tell if they can be divided into two piles of the same size.
2048000	2051000	It can't be done in a reasonable amount of time.
2051000	2054000	So even partition can't do it.
2054000	2057000	Our problem is more difficult than partition.
2057000	2059000	It's just that we can't do it any more.
2059000	2061000	That's about it.
2061000	2068000	Well, in that case, let's find a heuristic algorithm.
2068000	2071000	This thing is what I'm doing now.
2071000	2074000	Hey, I have a question.
2074000	2077000	Can you go back to the last page?
2078000	2086000	But the problem you have to deal with is that you just have to maximize the minimum benefit.
2086000	2089000	You don't have to be partition.
2089000	2092000	In this case, it's still NP-hard.
2092000	2098000	Can you fully correspond to this partition problem?
2098000	2100000	Hey, that's a good question.
2100000	2105000	We're maximizing the minimum benefit.
2105000	2108000	So we're doing this thing in general.
2108000	2111000	But when we only have two machines.
2111000	2116000	We're going to want to make them as big as possible, right?
2116000	2120000	Yeah, if we can't make it the same size.
2120000	2125000	Then this thing is not fair in some sense.
2125000	2131000	Or the way we can maximize the minimum benefit is to make them the same size.
2132000	2134000	That's a good answer.
2134000	2137000	But you might have that thing.
2137000	2140000	Okay, I know.
2140000	2142000	Yeah, yeah, yeah, yeah, yeah, yeah, yeah.
2142000	2145000	Let me correct this partition problem.
2145000	2147000	It has two versions.
2147000	2150000	Version one is that I give you a bunch of numbers.
2150000	2154000	Ask you if you can divide them into a pile of the same size.
2154000	2157000	Version two is that I give you a pile of numbers.
2157000	2161000	You help me minimize the difference between these two numbers.
2161000	2162000	Like this.
2162000	2163000	OK.
2163000	2167000	And then these two questions are all in the same place.
2167000	2169000	OK, OK, OK, OK, OK.
2169000	2172000	In fact, version one is relatively simple.
2172000	2174000	Version one is the decision problem.
2174000	2175000	It's a yes or no.
2175000	2177000	Version two is the optimization problem.
2177000	2179000	You have to find a set of distribution methods.
2179000	2182000	So our question is version two of the expansion version.
2182000	2183000	Like this.
2183000	2185000	OK, good.
2185000	2186000	Thank you.
2186000	2190000	OK, and then it's here.
2190000	2195000	So today we're basically not going to look for the best solution.
2195000	2198000	So we're going to look for the so-called feasible solution.
2198000	2200000	Use heuristic algorithm.
2200000	2203000	Heuristic is an inspiration algorithm in Chinese.
2203000	2206000	It's actually an experience law.
2206000	2208000	There's a lot of numbers here.
2208000	2209000	How do you divide it better?
2209000	2210000	Well, I don't know.
2210000	2212000	But why don't you just divide it like this?
2212000	2213000	It's usually pretty good.
2213000	2215000	That's probably what it feels like.
2215000	2219000	Heuristic algorithm sounds like a waste from an academic point of view.
2219000	2224000	It's just that if it's a very, very simple rule-based algorithm,
2224000	2226000	People think it sounds like it's very simple.
2226000	2227000	Is that really okay?
2227000	2230000	But in fact, it's almost always done that.
2230000	2232000	Uh, for the example of Kaohsiung Port.
2232000	2238000	When we were discussing with them, we said, oh, that sounds like a job allocation problem.
2238000	2240000	So let's design the algorithm.
2240000	2247000	And after a while, they found out that they were very worried that the algorithm would be blacked out.
2247000	2251000	That is to say, someone wrote a software to do the job allocation.
2251000	2254000	What if the person who wrote the software colluded with a few of them?
2254000	2256000	And then it's a lot of favoritism.
2256000	2258000	What do you do with those inspirations?
2258000	2259000	Yeah, there's no way to solve it.
2259000	2266000	So that's to say, if this algorithm is implemented into the job allocation between the drinkers,
2266000	2269000	The algorithm must be very simple and easy to explain.
2269000	2271000	Everybody can understand.
2271000	2275000	So today, when a job is assigned to A instead of B,
2275000	2282000	The file with the history record and the algorithm must be able to explain why it is assigned to A instead of B.
2282000	2284000	There is such a requirement.
2284000	2289000	So in this case, it becomes that you can't use a complicated algorithm.
2289000	2292000	You have to use a relatively simple but effective algorithm.
2292000	2295000	So you can't use that kind of neural network.
2295000	2297000	You just have to use a relatively simple algorithm.
2297000	2300000	And then it can get a certain effect.
2300000	2305000	Okay, so let's find a simple algorithm.
2305000	2308000	But what if you want to design an algorithm for that question?
2308000	2309000	Look at the file.
2309000	2311000	So look at the file.
2311000	2316000	In 1966, someone studied a very similar problem.
2316000	2318000	You have a bunch of machines.
2318000	2319000	They all look the same.
2320000	2322000	But you have to minimize and make span.
2322000	2324000	What does that mean?
2324000	2326000	That is, you have a bunch of jobs.
2326000	2330000	These jobs all have the so-called CJ, which is workload.
2330000	2333000	So every job has to spend a certain amount of time.
2333000	2335000	At that time, there was no benefit in that problem.
2335000	2338000	You just divide a bunch of work into a bunch of machines.
2338000	2344000	And then hope to minimize the total time of the machine that takes the longest.
2345000	2349000	So this problem is on the academic side.
2349000	2352000	It's kind of like this kind of problem.
2352000	2354000	And then there was a man.
2354000	2357000	He did a similar problem in 1982.
2357000	2358000	He's the same.
2358000	2360000	There's only workload at work.
2360000	2365000	But he's the one who maximizes the satisfaction of that person.
2365000	2368000	That is to say, after the job is done, there is a person who does the least.
2368000	2371000	I'm going to maximize his work.
2372000	2374000	So.
2374000	2377000	These two questions are very similar, right?
2377000	2379000	It's a bunch of work.
2379000	2380000	It takes time.
2380000	2385000	Graham, he's the one who minimizes the longest.
2385000	2390000	Dual Mayor is the one who maximizes the shortest time.
2390000	2396000	But in short, it's all about fairness as far as possible.
2397000	2401000	So the way they use it is very simple.
2401000	2406000	That is to say, uh, what we use today is called LPT.
2406000	2412000	This algorithm is that I arrange the work from large to small.
2412000	2414000	According to the formula.
2414000	2419000	And then after the sequence, we start to divide the big work.
2419000	2425000	Every time you want to divide it, you divide it to the most comfortable and relaxed person at the moment.
2425000	2426000	It's probably like this.
2426000	2429000	And then it's over.
2429000	2432000	This algorithm is very intuitive.
2432000	2435000	If you divide it to the most comfortable person every time.
2435000	2438000	Then his current total work is the smallest.
2438000	2441000	Of course, you'll be the most balanced.
2441000	2443000	And then the work has to be arranged from large to small.
2443000	2444000	That makes sense, too.
2444000	2447000	Because small work can finally insert air.
2447000	2449000	So let's take a look at the example.
2449000	2451000	Suppose I have four jobs and two machines.
2451000	2454000	The four jobs are 7542.
2454000	2456000	And then I have two empty machines.
2456000	2458000	That 7542 has been arranged, right?
2458000	2460000	So the workload is 7.
2460000	2462000	I'm going to give it to the machine.
2462000	2464000	At this time, I'm going to give it to the machine.
2464000	2465000	Because the machine is more comfortable now.
2465000	2467000	He just didn't work.
2467000	2469000	And then the next thing is work 3.
2469000	2471000	Work 3 is going to be given to the machine.
2471000	2474000	Because the current workload of the machine is relatively small.
2474000	2476000	And then the last job 2.
2476000	2478000	Of course, the job 2 is given to the machine.
2478000	2482000	So that's how simple the algorithm is.
2482000	2485000	So based on their longest processing time.
2485000	2487000	Then we'll fix it a little bit.
2487000	2491000	We'll change it to Capacitated Highest Benefit Job First.
2491000	2493000	It's called CHBF.
2493000	2495000	This method is to say.
2495000	2499000	We have the so-called benefit today.
2499000	2501000	And then there's no, uh, sorry.
2501000	2504000	And then our goal is to balance the benefit.
2504000	2507000	So when we arrange the jobs from large to small.
2507000	2509000	It's in the order of benefit.
2509000	2510000	OK.
2510000	2513000	After we're done, every time we're going to divide the job.
2513000	2517000	Just divide it to the current accumulated benefit.
2517000	2519000	The smallest job.
2519000	2521000	We'll give it to him.
2521000	2524000	So when you divide it, you have to see if it has capacity.
2524000	2525000	If the capacity is not enough.
2525000	2527000	Then we'll give it to the second順位.
2527000	2529000	And then we'll give it to the third順位.
2529000	2530000	And so on.
2530000	2533000	Well, you've been doing this thing over and over again.
2533000	2535000	Until we finish the job.
2535000	2538000	The so-called division is also possible.
2538000	2539000	It's not finished.
2539000	2542000	Because every machine has a capacity limit.
2542000	2545000	So there are some jobs that can't be done in the end.
2545000	2547000	It's also very possible.
2547000	2550000	Well, if a job can't be given to any machine.
2550000	2552000	Then we'll throw it away.
2552000	2554000	Well, there's nothing we can do about it.
2554000	2556000	It's probably like this.
2556000	2557000	So.
2557000	2561000	Uh, in academia, we can easily analyze the complexity of this problem.
2561000	2564000	But even if you don't write that formula to analyze.
2564000	2565000	It's okay.
2565000	2566000	It looks very simple.
2566000	2567000	Job sequence.
2567000	2570000	And then we divide the divide divide divide divide divide divide.
2570000	2573000	So this method is very easy to implement.
2573000	2576000	Well, suppose we have this today.
2576000	2577000	The same.
2577000	2580000	We have two jobs and, uh, sorry, four jobs and two machines.
2580000	2582000	So let's try it.
2582000	2584000	The capacity of these two machines is eight.
2584000	2587000	Uh, at most, you can only do eight hours of work.
2587000	2590000	And then, four jobs, nine dollars each.
2590000	2597000	Nine dollars, five hours, six dollars, six hours, three dollars, three hours, two dollars, two hours.
2597000	2598000	Two.
2598000	2602000	So we're going to start with this nine-dollar job.
2602000	2603000	Take it first.
2603000	2605000	Okay, so he'll give it to the machine first.
2605000	2608000	And then the six-dollar one is given to the machine.
2608000	2611000	And then there's the three-dollar one, right?
2611000	2614000	The three-dollar one is supposed to be given to the machine.
2614000	2617000	Because the machine only makes six dollars at the moment.
2617000	2619000	But I can't divide it when I want to.
2619000	2621000	Because he can't eat it.
2621000	2623000	Then he had to give it to the machine.
2623000	2625000	And then the last one was given to the machine.
2625000	2627000	So this algorithm is probably running like this.
2629000	2632000	Okay, so that's what today's questions are.
2632000	2634000	It's just a random question for you.
2634000	2636000	It's easy for you to design algorithms.
2636000	2639000	But it's very difficult for you to show him good.
2639000	2642000	So what's good?
2642000	2644000	There are usually two kinds of measured indicators.
2644000	2646000	I'm going to finish these two pages.
2646000	2647000	That's about it.
2647000	2652000	That is to say, I randomly give you 10 million jobs.
2652000	2655000	And then you just, uh, I randomly produce these jobs.
2655000	2656000	You just give me a row.
2656000	2659000	And after that, we can calculate the target market value.
2659000	2660000	How much is it, right?
2660000	2664000	At the same time, we can also find some benchmark algorithms.
2664000	2666000	Let's compare it with everyone.
2666000	2667000	So we have 100 people.
2667000	2670000	100 people each propose 100 algorithms.
2670000	2673000	So we just throw it down every time.
2673000	2676000	And then it depends on whose algorithm usually performs better.
2676000	2678000	Okay, so that's the first plan.
2678000	2682000	The second plan is that we use a more theoretical proof.
2682000	2686000	The method is to find the worst case performance of the algorithm.
2686000	2691000	What he means is probably that for your proposed algorithm.
2691000	2695000	Can you prove that no matter what strange instance is thrown to you.
2695000	2699000	Your performance can be good to a certain extent.
2699000	2703000	That is to say, I know that my algorithm will not find the best solution.
2703000	2706000	But no matter how bad it is, it can't be bad to a certain extent.
2706000	2708000	That's probably what it means.
2708000	2709000	What about us?
2709000	2712000	This so-called worst case performance guarantee.
2712000	2714000	If you can find it.
2714000	2721000	It can give us some psychological confidence when we use algorithms.
2721000	2726000	In other words, I also know that the algorithm I found is not the best solution.
2726000	2729000	But it's not too far from the best solution.
2729000	2731000	That's probably what it means.
2731000	2733000	Okay, so.
2733000	2739000	We used to have Graham, this dual mayor.
2739000	2743000	They all found the so-called performance guarantee.
2743000	2746000	In Graham's case, I'm going to do my job today.
2746000	2749000	I'm going to minimize make spend.
2749000	2753000	Minimize the total cost of the person who does the longest.
2753000	2759000	At that time, he can prove that his algorithm's performance guarantee is 4.4.
2759000	2765000	133% means that if the best solution is 100.
2765000	2768000	He will find at least 133 or less.
2768000	2770000	Because it's a minimization problem.
2770000	2772000	So the smaller your target market value, the better.
2772000	2777000	He can guarantee that his solution is at most one-third of the best solution.
2777000	2779000	That dual mayor.
2779000	2780000	Sorry.
2780000	2783000	The dual mayor is that his problem is the other way around.
2783000	2784000	So it becomes three quarters.
2784000	2786000	In other words, if the best solution is 100.
2787000	2790000	Your mayor's solution is at least 75 or more.
2790000	2791000	That's probably what it looks like.
2791000	2794000	And then there were some other people who did some refinement.
2794000	2796000	So our goal is the same.
2796000	2801000	We want to help our algorithm find a performance guarantee like this.
2801000	2804000	As a result, of course there is.
2804000	2809000	We have this performance guarantee in all kinds of situations.
2809000	2811000	So let's just talk about one.
2812000	2817000	That is to say, if today our job benefit.
2817000	2820000	With workload is a linear relationship.
2820000	2825000	That is to say, a car is 5 yuan, two cars are 10 yuan, three cars are 15 yuan.
2825000	2830000	If you do a few hours, you will get various benefits at the bottom of the line.
2830000	2832000	Oh, if it's this situation.
2832000	2834000	Then our algorithm.
2834000	2836000	We can guarantee one-third.
2836000	2838000	That is to say, if the best solution is 100.
2838000	2841000	Then we can do at least 50 or more.
2841000	2843000	That's probably what it looks like.
2843000	2845000	Then there is a vote here.
2845000	2847000	Then I'll skip this one.
2847000	2850000	Then we want to emphasize one thing.
2850000	2851000	That is.
2851000	2853000	The best solution is 100.
2853000	2855000	Then you guarantee more than 50.
2855000	2857000	It sounds pretty good, right?
2857000	2859000	Oh, at this time.
2859000	2861000	We have to explain one thing.
2861000	2865000	That is, 50 is actually the most ideal situation.
2865000	2869000	That is to say, one-third of the guarantee is the limit of our algorithm.
2869000	2871000	Oh, what do you mean?
2871000	2875000	Suppose I have a lot of machines today.
2875000	2879000	Then these machines, they are basically.
2879000	2880000	Uh, he.
2880000	2882000	Suppose I have several machines.
2882000	2883000	M machine.
2883000	2885000	Then I have two M plus one job.
2885000	2886000	Among them.
2886000	2887000	A lot of work.
2887000	2890000	2M work is just half the capacity.
2890000	2892000	Only a little bit bigger.
2892000	2894000	Then if today is.
2894000	2895000	To do this allocation.
2895000	2897000	Then I use my algorithm.
2897000	2899000	I'll put the biggest one in first.
2899000	2901000	Then this one will just fit.
2901000	2903000	Can't fit any other work.
2903000	2905000	The other machines will just fit two.
2905000	2906000	Two.
2906000	2908000	Oh, so my solution.
2908000	2910000	It's probably half of the best solution.
2910000	2912000	That's what it means.
2912000	2914000	We just found 1 in 2.
2914000	2916000	This solution, this performance guarantee.
2916000	2919000	There's no way to improve it any more.
2919000	2921000	Oh, this is the limit.
2921000	2923000	But there's still no way to answer.
2923000	2925000	Some of the other people's questions.
2925000	2927000	It's just that you might think.
2927000	2929000	One-half is still very small.
2929000	2930000	The maximum solution is 100.
2930000	2931000	You can only find 50.
2931000	2932000	Does that really work?
2932000	2935000	At this time, we can do some later.
2935000	2936000	Value experiment.
2936000	2938000	To prove that he is actually.
2938000	2941000	In average, it's usually not too bad.
2941000	2943000	Oh, so like this kind of research.
2943000	2945000	I'm going to do a numerical study later.
2945000	2948000	That is, then we will randomly produce a pile of instances.
2949000	2951000	Throw it to this algorithm.
2951000	2953000	And then, after the algorithm spit out the solution.
2953000	2957000	We're going to throw this pile of instances into a server.
2957000	2959000	Let the server run for three days and three nights.
2959000	2960000	Find the best solution.
2960000	2962000	And then let's take a look at my algorithm.
2962000	2963000	0.2 seconds out.
2963000	2965000	With the server running for three days and three nights.
2965000	2966000	The best solution that came out.
2966000	2968000	How much difference is there?
2968000	2972000	That's basically through all kinds of research.
2972000	2975000	It's probably all about this relationship.
2975000	2977000	Oh, here.
2977000	2978000	That is to say.
2978000	2980000	Our algorithm.
2980000	2982000	The fairness index found.
2982000	2985000	With the fairness index found by the best solution.
2985000	2987000	It's usually two percent.
2987000	2990000	Four percent, eight percent, and so on.
2990000	2991000	And then?
2991000	2993000	Uh, in some particularly.
2993000	2995000	In a tight situation.
2995000	2996000	Our algorithm.
2996000	2999000	The worst of the worst is probably to find 90 percent.
2999000	3000000	Around the solution.
3000000	3002000	That is to say, the best solution is 100.
3002000	3003000	He found 90.
3003000	3004000	It's probably like this.
3004000	3007000	And then in a relatively easy-to-handle situation.
3007000	3009000	He can find 98 percent, 97 percent, and so on.
3009000	3011000	Oh, that's because the time is up.
3011000	3013000	So I'm not going to go into the details.
3013000	3016000	But generally speaking, what we do in this type of research.
3016000	3018000	It's just like that.
3018000	3019000	You have a problem.
3019000	3020000	The old man didn't solve it.
3020000	3021000	Then you solve it.
3021000	3023000	After you design a algorithm.
3023000	3024000	From a theoretical point of view.
3024000	3026000	Make sure he's not too bad.
3026000	3030000	And then use a numerical experiment to say that he's actually pretty good.
3030000	3031000	It's probably like this.
3032000	3035000	Okay, so to sum up.
3035000	3036000	Oh, sorry.
3036000	3037000	Hey.
3061000	3073000	Oh, the speaker said his computer was out of power.
3073000	3076000	Let's wait for him now.
3121000	3146000	Let's take this time to think about any questions you have.
3146000	3155000	Hey, I just had one that I didn't quite understand.
3155000	3156000	Let me discuss it with you.
3156000	3159000	If I'm not mistaken.
3159000	3162000	He's generating those random instances.
3162000	3166000	Basically, it's completely independent and unrelated.
3166000	3168000	And then look at a distribution, right?
3168000	3173000	But in fact, for example, let's use a drinker.
3173000	3175000	I can do this this year.
3175000	3179000	For example, I generate a solution based on this guideline.
3179000	3181000	And then I'll do this this year.
3181000	3183000	And then see what happens.
3183000	3187000	And then adjust the next year's sequence according to this situation.
3187000	3190000	And then adjust the next year's sequence.
3190000	3193000	So, in fact, every instance should be.
3193000	3197000	It's going to be more refined.
3197000	3199000	Not irrelevant.
3199000	3201000	Right?
3201000	3204000	Oh, you mean those instances.
3204000	3208000	Uh, maybe this year's instance and next year's instance.
3208000	3209000	There should be some relationship.
3209000	3213000	For example, maybe the big ship always has 50% of the time.
3213000	3215000	The small ship always has 20% of the time.
3215000	3216000	Yeah, so you split it this year.
3216000	3217000	And then I feel like this.
3217000	3219000	Hey, let's take a look at the fairness of the last one.
3219000	3222000	The variance of each merchant ship.
3222000	3224000	And then use this as an indicator.
3224000	3226000	To adjust the next year's sequence.
3226000	3228000	It's a bit like your Newton's law.
3228000	3229000	The initial guess.
3229000	3231000	And then refine it to a more.
3231000	3232000	A process.
3232000	3234000	It's not going to be a bunch of guesses.
3234000	3236000	It's irrelevant.
3236000	3237000	Oh, yeah.
3237000	3239000	I think this is quite interesting.
3239000	3244000	You can ask him later.
3244000	3246000	Maybe his method.
3246000	3247000	If it's random.
3247000	3249000	His lower bound is not so good.
3249000	3251000	But he refined it to the maximum speed.
3251000	3252000	Much faster than others.
3252000	3254000	Isn't that amazing?
3254000	3256000	What you mean is.
3256000	3261000	If you have some understanding of his instance.
3261000	3263000	You know.
3263000	3265000	What does the job look like?
3265000	3267000	There should be a better solution.
3267000	3270000	Yeah.
3270000	3273000	I think this seems to have two questions.
3273000	3275000	That is.
3275000	3278000	One question is.
3278000	3280000	This year's solution.
3280000	3282000	And then.
3282000	3284000	And then look at the difference.
3284000	3286000	How much to adjust.
3286000	3288000	Is this question going to be refined?
3288000	3290000	It's a question in itself.
3290000	3292000	Oh, expert.
3292000	3294000	I never thought about it.
3294000	3296000	Is it going to be refined?
3296000	3298000	It's a question in itself.
3298000	3300000	Because if this question is.
3300000	3302000	Is a continuous.
3302000	3304000	Continuous function optimization.
3304000	3306000	It's usually refined, but.
3306000	3308000	Continuous plus smooth.
3308000	3310000	Some of the conditions will be refined.
3310000	3312000	But.
3312000	3314000	Because his optimization seems to be separated.
3314000	3316000	Then not continuous.
3316000	3318000	So it's hard to say if it will be refined.
3318000	3320000	Oh.
3322000	3324000	Hi.
3324000	3326000	Hi.
3330000	3332000	So is there a slide?
3332000	3334000	I can't hear him.
3336000	3338000	No, he has no sound.
3338000	3340000	Hello Xiaojie.
3340000	3342000	Xiaojie is still there.
3342000	3344000	Can you hear me?
3344000	3346000	Yes.
3352000	3354000	But we can't see you.
3354000	3356000	Screen.
3356000	3358000	And people.
3364000	3366000	Hello.
3366000	3368000	Hello.
3368000	3370000	Hey.
3370000	3372000	Sorry.
3372000	3374000	I'm back.
3374000	3376000	Give me 20 seconds.
3388000	3390000	Got it.
3390000	3392000	I'm so sorry.
3392000	3394000	I.
3394000	3396000	I just found out.
3396000	3398000	I forgot to put.
3398000	3400000	I just forgot to put the pen.
3400000	3402000	Bring the power line.
3402000	3404000	So I changed the computer in a hurry.
3406000	3408000	Okay, in short.
3408000	3410000	We just finished talking like that.
3410000	3412000	Thank you all.
3412000	3414000	Clap your hands.
3418000	3420000	It's a little funny.
3420000	3422000	I'll just sum it up.
3422000	3424000	In short, as I just said.
3424000	3426000	Basically, this Fairness research.
3426000	3428000	It sounds like it makes sense.
3428000	3430000	But in fact.
3430000	3432000	There are not many people who have studied.
3432000	3434000	Most of the research.
3434000	3436000	Are maximizing.
3436000	3438000	Overall effect.
3438000	3440000	So for this so-called job.
3440000	3442000	You love him and hate him.
3442000	3444000	Or between this agent.
3444000	3446000	Discuss fairness issues with each other.
3446000	3448000	In fact, there is little discussion.
3448000	3450000	This question also has a certain discussion value.
3450000	3452000	After all, he is NP-hard.
3452000	3454000	So the good algorithm.
3454000	3456000	Or the theoretical value of the algorithm.
3456000	3458000	It can also be discussed.
3458000	3460000	Then we all did these things.
3460000	3462000	In fact, it's not very good.
3462000	3464000	But it's done anyway.
3464000	3466000	It's probably like this.
3466000	3468000	Okay, thank you all.
3468000	3470000	Let's thank the speaker again.
3470000	3472000	OK.
3472000	3474000	There were some questions just now.
3474000	3476000	Yes.
3476000	3478000	Let me ask.
3478000	3480000	Let me ask first.
3480000	3482000	Oh.
3482000	3484000	My question is like this.
3484000	3486000	You just said.
3486000	3488000	Although you can.
3488000	3490000	There are some ways you can get.
3490000	3492000	Upper bound 1.33.
3492000	3494000	Then the lower bound.
3494000	3496000	For example, there are some lower bound.
3496000	3498000	If you generate a lot of.
3498000	3500000	Random instance.
3500000	3502000	You can look at a distribution.
3502000	3504000	Then say this is the lower bound.
3504000	3506000	For example.
3506000	3508000	This example.
3508000	3510000	For example.
3510000	3512000	I use such a guideline today.
3512000	3514000	To distribute.
3514000	3516000	Then everyone runs like this this year.
3516000	3518000	But I can see the results of this year.
3518000	3520000	As an index.
3520000	3522000	To adjust how to arrange next year.
3522000	3524000	and so.
3524000	3526000	I actually have a way.
3526000	3528000	In this way.
3528000	3530000	Keep going to a better solution.
3530000	3532000	Not every year.
3532000	3534000	What is the difference between each method?
3544000	3546000	What I just said.
3546000	3548000	It sounds like.
3548000	3550000	The difference between theoretical research.
3550000	3552000	Can I hear it like this?
3552000	3554000	Can you hear it?
3554000	3556000	Thank you.
3556000	3558000	That is to say.
3558000	3560000	We forgot what we just said.
3560000	3562000	In short.
3562000	3564000	This is a problem that needs to be solved.
3564000	3566000	There are a bunch of ships coming.
3566000	3568000	Then we have to run.
3568000	3570000	Then we have to sign them.
3570000	3572000	We want to make our goal as good as possible.
3572000	3574000	Of course you can.
3574000	3576000	Every year.
3576000	3578000	Your algorithm will make some adjustments.
3578000	3580000	The algorithm must be able to let you adjust.
3580000	3582000	Then you have some parameters.
3582000	3584000	It will do some settings.
3584000	3586000	This is OK.
3586000	3588000	So what you just said is definitely no problem.
3588000	3590000	You can make adjustments according to the change in the environment and the situation.
3590000	3592000	Then make adjustments.
3592000	3594000	In theory.
3594000	3596000	Let's think about an algorithm.
3596000	3598000	Its performance guarantee is two things.
3598000	3600000	That is.
3600000	3602000	I'll give you 1,000 ships today.
3602000	3604000	100 ships.
3604000	3606000	You use any algorithm to line up.
3606000	3608000	As long as it's not the best solution.
3608000	3610000	You don't know how far you are from the best solution.
3610000	3612000	Because you don't even know how much the best solution is.
3612000	3614000	Right?
3614000	3616000	So you line up.
3616000	3618000	Some people don't like it.
3618000	3620000	But in short, you don't know how far you are from the best solution.
3620000	3622000	OK.
3622000	3624000	The theoretical nature of the algorithm.
3624000	3626000	What's that?
3626000	3628000	He's telling us.
3628000	3630000	Our algorithm.
3630000	3632000	How far can our algorithm be from the best solution?
3632000	3634000	How far is it?
3634000	3636000	So this is two things.
3636000	3638000	In fact, as long as we line up the solution.
3638000	3640000	Everyone can accept.
3640000	3642000	Everyone thinks it's OK.
3642000	3644000	That's just in theory.
3644000	3646000	Everyone can know further.
3646000	3648000	How far are we from the best solution?
3648000	3650000	That's about it.
3650000	3652000	OK.
3652000	3654000	Thank you.
3654000	3656000	Thank you.
3660000	3662000	Are there any other questions?
3664000	3666000	Let me ask you a question.
3670000	3672000	I joined later.
3672000	3674000	I heard that there is a requirement.
3674000	3676000	That is to say.
3676000	3678000	This algorithm has to be easy to explain.
3682000	3684000	Is there any specific quantifier?
3686000	3688000	What kind of algorithm is easy to explain?
3688000	3690000	Or what kind of algorithm is not easy to explain?
3692000	3694000	The specific quantification.
3696000	3698000	As far as I know, there should be no.
3698000	3700000	Because the explanation is for people to hear.
3700000	3702000	The so-called people can not accept this kind of explanation.
3704000	3706000	I don't have anything.
3706000	3708000	People can accept within 15 seconds.
3708000	3710000	It's called good.
3710000	3712000	Then it's not good for more than 15 seconds.
3712000	3714000	This kind of 15-second quantification.
3714000	3716000	That's probably the only thing I can say.
3718000	3720000	Our algorithm.
3720000	3722000	First of all.
3722000	3724000	Why is it in some cases.
3724000	3726000	Good performance, bad performance.
3726000	3728000	To make sense.
3728000	3730000	Then why did he give this job to you?
3730000	3732000	Instead of giving it to him.
3732000	3734000	To be able to say.
3734000	3736000	The weaknesses of the algorithm.
3736000	3738000	That's it.
3740000	3742000	So it's still a straightforward.
3742000	3744000	Explanation method.
3744000	3746000	There is no so-called indicator.
3746000	3748000	Explainable indicator.
3748000	3750000	Basically, there should be no.
3754000	3756000	I'll just say it again.
3756000	3758000	It sounds like this.
3758000	3760000	There may be two.
3760000	3762000	Indicators in different directions.
3762000	3764000	One is.
3764000	3766000	Uh.
3766000	3768000	The algorithm has to explain.
3768000	3770000	Why is this job given to A?
3770000	3772000	Not to B.
3772000	3774000	This thing itself.
3774000	3776000	It seems to correspond to.
3776000	3778000	Uh.
3778000	3780000	The algorithm itself is weak.
3780000	3782000	It can't be too complicated.
3782000	3784000	Maybe there are only two or three lines of weak.
3784000	3786000	It's called simple.
3786000	3788000	This is the first one.
3788000	3790000	Then the second one.
3790000	3792000	Uh.
3792000	3794000	It seems to be more like.
3794000	3796000	Uh.
3796000	3798000	Uh.
3798000	3800000	Or.
3800000	3802000	I'm not sure if it's the worst case.
3802000	3804000	But.
3804000	3806000	Or how would a certain case be divided?
3806000	3808000	Then this case.
3808000	3810000	To be simple enough.
3810000	3812000	Then.
3812000	3814000	Is it true that this algorithm is good or bad?
3814000	3816000	Is that what it means?
3816000	3818000	Hey, that's right.
3818000	3820000	Yes, it is.
3820000	3822000	Explainable includes.
3822000	3824000	Uh, you just talked about these different aspects.
3824000	3826000	Uh, that's why the algorithm does this.
3826000	3828000	Why in this step.
3828000	3830000	Give this job to that person.
3830000	3832000	Uh, this is an explanation.
3832000	3834000	And then.
3834000	3836000	Why less work or more work.
3836000	3838000	Or when the work is tight, the work is loose, etc.
3838000	3840000	Why in this situation.
3840000	3842000	Well done.
3842000	3844000	Yes, these two are the so-called explainable range.
3844000	3846000	That.
3846000	3848000	Uh, as I understand it.
3848000	3850000	If we are engineers.
3850000	3852000	The point of the engineer is to solve the problem.
3852000	3854000	So as long as the algorithm performs well.
3854000	3856000	Say again.
3856000	3858000	So the explanation may not be so important.
3858000	3860000	That's like now.
3860000	3862000	Deep learning.
3862000	3864000	Those neural networks, etc.
3864000	3866000	They're all accurate.
3866000	3868000	So far, people haven't been able to explain why they're so accurate.
3868000	3870000	Anyway, let's use it first.
3870000	3872000	The academic will slowly follow up from the explanatory aspect.
3872000	3874000	And then, oh, he's really so accurate.
3874000	3876000	There must be a reason.
3876000	3878000	That's why there's a way to copy it later.
3878000	3880000	So everyone will look for.
3880000	3882000	Explanation.
3882000	3884000	So the explanation of this kind of thing is also very important in academia.
3884000	3886000	So back to the question we just talked about.
3886000	3888000	Why is our question in.
3888000	3890000	Actually, it's also very important to explain.
3890000	3892000	It's just a special case.
3892000	3894000	It's because.
3894000	3896000	The object of our explanation is those.
3896000	3898000	The people in the back row.
3898000	3900000	They care about fairness.
3900000	3902000	A lot of times the care is not to be black box.
3902000	3904000	So this algorithm is for them.
3904000	3906000	They don't quite understand.
3906000	3908000	So I think it's a black box.
3908000	3910000	So you have to be able to explain when there's a dispute.
3910000	3912000	Why is it arranged like this?
3912000	3914000	It's probably like this.
3914000	3916000	But it's also.
3916000	3918000	These information methods.
3918000	3920000	Sometimes when you want to apply it in practice.
3920000	3922000	The problem is.
3922000	3924000	Uh.
3924000	3926000	Uh.
3926000	3928000	Can I ask you another question?
3928000	3930000	Okay.
3930000	3932000	Uh.
3932000	3934000	I remember when I was talking about the black box.
3934000	3936000	Yes.
3936000	3938000	There is an example.
3938000	3940000	Uh.
3940000	3942000	If I am the person who designed this algorithm.
3942000	3944000	Then I might.
3944000	3946000	I am a black box myself.
3946000	3948000	Then I will collude with some people.
3948000	3950000	Then this black box to them.
3950000	3952000	Especially cool or particularly bad.
3952000	3954000	Uh.
3954000	3956000	No one wants to be particularly bad and collude.
3956000	3958000	But.
3958000	3960000	But this is the design.
3960000	3962000	The black box.
3962000	3964000	Uh.
3964000	3966000	This can be explained.
3966000	3968000	It seems to be another concept.
3968000	3970000	Because.
3970000	3972000	Is there a collusion?
3972000	3974000	Or is there a black box?
3974000	3976000	Uh.
3976000	3978000	I think mathematically.
3978000	3980000	It seems to be more than this human brain.
3980000	3982000	Can accept.
3982000	3984000	Can the human brain accept this in 15 seconds?
3984000	3986000	This point can be more.
3986000	3988000	This.
3988000	3990000	To express in a mathematical way.
3990000	3992000	Or.
3992000	3994000	Or check if it meets such conditions.
3994000	3996000	I haven't thought of a specific way yet.
3996000	3998000	But I think.
3998000	4000000	Is there a collusion or is there a black box?
4000000	4002000	It seems to be easier.
4002000	4004000	Handled mathematically.
4004000	4006000	Uh.
4006000	4008000	That's pretty good, right?
4008000	4010000	Yes.
4010000	4012000	Okay.
4016000	4018000	I also want to ask a question.
4018000	4020000	Okay.
4020000	4022000	Uh.
4022000	4024000	You have this algorithm now.
4024000	4026000	What I want to ask is.
4026000	4028000	When it comes to food.
4028000	4030000	For example.
4030000	4032000	The question of the drinker.
4032000	4034000	You may be based on.
4034000	4036000	Data from the previous year.
4036000	4038000	You may know this ship.
4038000	4040000	This is the proportion of the ship.
4040000	4042000	How is it?
4042000	4044000	Your work.
4044000	4046000	What is the proportion of the workload?
4046000	4048000	How many big ships and how many small ships?
4048000	4050000	That is food.
4050000	4052000	Will be based on.
4052000	4054000	Because this is what I mean.
4054000	4056000	Your instance is not random.
4056000	4058000	That is food.
4058000	4060000	Will be based on such.
4060000	4062000	Is not random.
4062000	4064000	To design algorithms.
4064000	4066000	Of course.
4066000	4068000	That is.
4068000	4070000	For example, work to come.
4070000	4072000	He must have.
4072000	4074000	If Kaohsiung Harbor.
4074000	4076000	He came in the middle of the night.
4076000	4078000	Kaohsiung Harbor must be added.
4078000	4080000	So most ships.
4080000	4082000	Will come in during the day.
4082000	4084000	Then especially at 7 o'clock in the morning.
4084000	4086000	Will come at 8 o'clock in the morning.
4086000	4088000	More than a hundred a day.
4088000	4090000	Because most of the ships.
4090000	4092000	He will be out at 5 or 6 o'clock.
4092000	4094000	So.
4094000	4096000	You will definitely consider your work.
4096000	4098000	They are not random.
4098000	4100000	Consider those patterns.
4100000	4102000	You already know that at 7 o'clock in the morning.
4102000	4104000	The workload is particularly large.
4104000	4106000	Logically speaking.
4106000	4108000	Of course, it is around 7 o'clock.
4108000	4110000	There are a lot of people on duty there.
4110000	4112000	So it is necessary to do the corresponding.
4112000	4114000	Of course.
4114000	4116000	Can it be done on food?
4116000	4118000	Another thing.
4118000	4120000	For example, the people of Kaohsiung Harbor.
4120000	4122000	They are in turn.
4122000	4124000	There are rules for their shifts.
4124000	4126000	One person is 24 hours in turn.
4126000	4128000	Then.
4128000	4130000	We also discussed with them.
4130000	4132000	There are a lot of people at 7 o'clock in the morning.
4132000	4134000	A little more people.
4134000	4136000	For some reason.
4136000	4138000	But this doesn't seem to be the point.
4138000	4140000	The point is that what you said is definitely.
4140000	4142000	Will go to deal with.
4142000	4144000	That food algorithm.
4144000	4146000	Naturally.
4146000	4148000	From the one we just talked about.
4148000	4150000	A simple algorithm to make some adjustments.
4150000	4152000	Probably like this.
4152000	4154000	OK.
4154000	4156000	I think everyone should be very easy to understand.
4156000	4158000	That is.
4158000	4160000	The algorithm of writing paper and the algorithm of food.
4160000	4162000	Obviously there will be differences.
4162000	4164000	When the algorithm is to be discussed in academia.
4164000	4166000	Must be.
4166000	4168000	Relatively abstract situation.
4168000	4170000	Relatively.
4170000	4172000	Relatively.
4172000	4174000	Simple algorithm to deal with.
4174000	4176000	Simple does not mean simple.
4176000	4178000	Just the situation of food.
4178000	4180000	There are two principles.
4180000	4182000	There will be 58 exceptions.
4182000	4184000	So the food algorithm.
4184000	4186000	Most of the time is to deal with those exceptions.
4186000	4188000	Then deal with those patterns you can see.
4188000	4190000	Since there will be a lot of people at this time.
4190000	4192000	Come in.
4192000	4194000	You put a few more people there at this time.
4194000	4196000	Probably like this.
4196000	4198000	Yeah, but these things are definitely done.
4198000	4200000	It's just that the requirements of food and mathematics.
4200000	4202000	Will be different.
4202000	4204000	You will also run some on food.
4204000	4206000	Is it simulating?
4206000	4208000	Will.
4208000	4210000	Because.
4210000	4212000	Now we are talking about food.
4212000	4214000	It has nothing to do with paper.
4214000	4216000	These work hours on food are random.
4216000	4218000	You said you want to send someone to the sea.
4218000	4220000	Bring a boat in.
4220000	4222000	The historical data allows you to estimate.
4222000	4224000	This is about 68 minutes.
4224000	4226000	But in fact it may be 78 minutes.
4226000	4228000	It is possible for 52 minutes.
4228000	4230000	In fact, it does have distribution.
4230000	4232000	Distribution will be received.
4232000	4234000	Who is the queen?
4234000	4236000	Who is the drinker?
4236000	4238000	The size of the ship.
4238000	4240000	The impact of eating and stewing.
4240000	4242000	So it's really time to do.
4242000	4244000	Food algorithm.
4244000	4246000	You must do simulation.
4246000	4248000	To be more reasonable.
4248000	4250000	To evaluate the good and bad of the algorithm.
4250000	4252000	That's right.
4252000	4254000	This sounds complicated.
4254000	4256000	I think so too.
4256000	4258000	If you talk about food.
4258000	4260000	You can talk about it again.
4260000	4262000	There are a lot of strange things.
4262000	4264000	For example.
4264000	4266000	According to the reason.
4266000	4268000	What time should the ship leave the port?
4268000	4270000	After the drinker arrived at the scene.
4270000	4272000	I found out that his ship was still on and off.
4272000	4274000	This is also very normal.
4274000	4276000	Or sometimes the ship will break down.
4276000	4278000	Then this.
4278000	4280000	Then the tower has already arranged.
4280000	4282000	This ship comes out first.
4282000	4284000	Then that ship goes in again.
4284000	4286000	Sometimes someone will be in line.
4286000	4288000	So it will be messy later.
4288000	4290000	That's right.
4292000	4294000	This is also at the airport.
4294000	4296000	Many times similar problems.
4296000	4298000	Oh yeah.
4298000	4300000	Airport.
4300000	4302000	That is.
4302000	4304000	There are people in the airport.
4304000	4306000	Then the plane takes off.
4306000	4308000	So the problem is quite similar.
4308000	4310000	Then this.
4310000	4312000	Airport.
4312000	4314000	There will be a lot of unexpected things.
4314000	4316000	Yeah.
4316000	4318000	Most of the time.
4318000	4320000	There will be all kinds of if else.
4320000	4322000	If something happens.
4322000	4324000	You do this and do that.
4328000	4330000	OK.
4330000	4332000	Does anyone have any questions?
4334000	4336000	Actually I still have a question.
4336000	4338000	But I want to ask at the end.
4338000	4340000	Because it doesn't matter.
4340000	4342000	If there is no question to ask.
4342000	4344000	Then let's thank Professor Kong first.
4344000	4346000	Wonderful speech.
4346000	4348000	Thank you all.
4352000	4354000	Happy youth.
4354000	4356000	Let's turn off the video first.
4356000	4358000	OK.
