Hello, everyone. I'm very happy to be here for the fifth session of the Project TARA summer series.
Today's event is a scientific drawing sharing by Professor Liu Junlin.
I'll quickly introduce Professor Liu's background.
Professor Liu is currently studying electrical engineering at National Taiwan University.
He is currently working as an assistant professor.
In 2010, he obtained a master's degree in electrical engineering at National Taiwan University.
Later, he obtained a master's degree in telecommunications.
In 2018, he obtained a doctorate in Caltech.
His research interests include Sparse Error Signal Processing and Statistical Signal Processing.
Today, Professor Liu will share with us his experience in latex.
On behalf of the audience, I welcome Professor Liu's speech.
Now, I'll give Professor Liu the floor. Thank you.
Thank you very much for the introduction.
Did you hear my voice?
Okay, thank you.
Thank you for the invitation to Project TARA.
It's an honor for me to share my experience in latex.
In my presentation, I will introduce my experience in latex and some basic ideas.
If you have any questions or ideas during the presentation, please feel free to ask.
Now, let's move on to today's presentation.
Today is the fifth session of our summer special event.
We will talk about scientific drawing.
We will mainly use the latex tool.
Before we start, I would like to ask the audience,
Have you ever heard of the term latex?
Can you raise your hand or make a sound?
I see some of the audience in the chat have heard of it.
For those who have heard of it, they may think that latex is a tool for writing papers.
Why put it under the theme of scientific drawing?
This is what I want to share with you today.
Latex actually has some relative tools that can be used for scientific drawing.
I also have some relative experience.
Let's continue our presentation.
First of all, I will do a simple introduction.
Then I will take some time to introduce latex.
If some of the audience has not heard of it or is not familiar with some of the details,
I will take some time to introduce what latex is to the audience.
The third part is that I will specifically mention a term called PGFTIKZ.
It can be a good combination with latex.
I will also mention some related examples.
Finally, I will explain some related resources to you.
If you are interested, you can use it as a reference.
Today's topic is scientific drawing.
I believe that most of the audience is academic background.
So in the academic background,
you often need to do an academic expression.
What is academic expression?
You may need to write a paper.
Or you need to write a verbal report.
Today's occasion is more like a verbal report.
In some occasions, you will need to make a poster report.
These are some media that are academic in expressing some concepts or more complex ideas.
It may be in the form of an article, a video, or a poster.
In these forms,
this chart is actually a very efficient way of communication.
You can imagine that
when you have a more complex concept that needs to be explained,
if you use a lot of very long sentences to explain
and draw a simple chart,
everyone can see it clearly.
Usually, most readers prefer to use charts
to make a conceptual expression.
So if you want to add some charts to your post,
the next question is
which interface to use to generate this chart?
I believe I mentioned two weeks ago that
you can use Illustrator to draw some pretty charts.
The theme of this week is
I want to use the Latex language interface.
It actually has some corresponding kits and tools
to create some nice charts.
Let me quickly use a sentence to explain what Latex is.
It's actually a layout system.
What this layout system does is
a lot of text files
after a series of compilation processes
are laid out into the file files you see.
So in fact, like the video I reported today,
I also did it with Latex.
In fact, there are a lot of
text compilations behind it.
These text compilations will tell us
what words are in this page,
what color are these words,
what are the order of these items,
and so on.
It will compile such a file.
Latex is a layout software.
It can compile a file based on such compilations
to look like the one you see in the video.
Let's quickly talk about PGF and TIKZ.
PGF is actually called
Portable Graphics Format.
In fact, what everyone is familiar with
is the language of TIKZ.
It's actually a Latex kit.
This kit is for drawing some charts,
especially when you use a compilation method
to describe a chart.
There are some particularly useful methods.
In the remaining time,
I will also mention one called PGF Plots.
It is also a Latex kit.
It can draw some common charts.
After using it myself,
I feel like I want to share it with you.
So today I will focus on
introducing these tools
and some of my personal experience.
This is a general idea
that we will go through today.
Next, I will show you a chart.
Let me tell you about this chart first.
This chart is a chart I took
from my class video.
I want to use this chart to give you an example.
First of all, when you look at this chart,
you see a lot of words,
a lot of shapes, a lot of colors.
Here is an example of this chart.
In fact, to describe this chart,
it can be divided into several steps.
One step is the words marked above.
For example, you see a lot of words up here.
Then there are some relative numerals.
There are also some relative words and numerals below.
So if you want to express a concept clearly,
there may be some relative numbers of words above.
In this chart,
you can also see some relative shapes.
For example, you can see a lot of squares here.
Then there are a lot of regular squares lined up.
Of course, the focus of today's speech
is not to introduce these details.
I mainly use this chart to give you an example.
To produce this chart,
you need to have some descriptions of the shapes.
Then you may need to do something like
drawing a line to produce this chart.
So you can see that there are
all kinds of lines between different squares.
There are green lines, there are orange lines,
and there may be some relatively small words marked above.
So usually on this kind of expression,
there may be some colors
or some relative text styles.
These may be some points that you can focus on
when designing the chart.
You may see this chart and think
that it seems to contain a lot of details.
Let me explain to you first.
This is actually one of the pages of the last video.
The complete version actually has a relative animation.
That is to say, different colors,
different labels will gradually appear.
But here is just to give you a demonstration and reference.
If you have any questions during the listening process,
you are very welcome to make a question.
Then we can have a discussion at the moment.
If you don't have any questions,
let me introduce the tools now.
My takeaway today is that
I hope you will have some ideas
about how to produce this kind of chart
after listening to it.
Of course, how to produce it in detail
will be related to the instructions for this chart.
But I hope to inspire you to say
that if you want to produce this kind of chart,
how to do it with Latex?
First, let me introduce this Latex.
Latex, as I just mentioned,
is a layout software.
In fact, it is not a single software.
It has a relatively advanced layout system.
I listed a few here.
For example, if you have more research
on the details of this kind of Latex,
it is actually divided into a Plantex.
It is the most primitive version.
Later, someone based on this Plantex
to make some improvements,
such as improving Latex or PDF Latex
or some extension versions
that can be compiled into Chinese.
But these are all relative technical details.
It actually has a relative development history.
I think today's topic is more scientific.
So I probably won't do
a detailed analysis of these items.
What you hear is to get a concept first.
It's basically a...
If you have some writing experience,
you can think of it as
something like a compiler.
It stores some text information
and then does some interpretation and analysis
according to these text contents,
and then produces a relative file.
When you look at the paper,
in fact, a more common file format
should be a PDF format.
So this Latex,
it's a relatively common design,
that is, the step of producing a file is
that the user actually compiles a text file.
The alias of this text file is .tex.
And then after some proper compilation,
it can produce a PDF file.
This PDF is a bit like the PDF files
you see when you read the paper.
So this is a basic process of Latex.
In fact, if you are not familiar with
this process,
if you have used Word
to write documents,
this Word file basically means
that you have a full window screen.
In this window screen,
suppose you have a full window screen,
you can do something under this screen,
such as inputting text and inserting a picture,
or doing some editing.
This kind of compiler is more like
you can see the file at the moment of editing.
What does it look like?
This Latex is another kind.
It's a little bit more indirect.
When you are operating,
it's actually editing a text file.
The text file is just describing
what the final document should look like
in a narrative language.
So when you are editing a text file,
you have to use a little bit of your imagination,
that is, you give this command,
and then it might look like
This PDF is the last file you see.
So this editing aspect
may not be the same as
the Word you often use.
Let's continue.
Next, I'm going to make an example.
If you haven't touched Latex,
I'll give you a simple example.
Is this word too small?
The left side is TEX file.
After proper compilation,
a PDF file will be created.
If you think the picture is too small,
you can tell me,
and I can make some adjustments here.
Basically, a common TEX file
has a standard way to do it.
This standard way is like this.
That is, when you are narrating this file,
you have to explain
what kind of thing you produce.
Is it an article?
Or, for example,
there are some commands that can be generated,
such as a video.
It will need to define
what kind of thing I produce.
It has a command here called
draw a diagonal line, then document class,
followed by the type of file you want to produce.
It's very similar to writing,
that is,
in the process of editing,
you need to insert some packages appropriately.
These packages can tell you
what commands you can use next.
What commands are defined next?
Let me mention this a little bit.
The first package is a generation.
It will be used in the 16th line.
It is a command to generate a test text.
The command in the 5th line
is a relatively
if you want to input some mathematical equations,
some commands will be defined
in this AMS Math environment.
So, after the 18th line,
there are some mathematical equations.
So, in order to use these commands,
we need to introduce some relative packages.
Another one is that there is some information,
like this one.
I just mentioned that it is an article.
So, typical articles may need
a title information,
then the author's information,
and the date and time information.
It may need to be explained
with some relevant commands.
After setting up these environments,
the 10th line below
describes the content of your file.
So, like the 13th line,
it is a title of a file.
So, after entering this command,
the three parts on the right PDF will be generated,
that is, the title, the author's name and time.
The part of the 16th line
will generate some test text.
So, this is the part of the 16th line test text
in this place.
After the 19th line,
some mathematical formulas are generated.
These mathematical formulas are
under this text.
So, in practice,
the advantage is that
you can focus on
what you want to write.
For example, you focus on
the content you want to write,
and then the relative arrangement,
or the font,
or these words,
the mathematical formula,
the relative position.
This arrangement system
has a set of methods
to arrange these relative positions.
So, when you write this text,
you just need to focus on
the content of the text.
So, this is an example
to show you this LaTeX.
Let me explain to you
some of the corresponding tools of LaTeX.
I believe that
LaTeX has a lot of choices.
I mainly divide it into three categories.
One is called the editor.
It is mainly used to edit this text file.
The other is the layout system.
Then, the PDF file you produce
will also need some software
to look at the content of this PDF file.
So, if you want to set up
these environments on your computer,
you may need some relative...
For example, set up an editor,
a layout system,
and then choose a PDF viewer.
There are actually quite a few editors on the market.
There are some editors
specifically designed for LaTeX,
such as these below,
or some more common editors
that can only edit pure text,
such as these.
Because of time constraints,
I won't mention all of them.
After you have edited these text files,
I just mentioned that
you still need some editing systems.
These three are more common on the market.
These three can actually be downloaded for free
and installed on your computer.
They have some relative
system environment settings.
Because of time constraints,
I won't mention these environment settings.
After you have successfully edited,
there will be some relative
PDF file viewers.
Let me show you an example.
If I choose from here,
let's say I choose Visual Studio Code.
If you are writing code,
you may have heard of this editor.
Then use TextLive.
This computer has already installed TextLive.
Then there may be a PDF viewer at the end.
So I'll open a demo here.
Just this file.
This file is the same.
This is actually the same as a writer.
There will be some relative editing functions behind it.
Then this one just happens to be able to
go straight to this relative PDF function.
So if you want to edit,
let's say you want to add more things here.
Just add it directly.
If you edit,
it will be right here.
After editing,
the PDF file will be updated.
If you haven't used LaTeX,
it's actually a...
I feel like it's pretty close to writing.
It's just that the final result is a PDF file.
The above is mainly a basic introduction to LaTeX.
You may be curious.
So there are so many file editing tools.
So why do we have to use LaTeX?
Then I'm here to quickly mention
some of the features or advantages of LaTeX.
One of the features is that
it deals with this kind of mathematical problem.
Assuming that your report or paper
requires a lot of mathematical problems.
In fact, it has some advantages in using LaTeX.
For example,
like you want to enter the lower right corner of this
these mathematical formulas.
What about these mathematical formulas?
You can see that it's actually...
I'll give you an example here.
It may be related to some symbols of some triangular functions.
If you want to enter this content,
under LaTeX,
it actually opens a relative mathematical environment.
Then like these functions,
these sine, zeta,
or something like the denominator.
It will have some corresponding mathematical symbols.
For example, there are some sine, zeta,
or if you want to enter the denominator.
The denominator has some relative environments that can be entered.
Here's a strange symbol.
It actually has some relative symbols
that can be entered.
If your file has a lot of mathematical problems,
for example, there are very long mathematical inferences,
formula proofs, and so on.
Editing in text format
is actually easier to maintain.
Because when you look at the text,
you can just look at this symbol
and know what this symbol is.
And save these symbols
and translate them into our beautiful mathematical form.
Another thing I would like to mention by the way is
that LaTeX also has a feature
that is when you have a lot of things
that need to be interacted with and used.
For example,
in some related papers that may need a lot of mathematical terms,
sometimes it may use numbers to represent some equations.
Put it in the order of 1, 2, 3, 4.
Under the progress of the article,
we may need to say
which mathematical formula we use to push something.
So in the article,
we need to repeatedly mention some mathematical numbers.
LaTeX actually has some pretty good features.
You can use the interaction query command.
You can set up a label.
In the article,
when you want to quote this label,
you can use it as a variable.
Okay, let me tell you quickly
that this is a feature of LaTeX.
It has a very powerful function
in dealing with mathematical numbers.
Okay, another one is my personal experience.
It is a feature of LaTeX.
Its feature is that
when you are dealing with a very long file,
it has a special advantage.
What is a very long file?
For example,
if you want to write a master's thesis or a doctor's thesis,
at this time,
the number of pages may reach a lot of pages.
Or for example,
if you want to...
For example,
some textbooks you see on the market.
Textbooks may have hundreds or thousands of pages.
At this time,
you can try to think about
how to maintain these hundreds or thousands of pages.
In fact, LaTeX has a feature that I personally quite like.
That is,
it can split the content of the file
into different files to write.
So here's an example.
Suppose you have a file named man.tex now.
This can be seen as a main file.
This main file will describe that
there are two parts in this article.
One is introduction,
and the other is results.
That's the end of the description.
By the way,
this input file is...
The input command can be seen as
the content of this file is arranged.
You can do an understanding like this first.
So when LaTeX meets here,
it will grab the corresponding file.
So at this time,
when you write the introduction,
you just have to focus on the narrative of the introduction.
So this file is
specifically talking about the content of the introduction.
You can see that it has some test text.
Then there is a line of test text here.
This introduction,
I actually have a command here,
which is section.
It is actually one of the sections of this article.
Then the section is followed by the title of this section.
So if you want to focus on writing the introduction,
just open this file and focus on writing it.
If you want to write another section,
such as results,
just focus on opening this file
and focus on editing here.
So writing these files separately
is actually easier for you to maintain longer files.
There is another one that I personally think
LaTeX is a powerful function.
That is, if you are good at using the input command,
you can think of it as
the input is to grab a file from the outside
and paste it over.
So in fact, if you have some experimental data,
let's assume that these data are stored in text.
Suppose you use the program to calculate a number.
Suppose the number is 1, 2, 3.
Then you can store this number in a text file.
When you are editing the file,
you can insert the number content of this text file
in the right place.
You may ask,
why don't I just type 1, 2, 3 here?
The resulting file result is the same.
But from the perspective of maintenance,
I personally prefer to separate the file content
from the experimental data
to make a separate file.
Suppose you run different experiments later
and the data needs to be updated.
You just need to update this file.
You don't need to jump back to the result section
to change this number.
Especially if this number is used a lot.
This has appeared in many articles.
If you change one of the two,
and you forget to change one,
you may be challenged by the reviewer at this time.
So what do you show?
If you want to maintain a larger file
from a longer perspective,
these files may need to be changed and updated.
I personally think this kind of separate file is quite recommended.
I mentioned two features of LaTeX here.
Then I will talk about a Graphics
which is included in today's topic.
Use LaTeX to add some elements of scientific drawing.
If you search for LaTeX on the Internet,
most of the files will tell you
that there is an instruction called Include Graphics.
This instruction tells us that
this instruction needs a package called GraphicsX
to be used.
Simply put,
it will extract the file from your computer.
For example, there is a JPEG file at this time.
This JPEG file will be extracted
and placed in the proper place in your PDF file.
So I have an example here.
So he grabbed two pictures.
One is JPEG and the other is PNG.
He grabbed these two pictures to make a layout.
In fact, the left one is JPEG,
and the right one is PNG.
So now you have two pictures.
Because of time constraints,
I may not be able to explain each instruction.
If you have any questions later,
you are welcome to ask.
So this is basically an instruction
to insert two pictures.
When you draw a picture,
you need to pay attention to
that the picture is divided into Raster Scan.
You take a picture.
Suppose you have a picture on your hand.
Raster Graphics is a bit like
it takes a lot of different pixels in this picture
and records the color of each pixel.
So, for example, JPEG or PNG,
it basically stores the data behind
what the information of each pixel is.
Of course, it does some image processing
and some other processing.
But its basic spirit is
to store the contents of different colors.
But this kind of storage method
will have a disadvantage.
That is,
suppose you put this picture very large.
I may not be able to see it clearly here.
If you have JPEG or PNG on your hand,
you can try to put these pictures.
If you can't,
you can, for example,
zoom in on a place.
Keep zooming in, zooming in, zooming in.
At the end of the zoom,
you will see some blurry images on the edge.
The text may also become more blurry
and may not be able to be read.
In terms of academic documents,
this is actually a bad thing.
Because it may affect
our understanding of a concept
or judgment.
In fact, in academic documents,
it is more preferable to use
so-called vector graphics.
That is, when you are storing a picture,
you should actually use the so-called pixel picture.
When you describe these documents,
you should use,
now there is a picture.
What is its length and width?
Where is its location?
The coordinates of these points in it.
Or these lines,
are they round, square,
straight, or triangle?
Use these methods to describe a picture.
Academic documents are actually
more preferable to do this.
The commonly used vector graphics
is actually called an EPS file.
It is a commonly used vector graphics
file format.
So here you might think,
so if I use LaTeX,
I will just,
like the files generated by your program,
I will just save it as an EPS file
and insert it into it.
Theoretically, you can do this.
But have you ever thought about
some situations?
I will give you an example here.
These situations are actually
encountered in writing paper.
Suppose there are two pictures now,
the picture on the left and the picture on the right.
I will give you an example.
Suppose you want to present
a picture like this.
Then there may be a curve here,
and another curve here.
Then there may be some
corresponding legend,
that is,
what is number one and what is number two?
Number one may be one of the lines,
and number two may be one of the lines.
Have you ever encountered a situation
that when you print these pictures,
some parts of the picture,
such as some corresponding labels here,
it happens to be related to
some square numbers in your paper.
Suppose one of the curves
is generated by your source code number 1,
and the other one may be generated
by the source code number 3.
Suppose you need to encounter
a picture like this.
What about a picture like this?
If you first save it
to the EPS file in the city,
this number 1 and number 3
are actually already written in this file.
At that time, if you are editing the paper,
when this number 1 and number 3 change,
your picture will not do the corresponding update.
So this is actually a situation
that I had encountered when I was writing paper.
Then I tried to figure out
if there was a more systematic way
to deal with this problem.
This is what I'm going to talk about later,
a method of pgftikz.
It's my personal experience.
Do you have any questions here?
If you have any questions,
you can ask me by voice.
If not,
let me talk about the tool pgftikz.
First of all, when we talk about this tool,
let's go back to the picture thing.
In the field that is more related to me,
the pictures that are usually involved
are probably these two types.
One is called a system architecture picture.
It will describe
how your information is processed.
For example, you have done some add-ons,
do some processing of different systems,
and then put some relative information
to make some different connections.
The following picture is in my field of research,
which is a relatively common picture.
This is called a system architecture picture.
When you look at this picture,
it's actually quite simple.
It is mainly composed of several elements,
which are text, some lines,
and some different squares,
such as a rectangle or a circle.
It's probably just these elements.
It's not very complicated to describe.
So how to effectively produce this kind of relative picture
is actually a very interesting topic.
This is a system diagram.
The other one is the one I just mentioned,
which is a diagram.
For example, the one on my right is also a diagram.
Let's say it has two curves.
These two curves may have their own
horizontal and vertical axes,
and then there will be relative information points.
I'm just drawing a diagram here.
These information points may be represented
by a circle and a rectangle.
These two pictures
can actually be used with Lattice,
which is Lattice coupled with TIKZ or PGF plots,
which is a relative command,
to produce two such pictures directly in Lattice.
So next I'm going to explain to you
that if you want to produce these pictures,
you may need some relevant content.
Okay, let me show you the program.
TIKZ is mainly like this.
You can imagine it as a language
that describes the shape of the picture.
This language, as I just mentioned,
is a picture of a quantity.
So if you recall some of the concepts
of quantity that you may have learned before,
to describe a quantity,
it may be to describe its starting point and ending point,
and then connect them together.
Then I know how to describe different shapes.
This is to describe this triangle,
which is to mark the end point.
Or if it's a circle,
it may be to describe its circumference and radius.
So it's actually a combination of
describing the shape you produce.
So here's an example.
For example, if you want to draw a line,
its relative command is actually quite direct.
You just need to determine the relative coordinates.
The relative command is that you draw a straight line
and then draw it from the coordinate point 00
to the coordinate point 10.
So when you run the fourth line,
it will produce this line.
From 00 to 10,
it draws this line.
There are also some commands that say
you can decorate this line.
For example, you can draw a arrow.
Its relative command is that
you draw a shape like an arrow.
Draw a line and then a triangle.
The shape of this arrow starts from 00.
You can think of it as drawing an arrow
from 00 to 01.
So it's the arrow above.
So it's actually a pretty intuitive description language
to describe some geometric shapes.
For example, if you want to draw a triangle,
it's actually the relative coordinate point.
It's actually this point.
This point is our 11 coordinate point.
Then this point is 22.
Then this is 2.
So you draw these lines
and connect them.
There are some additional commands.
For example, you can adjust the thickness of the line,
adjust the format of the line,
or adjust the color of the line.
This is a demo for you.
Of course, it can draw something like a circle.
This means that the center of the circle is 1-1.
The center of the circle is 1-1,
and the radius is 0.5.
So it draws this.
You can also draw something relative.
For example, it draws a rectangle.
This rectangle,
its command is
to draw from one corner of this rectangle
to another corner.
So the upper left corner is 3-1,
and the lower right corner is 4-2.
So it's actually
as long as you determine the coordinate system,
and then determine some coordinate numbers,
it actually has some pretty intuitive language
to draw these pictures.
So this is basically the function of TIKZ drawing.
You can actually go back to
suppose you need to draw a picture.
If it's something like
some of the architecture pictures mentioned earlier,
it's actually nothing more than some lines, shapes,
and some combinations of text blocks.
So if you want to draw a text block,
it can use a command called node.
This node command,
you can think of it as
insert a text block,
and then insert it in which position.
For example, the command 22 is
inserted in 00.
Insert a text block in 00.
Then its text content is 00.
One thing that's special is that
in this place,
it's actually
the place where I marked in green,
it's actually in harmony with the lattice.
Simply put,
the grammar you can use in the lattice,
including the mathematical formula you use,
or the formula you want to quote,
or the reference number you want to quote,
can all be written directly here.
Then when the lattice is compiled,
it will automatically update this part.
Because of the time factor,
I may not go into detail about these commands.
Basically, you can create some text blocks.
Then I will tell you another concept.
What I personally like about TIK is that
it can make a very precise description of your chart.
What's the reason?
The reason is that it uses some
coordinate numbers behind it
to describe the shape of the chart.
So for example,
let's say I draw this picture on the right.
This picture on the right,
I have listed the corresponding commands.
Basically, it is inserted into a text block.
What I want to do is to insert a text block.
Then its content is this text box.
Then some corresponding styles.
Then its location is 0, 0 in the coordinate system.
Then a more special thing is that
you can take a name for this text block.
Take a name like this with a small quotation mark.
Then when you draw something else,
you can compare this name,
the name of the text box,
to describe its different locations.
For example, it's like 6 to 8 here.
It can target the north-west of the text box,
this top left point.
Draw a circle at this point on the left of the text box.
Then the radius of this circle is 0.05.
So you get this circle.
It is very accurately pasted on the top left corner of this text box.
You can draw it like the north side
or other places like this.
So you can draw these corresponding locations.
These locations can also be called anchor points.
That is, when you connect the lines,
you can directly force the specified line to connect to this point,
or this point, this point.
So this is the one for TIKZ.
Then I will explain a little bit about
some of my personal experience
and some of the experience of drawing this system architecture.
One of my personal favorites is that
it is actually quite compatible with Lattice.
For example, you are in this place of this text,
it is actually the direct input of the corresponding Lattice command.
So when you have a square number,
or some numbers,
or some special mathematical characters,
for example,
like you need a special character in this picture,
it can be presented perfectly.
Another one is the relative size.
These sizes are actually all described in numbers,
so it can describe the relative position very accurately.
So these two text boxes are actually the same size.
That is, the size of this square and this square is the same.
And they are actually completely aligned.
If you put the picture carefully,
you can see that the left half and the right half are curved,
and they are precisely aligned.
Why is that?
In fact, when you are writing,
you have already described this thing accurately.
So the picture he made
can be very precise in size and position.
Another one is that
I think this kind of picture is easier to maintain.
Simply put,
because there are these text boxes behind it,
so if you want to maintain it,
if you want to make all the circles bigger in this text box,
I don't want to use 0.05,
I want to make all these circles bigger.
In fact, it is to make some search replacements in the text box,
and replace all these 0.05.
Another one is my personal opinion.
Because it is a text box,
so if you have some software
that allows you to control the interface,
and if you have experience in using it,
it can be used in a way like git
to maintain your file or image,
how to make changes.
So this is what I think about drawing some pictures with TIKZ.
Next, let's talk about some plots.
This plot,
you can look at it as
some of the pictures we just drew in some experiments.
Some of the pictures presented in some experiments,
and then there may be some horizontal and vertical descriptions.
To produce this picture,
you can think about
what you actually did
when you produced this picture.
In fact, it doesn't matter,
you probably did three things.
The first thing is that
you worked very hard to do some experiments,
write some cities,
produce some experimental data,
or collect some experimental data.
So this should be a stage for you to do research,
which is to produce some experimental data.
The other stage is that
according to your experimental data,
you want to produce some more beautiful pictures,
and then maybe clearer,
some pictures that are more visible,
so this may be the second stage.
The third stage is that
when you produce the picture,
you need to present it in,
for example, your paper,
or your video,
or on your poster.
So there may be these three stages.
The stage that people use more often
may be that
they tend to use the same software
for stage 1 and stage 2.
For example,
what I use more often is MATLAB.
You can do some calculations in MATLAB,
and then it has some functions that can produce pictures.
After the picture, you can save it like this,
and then save it,
and then paste it on,
for example, your paper or slides.
This is a method.
If you have some other languages,
such as Python or R,
or GNU Plot,
it actually has a lot of different choices.
This is a method.
It's a more common method.
Here, I'd like to ask you a few situations.
These situations are actually
what you encounter when you do research.
If you encounter the following three situations,
the above methods may become a little bit
more cumbersome.
The first situation is that
if you have produced your picture,
and you have shown it to other people,
to your partner or advisor,
he thinks this picture
may need to add one more curve,
or compare it in one more way,
or add some more data points.
If you use a method like MATLAB,
you may have to go back to the original city,
and run the city again.
But think about it,
this seems to be a little bit,
some places are repeated.
In fact, in this picture,
there are some curves and some data
that you have dealt with before.
So you don't need to deal with it again.
What you need to do
is to deal with
what you haven't done yet.
So, is there anything
that can separate this thing?
It's like the first thing,
produce data and draw a picture.
Can these two things be handled separately?
When you have a new experiment,
you should focus on
producing new data.
Drawing a picture,
you should have a common interface
to update the picture.
Another situation is that
maybe when you are writing a paper,
suppose you change the mathematical symbol.
In the process of changing the paper,
maybe there are some mathematical symbols
Then you may change it to B.
It becomes that in this article,
everything with the symbol A
has to be changed to the symbol B.
If unfortunately,
this symbol B appears in one of the small places
in your picture,
then you have to go back and open the method
and manually change the place of A to B.
When there are a lot of things,
this thing is actually a little bit,
it's a little bit cumbersome.
Then there is another one,
which is the relative mathematical symbol.
If you have some drawing experience,
the picture produced by MATLAB,
the text below it is actually a certain symbol.
But if you use LaTeX to write a paper,
the shape of the symbol required by the paper
is actually sometimes another one.
It may not be the same as the MATLAB symbol.
So is there a way to say
that all the symbols are unified?
In addition,
if there is a mathematical shape here,
suppose some more special mathematical symbols,
can they appear in this picture
with the same shape?
In fact, I encountered some relative situations
in the drawing before.
After a little research,
I think I personally
use this method of PGF plot.
It is actually a drawing tool,
and it is based on TIKZ as a drawing function.
It is compatible with LaTeX.
It is a new drawing tool,
but its spirit of drawing
is actually similar to most drawing software.
You will need to produce relative labels,
legend, or some different line format.
This part of the spirit is close.
Because of time constraints,
I may quickly mention that
although this is a new tool,
but there are some ready-made conversion tools.
Suppose the picture produced by MATLAB
can have some converters
that can be converted to TIKZ language.
This is what I found when I was making the video,
that is, some pictures produced by Python
also have some related packages
that can be converted to the language of TIKZ.
Another experience I would like to mention is
that suppose you need to update your data.
As mentioned earlier,
suppose you have three experimental pictures,
and you may be asked to add another curve.
At this time,
you don't need to create a new picture.
My own approach is
that you should maintain a text file.
This text file describes the data
of the relative data points in the green one.
There may be a blue text file
that describes the numbers on the blue lines,
the numbers on these pictures.
At that time,
the pgfplot can directly use the input file method
to update these pictures at the same time.
I want to use the time later
to quickly tell you what its philosophy is.
If you are interested in these instructions,
we can discuss it later.
This is a pgfplot spirit.
You can notice that it is actually
compatible with the latest.
It is actually wrapped in the environment of TIKZ.
What it does is
there is an environment called begin and end access.
In this environment,
you will need to have a range to explain
some of the coordinates,
such as its width, its x-level,
what is the value, and then what is the y-level value.
Notice that this place
you can put the latest definition.
So you can make sure that its font is the same.
So if you look closely at this picture,
the font of this place
is the same as the font of my first video.
So if you update it like this,
it will automatically process these two
with the same font.
The addplot is a bit like
you have a curve, so it will produce
a curve of data1 here
and a curve of data2.
Here it is another
from an external text file.
This is an external text file.
It will define all the numbers
of these data points.
Grab these data
and paste it into this picture.
I want to tell you quickly.
Finally, let me tell you
what I think of Latex.
If you are new to Latex,
DIKZ, PJ Plot,
maybe you have never touched it
or maybe you don't have much experience,
I personally recommend Overleaf.
Overleaf is a platform
where you can write Latex online.
Basically,
some of the layout settings
have been set for you.
So it will be easier to write.
I will list some
relative reference resources later.
If you use Overleaf,
it actually has some
related instructions
and some documents
that you can learn Latex
in 30 minutes.
I also found some
if you want to do
a more detailed reference,
there are some like Wikibook
for reference.
If you are interested
in this kind of drawing,
there is a PGF manual.
You can click on it.
It has a pretty detailed
document
like this.
Let me show you.
It has a document
for DIKZ, PJ Plot
with more than 1,000 pages.
In fact, many of my instructions
are found from it.
The concept is also
taken from it.
Some websites,
like this website,
I think it's pretty good.
It has some examples of
drawing with PJ Plot.
So if you go in and have a look,
there are some pretty
maps.
It also lists the relevant instructions.
You can have a look.
Another one is that
there are also some online discussions on the Internet.
If you have any questions about this kind of text,
you can post it on it.
What's next?
I mainly list some
editors I mentioned earlier.
There are some relative websites
with relative editors.
Basically,
these editors should all be
downloaded from the website
and installed.
It's also like
if you want to set up
this editor environment
on your own computer,
there are actually several more common ones.
I also list the relevant information.
If you are interested in
this kind of map conversion, DIKZ,
I also list the relevant
websites here.
You can use it as a reference.
Okay, I think it's about time.
Finally, thank you for listening.
I hope you can
use LaTeX
in your research
and successfully express
the results you want to express.
Okay, I think
we'll stop here.
Thank you, Mr. Liu, for your wonderful sharing.
I just saw
in the chat
a few questions.
If you have any questions,
you're welcome to
open the microphone
and ask your question.
Or if your microphone is not convenient,
I can quickly go through
the comments.
There are a few comments
I saw,
for example, Yan
wants to know
how similar
LaTeX and HTML are.
Do you recommend using
text editor software?
Okay, thank you very much
for Yan's question.
I'll start with
the degree of similarity between
the two languages.
Here is a
user interface
for your reference.
In fact, if you
have a little research
on HTML,
HTML seems to
have something
at the beginning of a label
and something
at the end.
In LaTeX,
it's more like
using a line
and then a command,
and then put this thing
inside with this big quotation mark.
I feel
that its spirit is close.
For example,
if the thing you put in the back
is more complicated,
it will use some
begin-end environment
to wrap
the things here.
So
I think the spirit is
quite similar to
HTML.
It's
also close to what I mentioned earlier.
Its spirit is a bit like
writing
mathematics
or
a layout for
academic articles.
It may have more functions.
Let's see
the next one.
LaTeX.
Use
the source code
control software
to pursue
the editing problem.
Thank you.
I seem to have forgotten to answer a question.
Do you recommend using
text editor software
to understand text grammar?
I didn't seem to answer this one.
I can go back to
the previous one.
In my opinion,
as long as it's easy to use.
In fact,
these can be recognized.
The red ones
should be able to recognize text grammar.
Then
the right ones
may need to install some special
kits.
The last one is a
notebook in Windows.
So it may
not be able to have other kits.
The first few editors
actually have corresponding kits.
I can
demo it for you.
I use Visual Studio Code here.
Then it has a
package called
LaTeX Workshop.
It actually
writes a little bit like
what you see here with
relative
conforming
instructions.
Good.
I don't know if I can turn on the setting.
Well,
I usually
change it directly.
Well,
if you are interested,
you can actually study it a little bit,
that is,
I usually
change it directly.
Well,
if you are interested,
you can actually study it a little bit,
that is,
you can actually study it a little bit,
that is,
Visual Studio Code with
Latest Workshop.
In fact,
this kit will help you
set things up.
So when you type directly,
you can begin,
and then it will be generated directly.
So,
although it is a text editor,
it is suitable for
when you want to use it,
sometimes
it seems that
some environments can be selected.
Well,
I believe that
these I marked can actually
do similar functions.
If it is on the left,
it should be preset,
and there are some relatively
grammatical instructions.
Then I go back to
the third question.
Well,
if you need more people to edit a document,
that is,
directly using the source code control software to track
or there is a test dedicated maintenance platform.
Well,
if you want to be
simple and easy to use,
that is, you don't need to do any settings,
I personally recommend Overleaf.
It is that you
open an account in Overleaf,
you can open a project
under this account,
and then you can share it with others.
If other people are editing,
in fact,
I remember that there are some on the right,
you can do some discussions,
you can do some comments.
So personally, I think Overleaf
is actually a relatively
friendly interface
for beginners.
Well,
if you use the source code control software
to edit documents,
that's fine.
If you have,
I just mentioned Git,
it should be mentioned in Overleaf.
Here I mentioned Git,
that is, it is actually a version control software.
You can imagine it
as controlling
a group of text files,
which changes it made.
If you do
the right maintenance,
these changes can be
shared between multiple users.
I am using
Git,
but after I write a paragraph,
I will commit it to
Git,
that is, I am now drawing to this extent,
and then save it first.
If there are more users,
I believe that Git
can also do it.
The dedicated maintenance platform
may be Overleaf.
So it is more like
it depends on
which interface
users like to use.
I don't know if I have answered
Ian's question.
At this stage,
I would like to
stop the recording.
If you still have time
and have questions,
you are welcome to
discuss freely.
Thank you for your sharing.
