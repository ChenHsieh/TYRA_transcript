WEBVTT

00:00.000 --> 00:02.000
Both are fine.

00:02.000 --> 00:04.000
Do you want to introduce again?

00:04.000 --> 00:06.000
It's okay, no need.

00:06.000 --> 00:08.000
Let's start.

00:08.000 --> 00:11.000
I hope the internet is okay later.

00:11.000 --> 00:15.000
If it breaks again, let me know.

00:15.000 --> 00:18.000
Is the full screen screen okay now?

00:18.000 --> 00:20.000
Okay.

00:20.000 --> 00:23.000
Okay, I'll start right away.

00:23.000 --> 00:27.000
Thanks to the host, Wei Zhe, for the introduction.

00:27.000 --> 00:31.000
I'm Pan Haoren from the Department of Chemical Engineering.

00:31.000 --> 00:35.000
The topic of today's report is related to my research.

00:35.000 --> 00:40.000
It is a high-efficiency algorithm for the optimization of P4 alkynes.

00:40.000 --> 00:44.000
Before I start talking about today's topic,

00:44.000 --> 00:46.000
I want to clarify one thing.

00:46.000 --> 00:48.000
Because when you hear the word alkene,

00:48.000 --> 00:50.000
if you are a material background,

00:50.000 --> 00:52.000
or you may be a chemistry background,

00:52.000 --> 00:54.000
or you are a chemistry background,

00:54.000 --> 00:56.000
or you are a chemistry background,

00:56.000 --> 00:58.000
you may want to discuss,

00:58.000 --> 01:01.000
for example, the problem of alkyne arrangement,

01:01.000 --> 01:03.000
for example, some morphology,

01:03.000 --> 01:06.000
for example, I may want to play SRD,

01:06.000 --> 01:08.000
and so on.

01:08.000 --> 01:11.000
But in the field of procedural engineering,

01:11.000 --> 01:14.000
that is, in the field of PSE,

01:14.000 --> 01:19.000
we are referring to any process that can be obtained from the solution.

01:19.000 --> 01:22.000
So today, even if it is just a sedimentary reaction,

01:22.000 --> 01:25.000
we will also broadly call it crystallization.

01:25.000 --> 01:28.000
Under this definition,

01:28.000 --> 01:33.000
this crystallization is a process of separation and purification.

01:33.000 --> 01:36.000
It can be done in a continuous way,

01:36.000 --> 01:39.000
or in a batch way.

01:39.000 --> 01:43.000
SRD is the so-called supersaturation.

01:43.000 --> 01:47.000
It can be obtained in the following four ways.

01:47.000 --> 01:52.000
What we are discussing today is the crystallization of batches.

01:52.000 --> 01:54.000
Most of the crystallization of batches

01:54.000 --> 01:58.000
is to make some high-added-value compounds,

01:58.000 --> 02:00.000
such as specialized chemicals,

02:00.000 --> 02:02.000
such as food additives,

02:02.000 --> 02:06.000
such as drugs, and so on.

02:06.000 --> 02:09.000
Compared to this continuous way,

02:09.000 --> 02:12.000
its operability is relatively large.

02:12.000 --> 02:16.000
It can also deal with some more difficult-to-deal with systems,

02:16.000 --> 02:19.000
such as toxic chemicals,

02:19.000 --> 02:23.000
such as the higher viscosity of the sedimentary solution,

02:23.000 --> 02:25.000
such as the higher viscosity of the sedimentary solution,

02:25.000 --> 02:27.000
such as the higher viscosity of the sedimentary solution,

02:27.000 --> 02:31.000
Such crystallization has two basic mechanisms,

02:31.000 --> 02:36.000
which are called nucleation, synthesis, and crystal growth.

02:36.000 --> 02:42.000
Nucleation means the new crystal body is generated.

02:42.000 --> 02:44.000
When a new crystal body is generated,

02:44.000 --> 02:46.000
its volume is basically less than zero.

02:46.000 --> 02:50.000
Crystal growth means that a new crystal body exists in a batch.

02:50.000 --> 02:53.000
Because of the high-added-value compounds,

02:53.000 --> 02:54.000
it grows bigger and bigger.

02:54.000 --> 02:56.000
This is what we call crystal growth.

02:56.000 --> 03:02.000
Nucleation can be divided into several different mechanisms.

03:02.000 --> 03:05.000
The first one is homogeneous primary nucleation.

03:05.000 --> 03:08.000
It is a spontaneous reaction in thermodynamics.

03:08.000 --> 03:12.000
Nucleation can only occur in a high-added-value system.

03:12.000 --> 03:16.000
The second one is heterogeneous primary nucleation.

03:16.000 --> 03:22.000
It is a reaction of different particles.

03:22.000 --> 03:26.000
For example, it may be caused by some pink particles.

03:26.000 --> 03:29.000
The third one is secondary nucleation.

03:29.000 --> 03:35.000
It means that nucleation is generated on the surface of the existing crystal body.

03:35.000 --> 03:38.000
For example, in a batch, the crystal body may collide with each other.

03:38.000 --> 03:40.000
There will be some friction.

03:40.000 --> 03:44.000
When the friction occurs, its volume is basically less than zero.

03:44.000 --> 03:48.000
This is what we call nucleation.

03:51.000 --> 03:52.000
Let me give you an example.

03:52.000 --> 03:54.000
If there is a batch today,

03:54.000 --> 03:57.000
there is no crystal body in it at the beginning.

03:57.000 --> 03:59.000
In the early stage of this batch,

03:59.000 --> 04:02.000
because we want to have the crystal body from nothing,

04:02.000 --> 04:04.000
it is called primary nucleation.

04:04.000 --> 04:06.000
However, in the later stage,

04:06.000 --> 04:08.000
because there are more crystal bodies,

04:08.000 --> 04:10.000
crystal growth and secondary nucleation

04:10.000 --> 04:12.000
will become the main mechanism.

04:12.000 --> 04:15.000
In the operation of a batch,

04:15.000 --> 04:18.000
we can usually add some crystals at the beginning,

04:18.000 --> 04:20.000
which are called seed crystals,

04:20.000 --> 04:22.000
or simply called seed.

04:22.000 --> 04:25.000
The reason is that these seeds can quickly

04:25.000 --> 04:27.000
exhaust the over-homogeneity.

04:27.000 --> 04:29.000
Once it is exhausted,

04:29.000 --> 04:33.000
it can inhibit the so-called primary nucleation.

04:33.000 --> 04:35.000
What is the advantage of this?

04:35.000 --> 04:38.000
The advantage is that primary nucleation has a feature

04:38.000 --> 04:40.000
called stochastic,

04:40.000 --> 04:43.000
which means that it is random.

04:43.000 --> 04:47.000
So in this operation,

04:47.000 --> 04:51.000
you can make this process more stable.

04:53.000 --> 04:59.000
Next, let's talk about how to measure the quality of a product.

04:59.000 --> 05:02.000
Of course, we know that the purity of the product

05:02.000 --> 05:04.000
is a very important indicator.

05:04.000 --> 05:06.000
But in addition to purity,

05:06.000 --> 05:08.000
another important indicator is the so-called

05:08.000 --> 05:12.000
crystal size distribution, or CSD.

05:12.000 --> 05:16.000
A good CSD usually has the following features.

05:16.000 --> 05:18.000
For example, it must be single-seam.

05:18.000 --> 05:24.000
For example, the ratio of fine particles should be lower.

05:24.000 --> 05:27.000
Next, because in some circumstances,

05:27.000 --> 05:29.000
for example, if I want to make a drug today,

05:29.000 --> 05:32.000
I would like this drug to be in the human body.

05:32.000 --> 05:36.000
The conclusion curve is a curve that we want.

05:36.000 --> 05:39.000
In this case, I may need to specify

05:39.000 --> 05:41.000
the average filter of a product

05:41.000 --> 05:44.000
and the so-called variance of this CSD.

05:44.000 --> 05:48.000
If we can find a way to design a process

05:48.000 --> 05:50.000
to make the average filter and variance of this product

05:50.000 --> 05:52.000
meet such a requirement,

05:52.000 --> 05:55.000
it will also be a situation that we want.

05:55.000 --> 05:59.000
Of course, if today's CSD is not very good,

05:59.000 --> 06:01.000
it may cause some problems.

06:01.000 --> 06:06.000
For example, if today's product has the so-called double-seam CSD,

06:06.000 --> 06:10.000
or its filter distribution,

06:10.000 --> 06:13.000
or its fine particles are too high,

06:13.000 --> 06:15.000
it may cause the following problems,

06:15.000 --> 06:18.000
including excessive filter resistance,

06:18.000 --> 06:21.000
including the need to use a lot of washing liquid

06:22.000 --> 06:24.000
to clean the solid,

06:24.000 --> 06:27.000
or even when it is sent out,

06:27.000 --> 06:31.000
these small particles may be directly stuck on the tube wall.

06:31.000 --> 06:34.000
These are all situations that we don't want to see.

06:34.000 --> 06:37.000
So basically, what we want to do is

06:37.000 --> 06:41.000
to suppress some excessive nucleation.

06:44.000 --> 06:46.000
Next, if we talk about some

06:46.000 --> 06:50.000
CSD control strategies,

06:50.000 --> 06:52.000
it can be divided into two categories.

06:52.000 --> 06:55.000
The first category is what we call model-free feedback control.

06:55.000 --> 07:01.000
Its idea is that it will use a so-called feedback control loop,

07:01.000 --> 07:04.000
and some corresponding

07:04.000 --> 07:06.000
self-made analytical technology,

07:06.000 --> 07:08.000
the so-called PAT,

07:08.000 --> 07:10.000
to implement this.

07:10.000 --> 07:13.000
Basically, such a control strategy,

07:13.000 --> 07:16.000
I just need to know some basic features of the system,

07:16.000 --> 07:19.000
for example, what kind of filter is OK.

07:19.000 --> 07:22.000
The so-called model-free model here

07:22.000 --> 07:26.000
refers to some kinetic energy of crystal growth and nucleation.

07:26.000 --> 07:29.000
When we use this type of strategy,

07:29.000 --> 07:33.000
we don't need to know the kinetic energy of these growth factors.

07:33.000 --> 07:37.000
One of the so-called model-free strategies

07:37.000 --> 07:39.000
is called supersaturation control.

07:39.000 --> 07:43.000
Some people call it concentration control.

07:43.000 --> 07:45.000
What it means is that

07:45.000 --> 07:47.000
in the entire batch,

07:47.000 --> 07:50.000
we control the saturation in a set value.

07:50.000 --> 07:53.000
Of course, it will need some corresponding

07:53.000 --> 07:56.000
analytical technology.

07:56.000 --> 07:58.000
For example, like this,

07:58.000 --> 08:01.000
it will need an online concentration measurement.

08:01.000 --> 08:05.000
For example, you can use FTIR to do this.

08:05.000 --> 08:08.000
This strategy is not bad,

08:08.000 --> 08:10.000
because we don't need too much information.

08:10.000 --> 08:12.000
But there is a drawback.

08:12.000 --> 08:18.000
We still can't design this product's CSD directly.

08:18.000 --> 08:22.000
Because it doesn't have a model to describe.

08:22.000 --> 08:24.000
So in contrast,

08:24.000 --> 08:27.000
another method is called model-based control.

08:27.000 --> 08:31.000
It basically uses a function called population density function

08:31.000 --> 08:34.000
to describe this CSD.

08:34.000 --> 08:38.000
How does this CSD change in the batch?

08:38.000 --> 08:42.000
We will use a population balance equation

08:42.000 --> 08:45.000
to describe it.

08:45.000 --> 08:47.000
In this strategy,

08:47.000 --> 08:49.000
we usually multiply optimization problems

08:49.000 --> 08:53.000
to find the so-called best control strategy.

08:53.000 --> 08:56.000
The target function may include some

08:56.000 --> 08:57.000
batch time,

08:57.000 --> 09:02.000
or some characteristics of product CSD statistics.

09:02.000 --> 09:05.000
Decision variable is the so-called

09:05.000 --> 09:08.000
control strategy.

09:08.000 --> 09:12.000
For example, it may be related to the temperature trajectory.

09:12.000 --> 09:15.000
Or I may consider some so-called seed recipes,

09:15.000 --> 09:19.000
which is how many seeds I want to add

09:19.000 --> 09:22.000
and its average filter, and so on.

09:22.000 --> 09:26.000
One of the challenges of using this model-based control

09:26.000 --> 09:29.000
is that its burden will be greater.

09:29.000 --> 09:32.000
Because the so-called PBE just now

09:32.000 --> 09:34.000
belongs to a distributed city,

09:34.000 --> 09:37.000
so its computational burden is relatively large.

09:37.000 --> 09:41.000
This is also one of the purposes of our research.

09:41.000 --> 09:45.000
We hope to use some high-performance computational methods

09:45.000 --> 09:49.000
to improve the optimization of these P4 solution.

09:49.000 --> 09:51.000
We will analyze several problems,

09:51.000 --> 09:55.000
including some competition between target functions, trade-off.

09:55.000 --> 10:00.000
Next, we want to find the seed recipe design

10:00.000 --> 10:04.000
and some experience rules of control strategy,

10:04.000 --> 10:06.000
the so-called rule of thumb.

10:06.000 --> 10:08.000
Next, we will also explore

10:08.000 --> 10:12.000
if what we use today is the seed coding process,

10:12.000 --> 10:17.000
what impact will it have on the control of CSD?

10:17.000 --> 10:21.000
Next, we want to introduce some theories.

10:21.000 --> 10:24.000
At the beginning, we want to introduce the so-called

10:24.000 --> 10:26.000
population density function.

10:26.000 --> 10:29.000
As mentioned earlier, it is used to describe CSD.

10:29.000 --> 10:32.000
Assuming that there is a system today,

10:32.000 --> 10:37.000
we only use the feature length of a system to describe it.

10:37.000 --> 10:40.000
For example, if the solution of this system today

10:40.000 --> 10:42.000
is close to the sphere,

10:42.000 --> 10:45.000
then we can use the diameter or radius

10:45.000 --> 10:47.000
as the feature length.

10:47.000 --> 10:50.000
If there is such a description,

10:50.000 --> 10:54.000
we put the pdf to l,

10:54.000 --> 10:56.000
and the result will be

10:56.000 --> 10:59.000
the solution number in the batch.

10:59.000 --> 11:04.000
Next, we can define a pdf moment.

11:04.000 --> 11:07.000
This moment is not a moment.

11:07.000 --> 11:10.000
It has some other translations in physics,

11:10.000 --> 11:14.000
but I don't think it fits our situation.

11:14.000 --> 11:17.000
So I just call it moment.

11:17.000 --> 11:19.000
I won't translate it.

11:19.000 --> 11:21.000
The definition of moment is as follows.

11:21.000 --> 11:23.000
From mu0 to mu3,

11:23.000 --> 11:25.000
these moments all have corresponding physical meanings.

11:25.000 --> 11:30.000
The physical meaning of mu3 is the total volume of the solid.

11:30.000 --> 11:34.000
After we define the pdf,

11:34.000 --> 11:38.000
we can write the corresponding population balance equation.

11:38.000 --> 11:41.000
In this study, we have some assumptions,

11:41.000 --> 11:44.000
including the theory in the batch,

11:44.000 --> 11:46.000
which is uniform,

11:46.000 --> 11:48.000
and its volume is constant.

11:48.000 --> 11:51.000
We also ignore some phenomena,

11:51.000 --> 11:53.000
such as the collision of solids

11:53.000 --> 11:55.000
and the splitting of solids.

11:55.000 --> 11:57.000
This is called crystal breakage.

11:57.000 --> 11:59.000
Or the collision of solids and solids.

11:59.000 --> 12:01.000
This is called aggregation.

12:01.000 --> 12:04.000
Let's ignore these assumptions.

12:04.000 --> 12:07.000
Next is the volume of the solid.

12:07.000 --> 12:09.000
It has a volume of 0 at the beginning.

12:09.000 --> 12:11.000
Under these assumptions,

12:11.000 --> 12:15.000
we can get a corresponding ppe.

12:15.000 --> 12:18.000
As you can see, it is a Pythagorean equation.

12:18.000 --> 12:20.000
Later, we will talk about

12:20.000 --> 12:23.000
the physical meaning of the equation

12:23.000 --> 12:26.000
and some calculations.

12:26.000 --> 12:30.000
If we look at the ppe,

12:30.000 --> 12:32.000
we can see that it contains

12:32.000 --> 12:36.000
the momentum of growth and dissolution.

12:36.000 --> 12:40.000
Therefore, we need to introduce the part of momentum.

12:40.000 --> 12:42.000
As mentioned earlier,

12:42.000 --> 12:46.000
the driving force of the crystal is super saturation.

12:46.000 --> 12:50.000
There are many different definitions of super saturation.

12:50.000 --> 12:52.000
Here are the two most common ones,

12:52.000 --> 12:55.000
the definition of relative and absolute.

12:55.000 --> 13:00.000
We can see that the definition of super saturation

13:00.000 --> 13:03.000
is related to the difference between the density of the solution

13:03.000 --> 13:05.000
and the density of the saturation.

13:05.000 --> 13:07.000
The density of the solution itself

13:07.000 --> 13:09.000
can be calculated by mass balance.

13:09.000 --> 13:11.000
Let's assume that the ppe function

13:11.000 --> 13:14.000
is a function of temperature.

13:15.000 --> 13:17.000
Let's assume that

13:17.000 --> 13:22.000
the ppe function is a function of temperature.

13:22.000 --> 13:26.000
Therefore, the primary nucleation can be ignored.

13:26.000 --> 13:28.000
In this case,

13:28.000 --> 13:34.000
we can define the momentum of growth rate and nucleation rate.

13:34.000 --> 13:37.000
At present, there is no complete theory

13:37.000 --> 13:41.000
to describe this phenomenon in the academic world.

13:41.000 --> 13:44.000
Therefore, we still use some experimental methods.

13:44.000 --> 13:46.000
What we can notice is that

13:46.000 --> 13:48.000
the growth rate is divided into two parts.

13:48.000 --> 13:51.000
The first part is only related to super saturation.

13:51.000 --> 13:55.000
The second part is only related to the size of the crystal.

13:55.000 --> 13:58.000
If the second part is equal to 1,

13:58.000 --> 14:00.000
we call it size-independent growth.

14:00.000 --> 14:02.000
If the second part is not equal to 1,

14:02.000 --> 14:05.000
we call it size-dependent growth.

14:05.000 --> 14:07.000
For most systems,

14:07.000 --> 14:10.000
the nucleation rate is more sensitive to super saturation

14:10.000 --> 14:13.000
than the growth rate.

14:13.000 --> 14:16.000
Therefore, the parameter b is greater than g.

14:16.000 --> 14:18.000
Therefore, the parameter b is greater than g.

14:18.000 --> 14:20.000
Next, I will introduce

14:20.000 --> 14:22.000
how to solve the ppe function.

14:22.000 --> 14:24.000
At the beginning,

14:24.000 --> 14:26.000
we will divide the ppe function into two parts.

14:26.000 --> 14:28.000
Mathematically,

14:28.000 --> 14:31.000
we call it homogeneous and non-homogeneous.

14:31.000 --> 14:33.000
Physically,

14:33.000 --> 14:37.000
we call it homogeneous and non-homogeneous.

14:37.000 --> 14:40.000
Why do we need to divide it into two parts?

14:40.000 --> 14:42.000
There are two reasons.

14:42.000 --> 14:44.000
The first reason is that

14:44.000 --> 14:47.000
it is more convenient to apply some experimental methods.

14:47.000 --> 14:49.000
The second reason is that

14:49.000 --> 14:52.000
we can separate the seed and nucleation

14:52.000 --> 14:55.000
to make a quantitative description.

14:55.000 --> 14:57.000
As I just said,

14:57.000 --> 14:59.000
we want to suppress nucleation.

14:59.000 --> 15:01.000
Therefore, we make a quantitative description

15:01.000 --> 15:03.000
to make a quantitative description.

15:03.000 --> 15:05.000
Before we start to talk about

15:05.000 --> 15:07.000
some quantitative methods,

15:07.000 --> 15:09.000
let's take a look at a simple example.

15:09.000 --> 15:11.000
In this example,

15:11.000 --> 15:13.000
the ppe function has a so-called analysis solution.

15:13.000 --> 15:15.000
By the way, let's understand

15:15.000 --> 15:17.000
the physical meaning of some of the functions.

15:17.000 --> 15:19.000
Let's assume that there is a system

15:19.000 --> 15:21.000
whose growth rate and nucleation rate

15:21.000 --> 15:23.000
are constant.

15:23.000 --> 15:25.000
In this way,

15:25.000 --> 15:27.000
we can write the corresponding ppe

15:27.000 --> 15:29.000
and the corresponding analysis solution.

15:29.000 --> 15:31.000
How can we judge the physical meaning

15:31.000 --> 15:33.000
of the analysis solution?

15:33.000 --> 15:35.000
If there are some seed crystals,

15:35.000 --> 15:37.000
the pdf at the beginning

15:37.000 --> 15:39.000
looks like an orange.

15:39.000 --> 15:41.000
After a while,

15:41.000 --> 15:43.000
they will grow bigger.

15:43.000 --> 15:45.000
How big will they grow?

15:45.000 --> 15:47.000
The size will increase

15:47.000 --> 15:49.000
the growth rate times batch time.

15:49.000 --> 15:51.000
Therefore,

15:51.000 --> 15:53.000
the yellow part

15:53.000 --> 15:55.000
is directly shifted to the right

15:55.000 --> 15:57.000
to shift the growth rate times batch time.

15:57.000 --> 15:59.000
In the case of nucleation,

15:59.000 --> 16:01.000
the size of the seed crystal

16:01.000 --> 16:03.000
at the beginning

16:03.000 --> 16:05.000
will also be the same

16:05.000 --> 16:07.000
as the growth rate times batch time.

16:07.000 --> 16:09.000
Therefore,

16:09.000 --> 16:11.000
the pdf will look like this.

16:11.000 --> 16:13.000
Of course,

16:13.000 --> 16:15.000
this is just a special case.

16:15.000 --> 16:17.000
Let's talk about

16:17.000 --> 16:19.000
some commonly used quantitative methods.

16:19.000 --> 16:21.000
In general,

16:21.000 --> 16:23.000
there are two types of quantitative methods.

16:23.000 --> 16:25.000
The first type is called

16:25.000 --> 16:27.000
the method of moment.

16:27.000 --> 16:29.000
There are two versions,

16:29.000 --> 16:31.000
standard and quadrature.

16:31.000 --> 16:33.000
In the standard version,

16:33.000 --> 16:35.000
ppe is converted to ODE.

16:35.000 --> 16:37.000
It can only be used

16:37.000 --> 16:39.000
in the size-independent

16:39.000 --> 16:41.000
kinetic system.

16:41.000 --> 16:43.000
In the quadrature version,

16:43.000 --> 16:45.000
ppe is converted to

16:45.000 --> 16:47.000
the differential algebraic equation.

16:47.000 --> 16:49.000
In other words,

16:49.000 --> 16:51.000
there is a linear equation

16:51.000 --> 16:53.000
of the differential equation

16:53.000 --> 16:55.000
that can only be used

16:55.000 --> 16:57.000
in the size-independent

16:57.000 --> 16:59.000
kinetic system.

16:59.000 --> 17:01.000
The advantage of this method

17:01.000 --> 17:03.000
is that it can quickly

17:03.000 --> 17:05.000
solve the moment,

17:05.000 --> 17:07.000
but it can't find

17:07.000 --> 17:09.000
the complete pdf.

17:09.000 --> 17:11.000
Let's take a look at

17:11.000 --> 17:13.000
the standard version.

17:13.000 --> 17:15.000
The ODE

17:15.000 --> 17:17.000
will look like this.

17:17.000 --> 17:19.000
As you can see,

17:19.000 --> 17:21.000
the seed and nucleation

17:21.000 --> 17:23.000
are solved.

17:23.000 --> 17:25.000
The second method

17:25.000 --> 17:27.000
involves

17:27.000 --> 17:29.000
some linear methods.

17:29.000 --> 17:31.000
There are many

17:31.000 --> 17:33.000
methods,

17:33.000 --> 17:35.000
including the method of

17:35.000 --> 17:37.000
characteristic,

17:37.000 --> 17:39.000
method of classes,

17:39.000 --> 17:41.000
or the method of

17:41.000 --> 17:43.000
finite volume.

17:43.000 --> 17:45.000
The advantage of this method

17:45.000 --> 17:47.000
is that it can

17:47.000 --> 17:49.000
keep the pdf format

17:49.000 --> 17:51.000
and the pdf format

17:51.000 --> 17:53.000
will be based on

17:53.000 --> 17:55.000
the accuracy of

17:55.000 --> 17:57.000
the CSD analysis

17:57.000 --> 17:59.000
or the accuracy of

17:59.000 --> 18:01.000
the numerical method.

18:01.000 --> 18:03.000
It will need a lot of

18:03.000 --> 18:05.000
discretization points,

18:05.000 --> 18:07.000
which will lead to

18:07.000 --> 18:09.000
a greater burden

18:09.000 --> 18:11.000
on the calculation.

18:11.000 --> 18:13.000
In this study,

18:13.000 --> 18:15.000
we use the NOCH method.

18:15.000 --> 18:17.000
The idea is that

18:17.000 --> 18:19.000
the characteristic curve

18:19.000 --> 18:21.000
is represented

18:21.000 --> 18:23.000
by the family

18:23.000 --> 18:25.000
of ODE.

18:27.000 --> 18:29.000
These are some

18:29.000 --> 18:31.000
common numerical methods.

18:31.000 --> 18:33.000
I'd like to introduce

18:33.000 --> 18:35.000
a method that

18:35.000 --> 18:37.000
greatly reduces

18:37.000 --> 18:39.000
the burden on the calculation.

18:39.000 --> 18:41.000
It's called

18:41.000 --> 18:43.000
coordinate transformation.

18:43.000 --> 18:45.000
This method was

18:45.000 --> 18:47.000
proposed by two German

18:47.000 --> 18:49.000
scholars.

18:49.000 --> 18:51.000
As we just saw,

18:51.000 --> 18:53.000
the fixed value

18:53.000 --> 18:55.000
will reduce the burden

18:55.000 --> 18:57.000
on the calculation.

18:57.000 --> 18:59.000
However,

18:59.000 --> 19:01.000
since the unit of

19:01.000 --> 19:03.000
coordinate transformation

19:03.000 --> 19:05.000
is speed,

19:05.000 --> 19:07.000
can we use the

19:07.000 --> 19:09.000
VT graph

19:09.000 --> 19:11.000
that we learned in

19:11.000 --> 19:13.000
high school

19:13.000 --> 19:15.000
to represent

19:15.000 --> 19:17.000
the area?

19:17.000 --> 19:19.000
The area

19:19.000 --> 19:21.000
is the size

19:21.000 --> 19:23.000
of the crystal.

19:23.000 --> 19:25.000
So, we define

19:25.000 --> 19:27.000
a transformer time,

19:27.000 --> 19:29.000
which is the

19:29.000 --> 19:31.000
size of the crystal

19:31.000 --> 19:33.000
from batch 1

19:33.000 --> 19:35.000
to a certain time.

19:35.000 --> 19:37.000
The transformer time

19:37.000 --> 19:39.000
is a unit of

19:39.000 --> 19:41.000
length.

19:41.000 --> 19:43.000
We can use

19:43.000 --> 19:45.000
the VT graph

19:45.000 --> 19:47.000
to represent

19:47.000 --> 19:49.000
the area

19:49.000 --> 19:51.000
of the crystal.

19:51.000 --> 19:53.000
The area

19:53.000 --> 19:55.000
is the size

19:55.000 --> 19:57.000
of the crystal

19:57.000 --> 19:59.000
from batch 1

19:59.000 --> 20:01.000
to a certain time.

20:01.000 --> 20:03.000
The area

20:03.000 --> 20:05.000
is the size

20:05.000 --> 20:07.000
of the crystal

20:07.000 --> 20:09.000
from batch 2

20:09.000 --> 20:11.000
to a certain time.

20:11.000 --> 20:13.000
We only need to use

20:13.000 --> 20:15.000
the transformer time

20:15.000 --> 20:17.000
to represent the

20:17.000 --> 20:19.000
area of the crystal.

20:19.000 --> 20:21.000
This way,

20:21.000 --> 20:23.000
we can reduce the

20:23.000 --> 20:25.000
burden on the calculation.

20:25.000 --> 20:27.000
After introducing

20:27.000 --> 20:29.000
the necessary theories,

20:29.000 --> 20:31.000
we can start to look at

20:31.000 --> 20:33.000
the case studies.

20:33.000 --> 20:35.000
The first part

20:35.000 --> 20:37.000
is the competition

20:37.000 --> 20:39.000
As mentioned earlier,

20:39.000 --> 20:41.000
the model-based control

20:41.000 --> 20:43.000
is to find the best

20:43.000 --> 20:45.000
control input

20:45.000 --> 20:47.000
under the

20:47.000 --> 20:49.000
constraint of

20:49.000 --> 20:51.000
the target function.

20:51.000 --> 20:53.000
There are three types

20:53.000 --> 20:55.000
of target function.

20:55.000 --> 20:57.000
The first type is

20:57.000 --> 20:59.000
to minimize the

20:59.000 --> 21:01.000
new creation moment.

21:01.000 --> 21:03.000
The second type is

21:03.000 --> 21:05.000
to maximize the

21:05.000 --> 21:07.000
variable coefficient

21:07.000 --> 21:09.000
of variation.

21:09.000 --> 21:11.000
Another question is

21:11.000 --> 21:13.000
how to define

21:13.000 --> 21:15.000
the best strategy.

21:15.000 --> 21:17.000
This is a big question.

21:17.000 --> 21:19.000
There is a study

21:19.000 --> 21:21.000
conducted by

21:21.000 --> 21:23.000
my professor

21:23.000 --> 21:25.000
and his team.

21:25.000 --> 21:27.000
The study found

21:27.000 --> 21:29.000
that the best

21:29.000 --> 21:31.000
control input

21:31.000 --> 21:33.000
seems to have a

21:33.000 --> 21:35.000
strong relationship

21:35.000 --> 21:37.000
with the

21:37.000 --> 21:39.000
target function.

21:39.000 --> 21:41.000
Does this mean

21:41.000 --> 21:43.000
that there is a

21:43.000 --> 21:45.000
strong competition

21:45.000 --> 21:47.000
between the

21:47.000 --> 21:49.000
target function

21:49.000 --> 21:51.000
and the

21:51.000 --> 21:53.000
control input?

21:53.000 --> 21:55.000
Finally,

21:55.000 --> 21:57.000
let's analyze

21:57.000 --> 21:59.000
the relationship

21:59.000 --> 22:01.000
between the

22:01.000 --> 22:03.000
target function

22:03.000 --> 22:05.000
and the

22:05.000 --> 22:07.000
new creation moment

22:07.000 --> 22:09.000
and the

22:09.000 --> 22:11.000
variable coefficient.

22:11.000 --> 22:13.000
How do we

22:13.000 --> 22:15.000
analyze the best

22:15.000 --> 22:17.000
strategy of

22:17.000 --> 22:19.000
multi-target function?

22:19.000 --> 22:21.000
We use the

22:21.000 --> 22:23.000
weighting sum method.

22:23.000 --> 22:25.000
The idea is to

22:25.000 --> 22:27.000
write the target function

22:27.000 --> 22:29.000
as a linear addition

22:29.000 --> 22:31.000
and the

22:31.000 --> 22:33.000
weighting vector

22:33.000 --> 22:35.000
should be specified

22:35.000 --> 22:37.000
before the

22:37.000 --> 22:39.000
optimization problem.

22:39.000 --> 22:41.000
After the specification,

22:41.000 --> 22:43.000
we can get

22:43.000 --> 22:45.000
the point

22:45.000 --> 22:47.000
on the

22:47.000 --> 22:49.000
Pareto front.

22:49.000 --> 22:51.000
If α is 0 or 1,

22:51.000 --> 22:53.000
we can get

22:53.000 --> 22:55.000
the point on

22:55.000 --> 22:57.000
the Pareto front.

22:57.000 --> 22:59.000
If α is 0 or 1,

22:59.000 --> 23:01.000
we can get

23:01.000 --> 23:03.000
the point on

23:03.000 --> 23:05.000
the Pareto front.

23:09.000 --> 23:11.000
How do we choose

23:11.000 --> 23:13.000
the beta?

23:13.000 --> 23:15.000
Let's find the

23:15.000 --> 23:17.000
point on the

23:17.000 --> 23:19.000
Pareto front.

23:19.000 --> 23:21.000
Then we define

23:21.000 --> 23:23.000
the normalized

23:23.000 --> 23:25.000
objective function.

23:25.000 --> 23:27.000
The point on the

23:27.000 --> 23:29.000
Pareto front

23:29.000 --> 23:31.000
should be

23:31.000 --> 23:33.000
between 0 and 1.

23:33.000 --> 23:35.000
Then we can

23:35.000 --> 23:37.000
define the

23:37.000 --> 23:39.000
beta.

23:39.000 --> 23:41.000
Another advantage is

23:41.000 --> 23:43.000
that we can

23:43.000 --> 23:45.000
find the best

23:45.000 --> 23:47.000
solution

23:47.000 --> 23:49.000
in the

23:49.000 --> 23:51.000
multiple

23:51.000 --> 23:53.000
Pareto optimal

23:53.000 --> 23:55.000
solutions.

23:55.000 --> 23:57.000
The shortest

23:57.000 --> 23:59.000
distance is the

23:59.000 --> 24:01.000
best solution

24:01.000 --> 24:03.000
for the

24:03.000 --> 24:05.000
multiple

24:05.000 --> 24:07.000
Pareto optimal solutions.

24:07.000 --> 24:09.000
The solution is

24:09.000 --> 24:11.000
called

24:11.000 --> 24:13.000
knee point.

24:13.000 --> 24:15.000
Now we can

24:15.000 --> 24:17.000
solve the

24:17.000 --> 24:19.000
optimization problem.

24:19.000 --> 24:21.000
We need to consider

24:21.000 --> 24:23.000
independent kinetics.

24:23.000 --> 24:25.000
We also need to

24:25.000 --> 24:27.000
consider some

24:27.000 --> 24:29.000
restrictions.

24:29.000 --> 24:31.000
For example,

24:31.000 --> 24:33.000
we need to consider

24:33.000 --> 24:35.000
production rate,

24:35.000 --> 24:37.000
batch time,

24:37.000 --> 24:39.000
and control input.

24:39.000 --> 24:41.000
The control input

24:41.000 --> 24:43.000
is set as growth rate.

24:43.000 --> 24:45.000
We can also set it as temperature

24:45.000 --> 24:47.000
or super saturation.

24:47.000 --> 24:49.000
They can be

24:49.000 --> 24:51.000
considered as

24:51.000 --> 24:53.000
equal values.

24:53.000 --> 24:55.000
In this case,

24:55.000 --> 24:57.000
we can write

24:57.000 --> 24:59.000
the problem

24:59.000 --> 25:01.000
formulation,

25:01.000 --> 25:03.000
as shown in the video.

25:03.000 --> 25:05.000
For the

25:05.000 --> 25:07.000
optimization problem,

25:07.000 --> 25:09.000
the input variable

25:09.000 --> 25:11.000
and the state variable,

25:11.000 --> 25:13.000
the growth rate and the

25:13.000 --> 25:15.000
nucleation moment,

25:15.000 --> 25:17.000
are all time functions.

25:17.000 --> 25:19.000
This is the

25:19.000 --> 25:21.000
dynamic optimization problem.

25:21.000 --> 25:23.000
There are many ways

25:23.000 --> 25:25.000
to solve the DLP problem.

25:25.000 --> 25:27.000
In today's

25:27.000 --> 25:29.000
study,

25:29.000 --> 25:31.000
we use

25:31.000 --> 25:33.000
the optimal control theory.

25:33.000 --> 25:35.000
The optimal control theory

25:35.000 --> 25:37.000
can be

25:37.000 --> 25:39.000
introduced by

25:39.000 --> 25:41.000
Pond-Stratton's

25:41.000 --> 25:43.000
Minimum Principle.

25:43.000 --> 25:45.000
This principle

25:45.000 --> 25:47.000
is a two-point

25:47.000 --> 25:49.000
boundary-variable problem.

25:49.000 --> 25:51.000
It is a two-point

25:51.000 --> 25:53.000
boundary-variable problem.

25:53.000 --> 25:55.000
It is a two-point

25:55.000 --> 25:57.000
boundary-variable problem.

25:57.000 --> 25:59.000
It sounds good.

25:59.000 --> 26:01.000
It can be introduced

26:01.000 --> 26:03.000
as a necessary condition.

26:03.000 --> 26:05.000
But it is challenging.

26:05.000 --> 26:07.000
First,

26:07.000 --> 26:09.000
I just need to write

26:09.000 --> 26:11.000
the TP-BVP,

26:11.000 --> 26:13.000
which is challenging.

26:13.000 --> 26:15.000
The TP-BVP

26:15.000 --> 26:17.000
is a two-point

26:17.000 --> 26:19.000
boundary-variable problem.

26:19.000 --> 26:21.000
We know that

26:21.000 --> 26:23.000
there may be

26:23.000 --> 26:25.000
some convergence problems

26:25.000 --> 26:27.000
in the numerical method.

26:27.000 --> 26:29.000
In today's study,

26:29.000 --> 26:31.000
we just need to

26:31.000 --> 26:33.000
use the coding

26:33.000 --> 26:35.000
transformation

26:35.000 --> 26:37.000
and some assumptions.

26:37.000 --> 26:39.000
Then,

26:39.000 --> 26:41.000
we can

26:41.000 --> 26:43.000
apply the TP-BVP

26:43.000 --> 26:45.000
and TPs

26:45.000 --> 26:47.000
to solve

26:47.000 --> 26:49.000
the problem.

26:49.000 --> 26:51.000
The TP-BVP

26:51.000 --> 26:53.000
is a two-point

26:53.000 --> 26:55.000
boundary-variable problem.

26:55.000 --> 26:57.000
It is a two-point

26:57.000 --> 26:59.000
boundary-variable problem.

26:59.000 --> 27:01.000
We can use the

27:01.000 --> 27:03.000
TP-BVP

27:03.000 --> 27:05.000
and TPs

27:05.000 --> 27:07.000
to solve

27:07.000 --> 27:09.000
the problem.

27:09.000 --> 27:11.000
The TP-BVP

27:11.000 --> 27:13.000
is a two-point

27:13.000 --> 27:15.000
boundary-variable problem.

27:15.000 --> 27:17.000
We can use the TP-BVP

27:17.000 --> 27:19.000
and TPs

27:19.000 --> 27:21.000
to solve

27:21.000 --> 27:23.000
the problem.

27:23.000 --> 27:25.000
The TP-BVP

27:25.000 --> 27:27.000
is a two-point

27:27.000 --> 27:29.000
boundary-variable problem.

27:29.000 --> 27:31.000
We can use the TP-BVP

27:31.000 --> 27:33.000
and TPs

27:33.000 --> 27:35.000
to solve

27:35.000 --> 27:37.000
the problem.

27:37.000 --> 27:39.000
The TP-BVP

27:39.000 --> 27:41.000
is a two-point

27:41.000 --> 27:43.000
boundary-variable problem.

27:43.000 --> 27:45.000
We can use the TP-BVP

27:45.000 --> 27:47.000
and TPs

27:47.000 --> 27:49.000
to solve

27:49.000 --> 27:51.000
the problem.

27:51.000 --> 27:53.000
The TP-BVP

27:53.000 --> 27:55.000
is a two-point

27:55.000 --> 27:57.000
boundary-variable problem.

27:57.000 --> 27:59.000
We can use the TP-BVP

27:59.000 --> 28:01.000
and TPs

28:01.000 --> 28:03.000
to solve

28:03.000 --> 28:05.000
the problem.

28:05.000 --> 28:07.000
Remember that

28:07.000 --> 28:09.000
for any value

28:09.000 --> 28:11.000
in the U-star,

28:11.000 --> 28:13.000
the u-star

28:13.000 --> 28:15.000
must have

28:15.000 --> 28:17.000
a minimum value

28:17.000 --> 28:19.000
for the Hamiltonian.

28:19.000 --> 28:21.000
In this section,

28:21.000 --> 28:23.000
the state variable

28:23.000 --> 28:25.000
is selected as

28:25.000 --> 28:27.000
the movement

28:27.000 --> 28:29.000
at increased process time.

28:29.000 --> 28:31.000
The control input

28:31.000 --> 28:33.000
is the growth rate.

28:33.000 --> 28:35.000
The reason for this

28:35.000 --> 28:37.000
is to make it easier

28:37.000 --> 28:39.000
to push down the equation.

28:39.000 --> 28:41.000
The simplification

28:41.000 --> 28:43.000
we mentioned earlier

28:43.000 --> 28:45.000
is assuming that

28:45.000 --> 28:47.000
the nucleation rate

28:47.000 --> 28:49.000
is no longer affected

28:49.000 --> 28:51.000
by the nucleation crystal.

28:51.000 --> 28:53.000
This is a reasonable assumption

28:53.000 --> 28:55.000
because the size of the seed

28:55.000 --> 28:57.000
should be greater than

28:57.000 --> 28:59.000
the size of the nucleation.

28:59.000 --> 29:01.000
Because of this simplification,

29:01.000 --> 29:03.000
it is possible to

29:03.000 --> 29:05.000
calculate the growth rate

29:05.000 --> 29:07.000
in the same way.

29:07.000 --> 29:09.000
The process is relatively long,

29:09.000 --> 29:11.000
so I won't go into details.

29:11.000 --> 29:13.000
You can read the paper

29:13.000 --> 29:15.000
I published

29:15.000 --> 29:17.000
for more details.

29:17.000 --> 29:19.000
Let's take a look at

29:19.000 --> 29:21.000
some case studies.

29:21.000 --> 29:23.000
In this chapter,

29:23.000 --> 29:25.000
we used two different systems.

29:25.000 --> 29:27.000
One is the nucleation crystal.

29:27.000 --> 29:29.000
The other is the

29:29.000 --> 29:31.000
pericyclic crystal.

29:31.000 --> 29:33.000
Their

29:33.000 --> 29:35.000
kinetic parameters

29:35.000 --> 29:37.000
are as shown.

29:37.000 --> 29:39.000
Note that

29:39.000 --> 29:41.000
J refers to

29:41.000 --> 29:43.000
the relation between

29:43.000 --> 29:45.000
the nucleation rate

29:45.000 --> 29:47.000
and mu3,

29:47.000 --> 29:49.000
which is the number

29:49.000 --> 29:51.000
of crystals in the batch.

29:51.000 --> 29:53.000
The nucleation rate

29:53.000 --> 29:55.000
is proportional to mu3,

29:55.000 --> 29:57.000
but the nucleation rate

29:57.000 --> 29:59.000
is not related to mu3.

29:59.000 --> 30:01.000
This will lead to some

30:01.000 --> 30:03.000
differences in the nucleation rate.

30:03.000 --> 30:05.000
I will talk about this later.

30:05.000 --> 30:07.000
In addition to the nucleation rate,

30:07.000 --> 30:09.000
we will also look at

30:09.000 --> 30:11.000
some simple control trajectories

30:11.000 --> 30:13.000
that will lead to

30:13.000 --> 30:15.000
a control result.

30:15.000 --> 30:17.000
We used a system that

30:17.000 --> 30:19.000
included linear deceleration,

30:19.000 --> 30:21.000
three-dimensional deceleration,

30:21.000 --> 30:23.000
and the pericyclic crystal

30:23.000 --> 30:25.000
we mentioned earlier.

30:25.000 --> 30:27.000
This system is called

30:27.000 --> 30:29.000
size-independent kinetics.

30:29.000 --> 30:31.000
For the pericyclic crystal control trajectory,

30:31.000 --> 30:33.000
the growth rate is measured

30:33.000 --> 30:35.000
as a fixed value.

30:35.000 --> 30:37.000
The result of these trajectories

30:37.000 --> 30:39.000
is as shown in the picture.

30:39.000 --> 30:41.000
Let's look at

30:41.000 --> 30:43.000
the pericyclic crystal system.

30:43.000 --> 30:45.000
If it is a linear deceleration,

30:45.000 --> 30:47.000
it will lead to

30:47.000 --> 30:49.000
early growth trajectory,

30:49.000 --> 30:51.000
which means that

30:51.000 --> 30:53.000
the growth rate will be higher

30:53.000 --> 30:55.000
due to the

30:55.000 --> 30:57.000
nucleation rate.

30:57.000 --> 30:59.000
The early growth

30:59.000 --> 31:01.000
of the pericyclic crystal

31:01.000 --> 31:03.000
will cause

31:03.000 --> 31:05.000
the growth rate to increase.

31:05.000 --> 31:07.000
This will lead to

31:07.000 --> 31:09.000
a larger

31:09.000 --> 31:11.000
nucleation rate.

31:11.000 --> 31:13.000
On the other hand,

31:13.000 --> 31:15.000
a tubid cooling

31:15.000 --> 31:17.000
can be considered a net growth

31:17.000 --> 31:19.000
because it has a large growth rate

31:19.000 --> 31:21.000
later on,

31:21.000 --> 31:23.000
which will lead to a

31:23.000 --> 31:25.000
larger nucleation rate.

31:25.000 --> 31:27.000
If we look at the

31:27.000 --> 31:29.000
PENTA system,

31:29.000 --> 31:31.000
we will see a similar phenomenon.

31:31.000 --> 31:33.000
It is worth mentioning that

31:33.000 --> 31:35.000
if we look at the temperature

31:35.000 --> 31:37.000
trajectory,

31:37.000 --> 31:39.000
we will find that the temperature

31:39.000 --> 31:41.000
after the linear cooling

31:41.000 --> 31:43.000
is relatively low.

31:43.000 --> 31:45.000
The reason is that

31:45.000 --> 31:47.000
a lot of the solution

31:47.000 --> 31:49.000
will be sucked out

31:49.000 --> 31:51.000
from the system.

31:51.000 --> 31:53.000
This will cause

31:53.000 --> 31:55.000
the batch temperature

31:55.000 --> 31:57.000
to be relatively low.

31:57.000 --> 31:59.000
Next,

31:59.000 --> 32:01.000
if we look at

32:01.000 --> 32:03.000
the target function

32:03.000 --> 32:05.000
set,

32:05.000 --> 32:07.000
we will

32:07.000 --> 32:09.000
divide the target function

32:09.000 --> 32:11.000
into two categories.

32:11.000 --> 32:13.000
The first category is the lower moment.

32:13.000 --> 32:15.000
It is composed of mu0 to mu2.

32:15.000 --> 32:17.000
The higher moment

32:17.000 --> 32:19.000
is composed of mu3 to mu5.

32:19.000 --> 32:21.000
In this case,

32:21.000 --> 32:23.000
we can divide the target function

32:23.000 --> 32:25.000
into groups

32:25.000 --> 32:27.000
and use

32:27.000 --> 32:29.000
different pairs

32:29.000 --> 32:31.000
to analyze.

32:31.000 --> 32:33.000
You can see

32:33.000 --> 32:35.000
that we have analyzed four groups of target functions.

32:35.000 --> 32:37.000
The first two groups

32:37.000 --> 32:39.000
are a higher moment

32:39.000 --> 32:41.000
and a lower moment.

32:41.000 --> 32:43.000
The last two groups

32:43.000 --> 32:45.000
are two higher moments

32:45.000 --> 32:47.000
and two lower moments.

32:47.000 --> 32:49.000
Let's take a look at

32:49.000 --> 32:51.000
how the different target functions

32:51.000 --> 32:53.000
are related to each other.

32:59.000 --> 33:01.000
If we look at

33:01.000 --> 33:03.000
the small triangle system,

33:03.000 --> 33:05.000
we can draw

33:05.000 --> 33:07.000
all four groups.

33:07.000 --> 33:09.000
We will find that

33:09.000 --> 33:11.000
the first two groups,

33:11.000 --> 33:13.000
which are a higher moment

33:13.000 --> 33:15.000
and a lower moment,

33:15.000 --> 33:17.000
will cause a strong

33:17.000 --> 33:19.000
trade-off.

33:19.000 --> 33:21.000
This can be seen from the

33:21.000 --> 33:23.000
width of the x-axis.

33:23.000 --> 33:25.000
The x-axis represents

33:25.000 --> 33:27.000
the volume of mu3n.

33:27.000 --> 33:29.000
The first group

33:29.000 --> 33:31.000
is about

33:31.000 --> 33:33.000
5000 to 7000,

33:33.000 --> 33:35.000
which is about 40%.

33:35.000 --> 33:37.000
The second group is about

33:37.000 --> 33:39.000
50,000 to 10,000,

33:39.000 --> 33:41.000
which is almost double.

33:41.000 --> 33:43.000
The trade-off between

33:43.000 --> 33:45.000
3.3 and 3.4

33:45.000 --> 33:47.000
is relatively weak.

33:47.000 --> 33:49.000
If we look at

33:49.000 --> 33:51.000
the yellow circle,

33:51.000 --> 33:53.000
it represents

33:53.000 --> 33:55.000
the target function

33:55.000 --> 33:57.000
obtained by super-saturation control.

33:57.000 --> 33:59.000
The value of this target function

33:59.000 --> 34:01.000
is quite close

34:01.000 --> 34:03.000
to the so-called need point.

34:03.000 --> 34:05.000
So we can conclude that

34:05.000 --> 34:07.000
super-saturation control

34:07.000 --> 34:09.000
seems to get

34:09.000 --> 34:11.000
a trade-off result.

34:13.000 --> 34:15.000
If we look at

34:15.000 --> 34:17.000
the Penta system,

34:17.000 --> 34:19.000
the trade-off

34:19.000 --> 34:21.000
is quite similar to

34:21.000 --> 34:23.000
the super-saturation system.

34:23.000 --> 34:25.000
What we need to pay attention to

34:25.000 --> 34:27.000
is the 3.1 graph.

34:27.000 --> 34:29.000
The yellow circle

34:29.000 --> 34:31.000
obtained by super-saturation control

34:31.000 --> 34:33.000
is directly

34:33.000 --> 34:35.000
overlapped with the need point.

34:35.000 --> 34:37.000
Why?

34:37.000 --> 34:39.000
Because in the Penta system,

34:39.000 --> 34:41.000
the nucleation rate and

34:41.000 --> 34:43.000
the density of the

34:43.000 --> 34:45.000
mu3 or batch

34:45.000 --> 34:47.000
are not related.

34:47.000 --> 34:49.000
This means that

34:49.000 --> 34:51.000
I don't need to

34:51.000 --> 34:53.000
change the value of

34:53.000 --> 34:55.000
super-saturation control

34:55.000 --> 34:57.000
before or after the batch.

34:57.000 --> 34:59.000
I only need to make

34:59.000 --> 35:01.000
the nucleation number

35:01.000 --> 35:03.000
the lowest value.

35:03.000 --> 35:05.000
If we look at

35:05.000 --> 35:07.000
the growth rate trajectory,

35:07.000 --> 35:09.000
let's look at

35:09.000 --> 35:11.000
the single objective

35:11.000 --> 35:13.000
of the Penta system.

35:13.000 --> 35:15.000
We will find that

35:15.000 --> 35:17.000
the early growth trajectory

35:17.000 --> 35:19.000
seems to be

35:19.000 --> 35:21.000
more friendly to

35:21.000 --> 35:23.000
the lower moment

35:23.000 --> 35:25.000
objective.

35:25.000 --> 35:27.000
The reason is that

35:27.000 --> 35:29.000
early growth can avoid

35:29.000 --> 35:31.000
the nucleation rate

35:31.000 --> 35:33.000
to become very large

35:33.000 --> 35:35.000
if the nucleation rate

35:35.000 --> 35:37.000
is small.

35:37.000 --> 35:39.000
On the other hand,

35:39.000 --> 35:41.000
if the nucleation rate

35:41.000 --> 35:43.000
is small,

35:43.000 --> 35:45.000
the nucleation rate

35:45.000 --> 35:47.000
in the later stage

35:47.000 --> 35:49.000
will not grow

35:49.000 --> 35:51.000
much.

35:51.000 --> 35:53.000
This will make

35:53.000 --> 35:55.000
the nucleation rate

35:55.000 --> 35:57.000
smaller,

35:57.000 --> 35:59.000
so it will be more

35:59.000 --> 36:01.000
friendly to the higher

36:01.000 --> 36:03.000
objectives.

36:03.000 --> 36:05.000
If we look at the

36:05.000 --> 36:07.000
so-called knee point

36:07.000 --> 36:09.000
trajectory,

36:09.000 --> 36:11.000
we will find that

36:11.000 --> 36:13.000
the growth rate

36:13.000 --> 36:15.000
of 3.1 and 3.2

36:15.000 --> 36:17.000
is relatively small.

36:17.000 --> 36:19.000
This can be verified

36:19.000 --> 36:21.000
that super-saturation control

36:21.000 --> 36:23.000
has a good balance

36:23.000 --> 36:25.000
between the higher moment

36:25.000 --> 36:27.000
and lower moment

36:27.000 --> 36:29.000
objectives.

36:29.000 --> 36:31.000
If we look at the

36:31.000 --> 36:33.000
3.3 and 3.4,

36:33.000 --> 36:35.000
we will find that

36:35.000 --> 36:37.000
3.3 has two higher

36:37.000 --> 36:39.000
moment objectives,

36:39.000 --> 36:41.000
so its trajectory

36:41.000 --> 36:43.000
is more friendly

36:43.000 --> 36:45.000
to the later growth.

36:45.000 --> 36:47.000
On the other hand,

36:47.000 --> 36:49.000
3.4 has two lower

36:49.000 --> 36:51.000
moment objectives,

36:51.000 --> 36:53.000
so its knee point

36:53.000 --> 36:55.000
trajectory is more

36:55.000 --> 36:57.000
friendly to the early growth.

36:57.000 --> 36:59.000
We can conclude that

36:59.000 --> 37:01.000
super-saturation control

37:01.000 --> 37:03.000
can be used

37:03.000 --> 37:05.000
as a rule of thumb

37:05.000 --> 37:07.000
in the

37:07.000 --> 37:09.000
Penta system.

37:09.000 --> 37:11.000
In conclusion,

37:11.000 --> 37:13.000
we use

37:13.000 --> 37:15.000
the best control

37:15.000 --> 37:17.000
theory

37:17.000 --> 37:19.000
to solve

37:19.000 --> 37:21.000
these problems

37:21.000 --> 37:23.000
in a

37:23.000 --> 37:25.000
self-explanatory

37:25.000 --> 37:27.000
way.

37:27.000 --> 37:29.000
We also analyzed

37:29.000 --> 37:31.000
the tradeoff

37:31.000 --> 37:33.000
and found that

37:33.000 --> 37:35.000
the higher moment

37:35.000 --> 37:37.000
and lower moment

37:37.000 --> 37:39.000
objectives are more competitive.

37:39.000 --> 37:41.000
It seems that

37:41.000 --> 37:43.000
super-saturation control

37:43.000 --> 37:45.000
is a pretty good

37:45.000 --> 37:47.000
strategy in these two systems.

37:47.000 --> 37:49.000
However,

37:49.000 --> 37:51.000
the SSC

37:51.000 --> 37:53.000
super-saturation control

37:53.000 --> 37:55.000
is also a good idea.

37:55.000 --> 37:57.000
However,

37:57.000 --> 37:59.000
we still need to

37:59.000 --> 38:01.000
explore other systems.

38:01.000 --> 38:03.000
When we were

38:03.000 --> 38:05.000
looking for this document,

38:05.000 --> 38:07.000
we found that

38:07.000 --> 38:09.000
the numerical range

38:09.000 --> 38:11.000
of the K-parameter

38:11.000 --> 38:13.000
is very wide,

38:13.000 --> 38:15.000
and it can be as wide as

38:15.000 --> 38:17.000
a dozen orders.

38:17.000 --> 38:19.000
In addition,

38:19.000 --> 38:21.000
the unit of

38:21.000 --> 38:23.000
the K-parameter

38:23.000 --> 38:25.000
is related to

38:25.000 --> 38:27.000
the unit of

38:27.000 --> 38:29.000
the J-parameter.

38:29.000 --> 38:31.000
Another problem is that

38:31.000 --> 38:33.000
we can't judge

38:33.000 --> 38:35.000
the numerical range

38:35.000 --> 38:37.000
of the system

38:37.000 --> 38:39.000
directly from the value.

38:39.000 --> 38:41.000
Another problem

38:41.000 --> 38:43.000
is that

38:43.000 --> 38:45.000
we also want to explore

38:45.000 --> 38:47.000
the design of the C-recipe.

38:47.000 --> 38:49.000
A group of Japanese scholars

38:49.000 --> 38:51.000
did an experiment

38:51.000 --> 38:53.000
to explore

38:53.000 --> 38:55.000
several different crystalline systems.

38:55.000 --> 38:57.000
They found that

38:57.000 --> 38:59.000
as long as the C-loading ratio

38:59.000 --> 39:01.000
is increased,

39:01.000 --> 39:03.000
the definition of C-loading ratio

39:03.000 --> 39:05.000
is a ratio of

39:05.000 --> 39:07.000
C and product mass.

39:07.000 --> 39:09.000
As long as the C-loading ratio

39:09.000 --> 39:11.000
is increased,

39:11.000 --> 39:13.000
and the C-mean size is reduced,

39:13.000 --> 39:15.000
the numerical range

39:15.000 --> 39:17.000
can be as limited as possible.

39:17.000 --> 39:19.000
There are two problems here.

39:19.000 --> 39:21.000
First, we know that

39:21.000 --> 39:23.000
if the C-loading ratio

39:23.000 --> 39:25.000
is higher,

39:25.000 --> 39:27.000
and the C-mean size is

39:27.000 --> 39:29.000
smaller,

39:29.000 --> 39:31.000
then the average

39:31.000 --> 39:33.000
numerical range of the product

39:33.000 --> 39:35.000
will also be smaller.

39:35.000 --> 39:37.000
Of course, the goals mentioned earlier

39:37.000 --> 39:39.000
are contrary.

39:39.000 --> 39:41.000
Next, if the C-loading ratio

39:41.000 --> 39:43.000
is too high,

39:43.000 --> 39:45.000
or if C is used too aggressively,

39:45.000 --> 39:47.000
then the product recycle rate

39:47.000 --> 39:49.000
will be higher.

39:49.000 --> 39:51.000
This is not a good phenomenon.

39:51.000 --> 39:53.000
In order to analyze

39:53.000 --> 39:55.000
these problems,

39:55.000 --> 39:57.000
we will use

39:57.000 --> 39:59.000
a soundless model

39:59.000 --> 40:01.000
to quickly analyze

40:01.000 --> 40:03.000
these problems.

40:03.000 --> 40:05.000
Let me briefly introduce

40:05.000 --> 40:07.000
this soundless model.

40:07.000 --> 40:09.000
First, in order to reduce

40:09.000 --> 40:11.000
the number of parameters,

40:11.000 --> 40:13.000
we combine

40:13.000 --> 40:15.000
these parameters.

40:15.000 --> 40:17.000
After combining,

40:17.000 --> 40:19.000
the definition of Kb

40:19.000 --> 40:21.000
is different.

40:21.000 --> 40:23.000
The definition of Gamma

40:23.000 --> 40:25.000
is the relative sensitivity

40:25.000 --> 40:27.000
of the nucleation rate

40:27.000 --> 40:29.000
and growth rate

40:29.000 --> 40:31.000
to the saturation rate.

40:31.000 --> 40:33.000
Next, we define

40:33.000 --> 40:35.000
the reference quantity

40:35.000 --> 40:37.000
with the underline ref.

40:37.000 --> 40:39.000
A prime means

40:39.000 --> 40:41.000
that this quantity

40:41.000 --> 40:43.000
is a soundless quantity.

40:43.000 --> 40:45.000
For example,

40:45.000 --> 40:47.000
I want to define a soundless growth rate,

40:47.000 --> 40:49.000
which is the original value

40:49.000 --> 40:51.000
divided by the reference quantity.

40:51.000 --> 40:53.000
Based on the following definition,

40:53.000 --> 40:55.000
we can build

40:55.000 --> 40:57.000
this soundless model.

40:57.000 --> 40:59.000
In this model,

40:59.000 --> 41:01.000
the soundless C-mass

41:01.000 --> 41:03.000
will be the C-loading ratio.

41:03.000 --> 41:05.000
In this way,

41:05.000 --> 41:07.000
it is easier to see

41:07.000 --> 41:09.000
how large the ratio is.

41:09.000 --> 41:11.000
In terms of the

41:11.000 --> 41:13.000
selection of the target function,

41:13.000 --> 41:15.000
we just mentioned

41:15.000 --> 41:17.000
the competition between

41:17.000 --> 41:19.000
the higher-moment and lower-moment

41:19.000 --> 41:21.000
target function,

41:21.000 --> 41:23.000
so we choose one

41:23.000 --> 41:25.000
as a representative.

41:25.000 --> 41:27.000
We choose the volume of nucleation

41:27.000 --> 41:29.000
and the number of nucleation

41:29.000 --> 41:31.000
as the higher-moment and lower-moment

41:31.000 --> 41:33.000
representative.

41:33.000 --> 41:35.000
We can also write the target function

41:35.000 --> 41:37.000
as a linear addition.

41:37.000 --> 41:39.000
We use the same method

41:39.000 --> 41:41.000
to solve this addition problem.

41:41.000 --> 41:43.000
The process is similar,

41:43.000 --> 41:45.000
so I won't go into details.

41:45.000 --> 41:47.000
As for the city recipe,

41:47.000 --> 41:49.000
we know that

41:49.000 --> 41:51.000
there should be an infinite number

41:51.000 --> 41:53.000
of city recipes

41:53.000 --> 41:55.000
that can balance the nucleation.

41:55.000 --> 41:57.000
We define the so-called

41:57.000 --> 41:59.000
critical city recipe.

41:59.000 --> 42:01.000
It is a combination of

42:01.000 --> 42:03.000
C-loading ratio and

42:03.000 --> 42:05.000
C-means size.

42:05.000 --> 42:07.000
For example,

42:07.000 --> 42:09.000
the nucleated volume

42:09.000 --> 42:11.000
at the knee point

42:11.000 --> 42:13.000
is equal to

42:13.000 --> 42:15.000
1% of the city volume.

42:15.000 --> 42:17.000
We consider 1%

42:17.000 --> 42:19.000
to be negligible,

42:19.000 --> 42:21.000
so we can use

42:21.000 --> 42:23.000
C-loading ratio

42:23.000 --> 42:25.000
to balance

42:25.000 --> 42:27.000
the nucleation.

42:27.000 --> 42:29.000
Next,

42:29.000 --> 42:31.000
let's look at

42:31.000 --> 42:33.000
the

42:33.000 --> 42:35.000
kinetic parameter.

42:35.000 --> 42:37.000
In our research,

42:37.000 --> 42:39.000
we found 32 sets of

42:39.000 --> 42:41.000
different crystallization systems.

42:41.000 --> 42:43.000
We can see the relative

42:43.000 --> 42:45.000
parameter gamma

42:45.000 --> 42:47.000
and J.

42:47.000 --> 42:49.000
In most systems,

42:49.000 --> 42:51.000
gamma is between 1 and 2.5,

42:51.000 --> 42:53.000
while J is between 0 and 1.

42:53.000 --> 42:55.000
You can refer to

42:55.000 --> 42:57.000
this paper

42:57.000 --> 42:59.000
by me as

42:59.000 --> 43:01.000
the first author

43:01.000 --> 43:03.000
of the paper.

43:03.000 --> 43:05.000
We consider the

43:05.000 --> 43:07.000
solution of the crystallization system,

43:07.000 --> 43:09.000
including many organic compounds,

43:09.000 --> 43:11.000
non-organic compounds,

43:11.000 --> 43:13.000
food additives,

43:13.000 --> 43:15.000
and medicines.

43:15.000 --> 43:17.000
You can refer to

43:17.000 --> 43:19.000
these details in the paper.

43:19.000 --> 43:21.000
In this case,

43:21.000 --> 43:23.000
we can solve

43:23.000 --> 43:25.000
the relative parietal front.

43:25.000 --> 43:27.000
We find that

43:27.000 --> 43:29.000
when the value of gamma

43:29.000 --> 43:31.000
is higher than

43:31.000 --> 43:33.000
the value of J,

43:33.000 --> 43:35.000
the relative parietal front

43:35.000 --> 43:37.000
will be wider.

43:37.000 --> 43:39.000
On the other hand,

43:39.000 --> 43:41.000
if the nucleation rate

43:41.000 --> 43:43.000
and growth rate

43:43.000 --> 43:45.000
are similar to

43:45.000 --> 43:47.000
the sensitivity of

43:47.000 --> 43:49.000
super-saturation,

43:49.000 --> 43:51.000
gamma will be closer to 1,

43:51.000 --> 43:53.000
and the relative parietal front

43:53.000 --> 43:55.000
will be weaker.

43:55.000 --> 43:57.000
At the same time,

43:57.000 --> 43:59.000
the difference between

43:59.000 --> 44:01.000
super-saturation and

44:01.000 --> 44:03.000
nucleation rate

44:03.000 --> 44:05.000
will be greater.

44:05.000 --> 44:07.000
In other cases,

44:07.000 --> 44:09.000
the difference will be smaller.

44:09.000 --> 44:11.000
The reason is that

44:11.000 --> 44:13.000
when J is between 0 and 1,

44:13.000 --> 44:15.000
the super-saturation will

44:15.000 --> 44:17.000
be minimized by

44:17.000 --> 44:19.000
mu0n,

44:19.000 --> 44:21.000
which is the maximum

44:21.000 --> 44:23.000
reduction of nucleation rate.

44:23.000 --> 44:25.000
In other cases,

44:25.000 --> 44:27.000
if gamma is not large,

44:27.000 --> 44:29.000
the relative parietal front

44:29.000 --> 44:31.000
will not be wide,

44:31.000 --> 44:33.000
and the result of

44:33.000 --> 44:35.000
nucleation rate

44:35.000 --> 44:37.000
and super-saturation

44:37.000 --> 44:39.000
will not be much different.

44:39.000 --> 44:41.000
This is another proof

44:41.000 --> 44:43.000
that super-saturation

44:43.000 --> 44:45.000
is a good control strategy

44:45.000 --> 44:47.000
for most systems.

44:49.000 --> 44:51.000
As for the series of design,

44:51.000 --> 44:53.000
we will discuss

44:53.000 --> 44:55.000
the impact of batch time

44:55.000 --> 44:57.000
on the series of recipes.

44:57.000 --> 44:59.000
The longer the batch time,

44:59.000 --> 45:01.000
the smaller the

45:01.000 --> 45:03.000
average super-saturation

45:03.000 --> 45:05.000
and nucleation rate.

45:05.000 --> 45:07.000
In this case,

45:07.000 --> 45:09.000
we don't need to add so much seed.

45:09.000 --> 45:11.000
However,

45:11.000 --> 45:13.000
is it worth it?

45:13.000 --> 45:15.000
Because the longer the batch time,

45:15.000 --> 45:17.000
it is not a good thing.

45:17.000 --> 45:19.000
Is there a CP value

45:19.000 --> 45:21.000
to extend the batch time

45:21.000 --> 45:23.000
to reduce the

45:23.000 --> 45:25.000
amount of seed?

45:25.000 --> 45:27.000
Is there a general rule

45:27.000 --> 45:29.000
for different

45:29.000 --> 45:31.000
systems?

45:31.000 --> 45:33.000
Or is there a general rule?

45:33.000 --> 45:35.000
We would like to

45:35.000 --> 45:37.000
do an analysis

45:37.000 --> 45:39.000
through this

45:39.000 --> 45:41.000
random framework.

45:41.000 --> 45:43.000
The result is

45:43.000 --> 45:45.000
the extended batch time

45:45.000 --> 45:47.000
affects the

45:47.000 --> 45:49.000
seed loading ratio,

45:49.000 --> 45:51.000
depending on

45:51.000 --> 45:53.000
the system.

45:55.000 --> 45:57.000
For example,

45:57.000 --> 45:59.000
if I change the batch time

45:59.000 --> 46:01.000
from 1 hour to 12 hours,

46:01.000 --> 46:03.000
the amount of seed

46:03.000 --> 46:05.000
changes from

46:05.000 --> 46:07.000
100% to

46:07.000 --> 46:09.000
20%.

46:09.000 --> 46:11.000
However,

46:11.000 --> 46:13.000
for system 3,

46:13.000 --> 46:15.000
the extended batch time

46:15.000 --> 46:17.000
basically has no effect.

46:17.000 --> 46:19.000
This is called

46:19.000 --> 46:21.000
system specific.

46:21.000 --> 46:23.000
In this chapter,

46:23.000 --> 46:25.000
we have analyzed

46:25.000 --> 46:27.000
seed recipe design

46:27.000 --> 46:29.000
and

46:29.000 --> 46:31.000
seed loading ratio.

46:31.000 --> 46:33.000
We will

46:33.000 --> 46:35.000
use

46:35.000 --> 46:37.000
a high-efficiency

46:37.000 --> 46:39.000
random framework

46:39.000 --> 46:41.000
to analyze

46:41.000 --> 46:43.000
the best solution

46:43.000 --> 46:45.000
by

46:45.000 --> 46:47.000
using

46:47.000 --> 46:49.000
a high-efficiency

46:49.000 --> 46:51.000
random framework.

46:51.000 --> 46:53.000
In the last part,

46:53.000 --> 46:55.000
we consider

46:55.000 --> 46:57.000
the donor stage.

46:57.000 --> 46:59.000
In some documents,

46:59.000 --> 47:01.000
it is mentioned that

47:01.000 --> 47:03.000
if we include

47:03.000 --> 47:05.000
the dissolution mechanism

47:05.000 --> 47:07.000
into the operation,

47:07.000 --> 47:09.000
we will have the opportunity

47:09.000 --> 47:11.000
to control the

47:11.000 --> 47:13.000
seed SSD

47:13.000 --> 47:15.000
However,

47:15.000 --> 47:17.000
if we use

47:17.000 --> 47:19.000
the model-based method,

47:19.000 --> 47:21.000
we will have to

47:21.000 --> 47:23.000
analyze the crystal

47:23.000 --> 47:25.000
disappearance.

47:25.000 --> 47:27.000
In the process of

47:27.000 --> 47:29.000
dissolution,

47:29.000 --> 47:31.000
some crystals will

47:31.000 --> 47:33.000
disappear.

47:33.000 --> 47:35.000
In the past,

47:35.000 --> 47:37.000
the model-based description

47:37.000 --> 47:39.000
was described in

47:39.000 --> 47:41.000
a rational way,

47:41.000 --> 47:43.000
but in this chapter,

47:43.000 --> 47:45.000
we want to solve this problem.

47:47.000 --> 47:49.000
Since we want to

47:49.000 --> 47:51.000
analyze the dissolution,

47:51.000 --> 47:53.000
we have to analyze

47:53.000 --> 47:55.000
the PPE.

47:55.000 --> 47:57.000
Let's assume

47:57.000 --> 47:59.000
there are many stages in the batch.

47:59.000 --> 48:01.000
In each stage,

48:01.000 --> 48:03.000
only growth

48:03.000 --> 48:05.000
or dissolution occurs.

48:05.000 --> 48:07.000
In addition,

48:07.000 --> 48:09.000
this process always starts

48:09.000 --> 48:11.000
with the dissolution.

48:11.000 --> 48:13.000
In this way,

48:13.000 --> 48:15.000
we can write the

48:15.000 --> 48:17.000
number of growth stage

48:17.000 --> 48:19.000
and dissolution stage,

48:19.000 --> 48:21.000
and write the PPE.

48:21.000 --> 48:23.000
The lower case k

48:23.000 --> 48:25.000
is the stage number.

48:25.000 --> 48:27.000
At the same time,

48:27.000 --> 48:29.000
the kinetic expression

48:29.000 --> 48:31.000
and the definition of

48:31.000 --> 48:33.000
transform time

48:33.000 --> 48:35.000
are based on

48:35.000 --> 48:37.000
the growth stage expression

48:37.000 --> 48:39.000
and the definition of

48:39.000 --> 48:41.000
transform time expression.

48:41.000 --> 48:43.000
In this way,

48:43.000 --> 48:45.000
we can see that

48:45.000 --> 48:47.000
the expression and

48:47.000 --> 48:49.000
definition of transform time

48:49.000 --> 48:51.000
are similar.

48:51.000 --> 48:53.000
Let's divide the

48:53.000 --> 48:55.000
PPE into

48:55.000 --> 48:57.000
seed and nucleation part.

48:57.000 --> 48:59.000
In the seed part,

48:59.000 --> 49:01.000
we can solve

49:01.000 --> 49:03.000
the expletive solution

49:03.000 --> 49:05.000
in the tau domain.

49:05.000 --> 49:07.000
We can see that

49:07.000 --> 49:09.000
the expletive solution

49:09.000 --> 49:11.000
can be expressed

49:11.000 --> 49:13.000
in the tau domain

49:13.000 --> 49:15.000
regardless of

49:15.000 --> 49:17.000
growth stage

49:17.000 --> 49:19.000
or dissolution stage.

49:19.000 --> 49:21.000
Again,

49:21.000 --> 49:23.000
we use a

49:23.000 --> 49:25.000
high-performance method

49:25.000 --> 49:27.000
to solve the seed PPE.

49:27.000 --> 49:29.000
The nucleation part

49:29.000 --> 49:31.000
is a bit more complicated

49:31.000 --> 49:33.000
because it involves

49:33.000 --> 49:35.000
the size-independent

49:35.000 --> 49:37.000
growth and dissolution

49:37.000 --> 49:39.000
kinetics.

49:39.000 --> 49:41.000
The reason for this

49:41.000 --> 49:43.000
is that

49:43.000 --> 49:45.000
if we want to

49:45.000 --> 49:47.000
use the

49:47.000 --> 49:49.000
standard method

49:49.000 --> 49:51.000
of moment

49:51.000 --> 49:53.000
to solve the PPE,

49:53.000 --> 49:55.000
this is a necessary

49:55.000 --> 49:57.000
assumption.

49:57.000 --> 49:59.000
At the same time,

49:59.000 --> 50:01.000
it is a reasonable assumption

50:01.000 --> 50:03.000
because the value of

50:03.000 --> 50:05.000
GL and DL

50:05.000 --> 50:07.000
are close to 1

50:07.000 --> 50:09.000
when L is small.

50:09.000 --> 50:11.000
When we

50:11.000 --> 50:13.000
do the experiment

50:13.000 --> 50:15.000
to fit the parameter,

50:15.000 --> 50:17.000
most of the parameters

50:17.000 --> 50:19.000
are used in the

50:19.000 --> 50:21.000
seed-goron crystal experiment.

50:21.000 --> 50:23.000
There is no evidence

50:23.000 --> 50:25.000
to show that

50:25.000 --> 50:27.000
small nucleated crystals

50:27.000 --> 50:29.000
have the same kinetic behavior.

50:29.000 --> 50:31.000
So we make the above assumption.

50:31.000 --> 50:33.000
Under this assumption,

50:33.000 --> 50:35.000
we can write the

50:35.000 --> 50:37.000
corresponding PPE.

50:37.000 --> 50:39.000
As you can see,

50:39.000 --> 50:41.000
it is a continuous solution.

50:41.000 --> 50:43.000
What is the benefit of this?

50:43.000 --> 50:45.000
This can lead us to

50:45.000 --> 50:47.000
directly use

50:47.000 --> 50:49.000
the standard method of moment

50:49.000 --> 50:51.000
to match the continuous expression

50:51.000 --> 50:53.000
to deduce

50:53.000 --> 50:55.000
the corresponding ODE.

50:55.000 --> 50:57.000
What is the role of

50:57.000 --> 50:59.000
the continuous expression?

50:59.000 --> 51:01.000
Let's look at this graph.

51:01.000 --> 51:03.000
Suppose we have a batch

51:03.000 --> 51:05.000
with only two stages.

51:05.000 --> 51:07.000
After the first stage is over,

51:07.000 --> 51:09.000
the nucleated

51:09.000 --> 51:11.000
CSD

51:11.000 --> 51:13.000
looks like this.

51:13.000 --> 51:15.000
The second stage

51:15.000 --> 51:17.000
will move all the CSD

51:17.000 --> 51:19.000
to the left

51:19.000 --> 51:21.000
when it is about to

51:21.000 --> 51:23.000
dissolve.

51:23.000 --> 51:25.000
Once the crystal size

51:25.000 --> 51:27.000
is reduced,

51:27.000 --> 51:29.000
the continuous expression

51:29.000 --> 51:31.000
can be used

51:31.000 --> 51:33.000
as a reference

51:33.000 --> 51:35.000
for the

51:35.000 --> 51:37.000
disappearing crystal rate.

51:37.000 --> 51:39.000
After discussing

51:39.000 --> 51:41.000
some mathematical methods

51:41.000 --> 51:43.000
and theories,

51:43.000 --> 51:45.000
we can look at

51:45.000 --> 51:47.000
the so-called

51:47.000 --> 51:49.000
attenuable seed-goron CSD.

51:49.000 --> 51:51.000
Why do we want to

51:51.000 --> 51:53.000
find the CSD

51:53.000 --> 51:55.000
The main idea is

51:55.000 --> 51:57.000
that when we

51:57.000 --> 51:59.000
select the crystal

51:59.000 --> 52:01.000
or select the product,

52:01.000 --> 52:03.000
we often use the

52:03.000 --> 52:05.000
sieve to select the product.

52:05.000 --> 52:07.000
In this way,

52:07.000 --> 52:09.000
the average grain diameter of the product

52:09.000 --> 52:11.000
and the width of the CSD

52:11.000 --> 52:13.000
will be limited by the

52:13.000 --> 52:15.000
size of the sieve.

52:15.000 --> 52:17.000
So if we can

52:17.000 --> 52:19.000
design a process

52:19.000 --> 52:21.000
to control the grain

52:21.000 --> 52:23.000
diameter and

52:23.000 --> 52:25.000
the width of the CSD,

52:25.000 --> 52:27.000
it will be the best.

52:27.000 --> 52:29.000
So we can use

52:29.000 --> 52:31.000
the algorithm

52:31.000 --> 52:33.000
we just introduced

52:33.000 --> 52:35.000
to do a quick analysis.

52:35.000 --> 52:37.000
In this chapter,

52:37.000 --> 52:39.000
we use a

52:39.000 --> 52:41.000
simple system.

52:41.000 --> 52:43.000
The simple system of kinetic

52:43.000 --> 52:45.000
is shown below.

52:45.000 --> 52:47.000
The next question is

52:47.000 --> 52:49.000
how do we define

52:49.000 --> 52:51.000
the so-called

52:51.000 --> 52:53.000
attenuable region.

52:53.000 --> 52:55.000
We use the

52:55.000 --> 52:57.000
mean and

52:57.000 --> 52:59.000
variance of the product

52:59.000 --> 53:01.000
to define it.

53:01.000 --> 53:03.000
We define the

53:03.000 --> 53:05.000
seed CSD

53:05.000 --> 53:07.000
and some constraints

53:07.000 --> 53:09.000
for optimization.

53:09.000 --> 53:11.000
The constraints include

53:11.000 --> 53:13.000
initial condition,

53:13.000 --> 53:15.000
seed loading,

53:15.000 --> 53:17.000
solubility,

53:17.000 --> 53:19.000
and production rate.

53:19.000 --> 53:21.000
Some more detailed

53:21.000 --> 53:23.000
explanations can be found

53:23.000 --> 53:25.000
in another paper

53:25.000 --> 53:27.000
by me.

53:27.000 --> 53:29.000
I won't go into

53:29.000 --> 53:31.000
too much detail here.

53:31.000 --> 53:33.000
Next,

53:33.000 --> 53:35.000
the constraints

53:35.000 --> 53:37.000
for the product

53:37.000 --> 53:39.000
mu0 and mu3

53:39.000 --> 53:41.000
can be defined

53:41.000 --> 53:43.000
by the

53:43.000 --> 53:45.000
mean and

53:45.000 --> 53:47.000
variance of the product

53:47.000 --> 53:49.000
mu0 and mu3.

53:49.000 --> 53:51.000
Finally,

53:51.000 --> 53:53.000
when we define

53:53.000 --> 53:55.000
the attenuable region,

53:55.000 --> 53:57.000
we use the mean size

53:57.000 --> 53:59.000
to define the

53:59.000 --> 54:01.000
number volume mean.

54:01.000 --> 54:03.000
We can then

54:03.000 --> 54:05.000
use the constraints

54:05.000 --> 54:07.000
we just mentioned

54:07.000 --> 54:09.000
and

54:09.000 --> 54:11.000
the number volume mean

54:11.000 --> 54:13.000
of the target

54:13.000 --> 54:15.000
to maximize or minimize

54:15.000 --> 54:17.000
the product's sigma p

54:17.000 --> 54:19.000
or variance.

54:19.000 --> 54:21.000
In this way,

54:21.000 --> 54:23.000
we can define the

54:23.000 --> 54:25.000
attenuable region.

54:25.000 --> 54:27.000
Note that

54:27.000 --> 54:29.000
we only talked about the seed.

54:29.000 --> 54:31.000
The PBE of the seed

54:31.000 --> 54:33.000
can be expressed by tau.

54:33.000 --> 54:35.000
Therefore,

54:35.000 --> 54:37.000
we can see that

54:37.000 --> 54:39.000
we haven't mentioned

54:39.000 --> 54:41.000
the sum of saturation

54:41.000 --> 54:43.000
of the seed.

54:43.000 --> 54:45.000
This is the result.

54:45.000 --> 54:47.000
First, let's look at

54:47.000 --> 54:49.000
the attenuable region.

54:49.000 --> 54:51.000
As a result,

54:51.000 --> 54:53.000
if this is a single-stage process,

54:53.000 --> 54:55.000
we will get an attenuable curve

54:55.000 --> 54:57.000
instead of a region.

54:57.000 --> 54:59.000
However,

54:59.000 --> 55:01.000
if we have more stages,

55:01.000 --> 55:03.000
the region will become wider.

55:03.000 --> 55:05.000
However,

55:05.000 --> 55:07.000
the width of the region

55:07.000 --> 55:09.000
is basically

55:09.000 --> 55:11.000
the same as

55:11.000 --> 55:13.000
the width of the seed.

55:13.000 --> 55:15.000
Therefore,

55:15.000 --> 55:17.000
the CSD of

55:17.000 --> 55:19.000
A, B, C

55:19.000 --> 55:21.000
will become

55:21.000 --> 55:23.000
wider and wider.

55:23.000 --> 55:25.000
However,

55:25.000 --> 55:27.000
the CSD of

55:27.000 --> 55:29.000
D, E, F, G

55:29.000 --> 55:31.000
will not change much.

55:31.000 --> 55:33.000
Why is that?

55:33.000 --> 55:35.000
Let's find out.

55:35.000 --> 55:37.000
The result is

55:37.000 --> 55:39.000
that the growth rate

55:39.000 --> 55:41.000
and the dissolution rate

55:41.000 --> 55:43.000
have different sensitivities

55:43.000 --> 55:45.000
to the crystal size.

55:45.000 --> 55:47.000
The growth rate

55:47.000 --> 55:49.000
is more sensitive

55:49.000 --> 55:51.000
while the dissolution rate

55:51.000 --> 55:53.000
is only sensitive

55:53.000 --> 55:55.000
in a small range.

55:55.000 --> 55:57.000
Therefore,

55:57.000 --> 55:59.000
if I want to make the CSD

55:59.000 --> 56:01.000
narrower,

56:01.000 --> 56:03.000
I can only do cycling

56:03.000 --> 56:05.000
in a narrow region.

56:05.000 --> 56:07.000
At the same time,

56:07.000 --> 56:09.000
the mu3 change

56:09.000 --> 56:11.000
in the growth stage

56:11.000 --> 56:13.000
is relatively small.

56:17.000 --> 56:19.000
Now,

56:19.000 --> 56:21.000
let's talk about

56:21.000 --> 56:23.000
the attenuable region.

56:23.000 --> 56:25.000
If we have

56:25.000 --> 56:27.000
the product

56:27.000 --> 56:29.000
mean size

56:29.000 --> 56:31.000
and sigma p,

56:31.000 --> 56:33.000
and the value

56:33.000 --> 56:35.000
is in the attenuable region,

56:35.000 --> 56:37.000
we can use

56:37.000 --> 56:39.000
the optimization problem

56:39.000 --> 56:41.000
to find out

56:41.000 --> 56:43.000
a set of CDO and

56:43.000 --> 56:45.000
a set of TAUF.

56:45.000 --> 56:47.000
There are many sets of solutions.

56:47.000 --> 56:49.000
The patch time

56:49.000 --> 56:51.000
and the nucleated volume

56:51.000 --> 56:53.000
of each set

56:53.000 --> 56:55.000
are different.

56:55.000 --> 56:57.000
However, the patch time

56:57.000 --> 56:59.000
and the nucleated volume

56:59.000 --> 57:01.000
will depend on

57:01.000 --> 57:03.000
the sequence of

57:03.000 --> 57:05.000
the second function

57:05.000 --> 57:07.000
and the constant function.

57:11.000 --> 57:13.000
We can use

57:13.000 --> 57:15.000
the optimization problem

57:15.000 --> 57:17.000
to find out

57:17.000 --> 57:19.000
the minimum patch time

57:19.000 --> 57:21.000
under the conditions

57:21.000 --> 57:23.000
of the product mean

57:23.000 --> 57:25.000
and variance.

57:27.000 --> 57:29.000
This is a trade-off.

57:29.000 --> 57:31.000
The larger the set point

57:31.000 --> 57:33.000
of the super-saturation,

57:33.000 --> 57:35.000
the shorter the patch time.

57:35.000 --> 57:37.000
However, the same nucleation rate

57:37.000 --> 57:39.000
will be larger.

57:39.000 --> 57:41.000
So, we draw

57:41.000 --> 57:43.000
a curve

57:43.000 --> 57:45.000
to analyze

57:45.000 --> 57:47.000
the relationship.

57:47.000 --> 57:49.000
At the same time,

57:49.000 --> 57:51.000
we can deduce

57:51.000 --> 57:53.000
the corresponding temperature.

57:53.000 --> 57:55.000
Then, we can analyze

57:55.000 --> 57:57.000
how large the set point

57:57.000 --> 57:59.000
of the super-saturation

57:59.000 --> 58:01.000
will be.

58:01.000 --> 58:03.000
In this chapter,

58:03.000 --> 58:05.000
we used the framework

58:05.000 --> 58:07.000
to analyze

58:07.000 --> 58:09.000
the C-CSD tailoring problem

58:09.000 --> 58:11.000
using

58:11.000 --> 58:13.000
gross dissolution cycles.

58:13.000 --> 58:15.000
We can also

58:15.000 --> 58:17.000
analyze the so-called

58:17.000 --> 58:19.000
crystal disappearance.

58:19.000 --> 58:21.000
As for

58:21.000 --> 58:23.000
the expandability

58:23.000 --> 58:25.000
of the attainable region,

58:25.000 --> 58:27.000
it will be determined

58:27.000 --> 58:29.000
by the kinetic.

58:29.000 --> 58:31.000
We also discussed

58:31.000 --> 58:33.000
the competitive relationship

58:33.000 --> 58:35.000
between patch time

58:35.000 --> 58:37.000
and inhibiting nucleation.

58:37.000 --> 58:39.000
The conclusion of

58:39.000 --> 58:41.000
the last chapter

58:41.000 --> 58:43.000
is that

58:43.000 --> 58:45.000
we analyzed the following

58:45.000 --> 58:47.000
problems

58:47.000 --> 58:49.000
using

58:49.000 --> 58:51.000
coordinate transformation,

58:51.000 --> 58:53.000
optimum control theory,

58:53.000 --> 58:55.000
target number trade-off analysis,

58:55.000 --> 58:57.000
rule-of-sum

58:57.000 --> 58:59.000
control strategy,

58:59.000 --> 59:01.000
C0-0 ratio

59:01.000 --> 59:03.000
saving problem,

59:03.000 --> 59:05.000
and attainable region

59:05.000 --> 59:07.000
problem.

59:07.000 --> 59:09.000
This kind of framework

59:09.000 --> 59:11.000
can be used in

59:11.000 --> 59:13.000
different fields.

59:13.000 --> 59:15.000
These are some research directions

59:15.000 --> 59:17.000
for the future,

59:17.000 --> 59:19.000
including the analysis

59:19.000 --> 59:21.000
of more complex

59:21.000 --> 59:23.000
parameters,

59:23.000 --> 59:25.000
including

59:25.000 --> 59:27.000
crystal shape process,

59:27.000 --> 59:29.000
and temperature dependent

59:29.000 --> 59:31.000
systems.

59:31.000 --> 59:33.000
We can also consider

59:33.000 --> 59:35.000
the control of

59:35.000 --> 59:37.000
model-based

59:37.000 --> 59:39.000
control.

59:39.000 --> 59:41.000
There are some

59:41.000 --> 59:43.000
parameter uncertainty problems,

59:43.000 --> 59:45.000
so we need

59:45.000 --> 59:47.000
robustness analysis.

59:47.000 --> 59:49.000
We can also

59:49.000 --> 59:51.000
use optimum

59:51.000 --> 59:53.000
control theory

59:53.000 --> 59:55.000
in some advanced

59:55.000 --> 59:57.000
control strategies,

59:57.000 --> 59:59.000
such as

59:59.000 --> 01:00:01.000
model predictive control.

01:00:01.000 --> 01:00:03.000
This kind of

01:00:03.000 --> 01:00:05.000
control strategy

01:00:05.000 --> 01:00:07.000
requires higher

01:00:07.000 --> 01:00:09.000
computational efficiency.

01:00:09.000 --> 01:00:11.000
This is the

01:00:11.000 --> 01:00:13.000
end of

01:00:13.000 --> 01:00:15.000
today's lecture.

01:00:15.000 --> 01:00:17.000
Thank you for

01:00:17.000 --> 01:00:19.000
listening to my

01:00:19.000 --> 01:00:21.000
presentation.

01:00:21.000 --> 01:00:23.000
If you have any questions,

01:00:23.000 --> 01:00:25.000
please feel free to ask.

01:00:47.000 --> 01:00:49.000
Can you hear me?

01:00:49.000 --> 01:00:51.000
Yes, we can.

01:00:51.000 --> 01:00:53.000
This is a very

01:00:53.000 --> 01:00:55.000
informative talk.

01:00:55.000 --> 01:00:57.000
I have a

01:00:57.000 --> 01:00:59.000
quick question.

01:00:59.000 --> 01:01:01.000
You said robust analysis

01:01:01.000 --> 01:01:03.000
is basically

01:01:03.000 --> 01:01:05.000
like error analysis.

01:01:05.000 --> 01:01:07.000
Let's say

01:01:07.000 --> 01:01:09.000
there is a certain

01:01:09.000 --> 01:01:11.000
uncertainty in the

01:01:11.000 --> 01:01:13.000
kinetic parameter.

01:01:13.000 --> 01:01:15.000
You can only give

01:01:15.000 --> 01:01:17.000
a rough estimate.

01:01:17.000 --> 01:01:19.000
If there is

01:01:19.000 --> 01:01:21.000
such an uncertainty,

01:01:21.000 --> 01:01:23.000
how much difference

01:01:23.000 --> 01:01:25.000
will it make

01:01:25.000 --> 01:01:27.000
if you run

01:01:27.000 --> 01:01:29.000
it again?

01:01:29.000 --> 01:01:31.000
Is that what you mean?

01:01:31.000 --> 01:01:33.000
Yes.

01:01:33.000 --> 01:01:35.000
I am just

01:01:35.000 --> 01:01:37.000
curious

01:01:37.000 --> 01:01:39.000
if this is

01:01:39.000 --> 01:01:41.000
what you want to do

01:01:41.000 --> 01:01:43.000
in the future.

01:01:43.000 --> 01:01:45.000
I am curious

01:01:45.000 --> 01:01:47.000
about the

01:01:47.000 --> 01:01:49.000
kinetic parameter.

01:01:49.000 --> 01:01:51.000
You are right.

01:01:51.000 --> 01:01:53.000
I can understand.

01:01:53.000 --> 01:01:55.000
I am a scientist.

01:01:55.000 --> 01:01:57.000
It is difficult

01:01:57.000 --> 01:01:59.000
to get a precise

01:01:59.000 --> 01:02:01.000
kinetic parameter.

01:02:01.000 --> 01:02:03.000
So I just want to know

01:02:03.000 --> 01:02:05.000
what is the error.

01:02:05.000 --> 01:02:07.000
According to

01:02:07.000 --> 01:02:09.000
the best

01:02:09.000 --> 01:02:11.000
data set

01:02:11.000 --> 01:02:13.000
in the future.

01:02:13.000 --> 01:02:15.000
If

01:02:15.000 --> 01:02:17.000
there is such an

01:02:17.000 --> 01:02:19.000
error,

01:02:19.000 --> 01:02:21.000
how much difference

01:02:21.000 --> 01:02:23.000
will it make

01:02:23.000 --> 01:02:25.000
if you run

01:02:25.000 --> 01:02:27.000
it again?

01:02:27.000 --> 01:02:29.000
Will it cause

01:02:29.000 --> 01:02:31.000
serious consequences?

01:02:31.000 --> 01:02:33.000
If there is

01:02:33.000 --> 01:02:35.000
a certain error,

01:02:35.000 --> 01:02:37.000
we know

01:02:37.000 --> 01:02:39.000
that the model

01:02:39.000 --> 01:02:41.000
will be different.

01:02:41.000 --> 01:02:43.000
I just want to know

01:02:43.000 --> 01:02:45.000
your comment on this.

01:02:45.000 --> 01:02:47.000
First of all,

01:02:47.000 --> 01:02:49.000
this is the

01:02:49.000 --> 01:02:51.000
future research direction.

01:02:51.000 --> 01:02:53.000
We are still

01:02:53.000 --> 01:02:55.000
doing some early

01:02:55.000 --> 01:02:57.000
studies.

01:02:57.000 --> 01:02:59.000
Indeed,

01:02:59.000 --> 01:03:01.000
in the robust

01:03:01.000 --> 01:03:03.000
control

01:03:03.000 --> 01:03:05.000
or error analysis,

01:03:05.000 --> 01:03:07.000
there is a lot of research.

01:03:07.000 --> 01:03:09.000
Will it cause

01:03:09.000 --> 01:03:11.000
disastrous consequences?

01:03:11.000 --> 01:03:13.000
It may not.

01:03:13.000 --> 01:03:15.000
It is because

01:03:15.000 --> 01:03:17.000
the crystallization

01:03:17.000 --> 01:03:19.000
process is quite long.

01:03:19.000 --> 01:03:21.000
Of course, it may cause

01:03:21.000 --> 01:03:23.000
some troubles

01:03:23.000 --> 01:03:25.000
in post-processing.

01:03:25.000 --> 01:03:27.000
Therefore,

01:03:27.000 --> 01:03:29.000
some batch-to-batch

01:03:29.000 --> 01:03:31.000
variations

01:03:31.000 --> 01:03:33.000
or some

01:03:33.000 --> 01:03:35.000
up-and-down errors

01:03:35.000 --> 01:03:37.000
need to be studied.

01:03:37.000 --> 01:03:39.000
As for the

01:03:39.000 --> 01:03:41.000
systems we just mentioned,

01:03:41.000 --> 01:03:43.000
we are currently

01:03:43.000 --> 01:03:45.000
using other people's

01:03:45.000 --> 01:03:47.000
experimental parameters

01:03:47.000 --> 01:03:49.000
to do the so-called

01:03:49.000 --> 01:03:51.000
unknown case analysis.

01:03:51.000 --> 01:03:53.000
At present, we are

01:03:53.000 --> 01:03:55.000
focusing on

01:03:55.000 --> 01:03:57.000
some so-called

01:03:57.000 --> 01:03:59.000
goal-tradeoff

01:03:59.000 --> 01:04:01.000
algorithms.

01:04:01.000 --> 01:04:03.000
We haven't

01:04:03.000 --> 01:04:05.000
done this kind of

01:04:05.000 --> 01:04:07.000
research in other

01:04:07.000 --> 01:04:09.000
groups.

01:04:09.000 --> 01:04:11.000
I see.

01:04:11.000 --> 01:04:13.000
Since you are discussing

01:04:13.000 --> 01:04:15.000
the crystallization process,

01:04:15.000 --> 01:04:17.000
assuming that

01:04:17.000 --> 01:04:19.000
there are some errors in

01:04:19.000 --> 01:04:21.000
the kinetic parameters,

01:04:21.000 --> 01:04:23.000
but the result is still

01:04:23.000 --> 01:04:25.000
optimized,

01:04:25.000 --> 01:04:27.000
it is

01:04:27.000 --> 01:04:29.000
quite reasonable.

01:04:29.000 --> 01:04:31.000
Indeed,

01:04:31.000 --> 01:04:33.000
we may consider

01:04:33.000 --> 01:04:35.000
some so-called nominal values

01:04:35.000 --> 01:04:37.000
and some so-called robust values.

01:04:37.000 --> 01:04:39.000
For example,

01:04:39.000 --> 01:04:41.000
under some

01:04:43.000 --> 01:04:45.000
kinetic errors,

01:04:45.000 --> 01:04:47.000
what is the

01:04:47.000 --> 01:04:49.000
variation of the result?

01:04:51.000 --> 01:04:53.000
I see.

01:04:53.000 --> 01:04:55.000
Have you ever done

01:04:55.000 --> 01:04:57.000
any experiments

01:04:57.000 --> 01:04:59.000
with the crystallization

01:04:59.000 --> 01:05:01.000
process?

01:05:01.000 --> 01:05:03.000
For example,

01:05:03.000 --> 01:05:05.000
have you ever

01:05:05.000 --> 01:05:07.000
compared some

01:05:07.000 --> 01:05:09.000
experimental data

01:05:09.000 --> 01:05:11.000
with the result of

01:05:11.000 --> 01:05:13.000
profiling?

01:05:15.000 --> 01:05:17.000
To be honest,

01:05:17.000 --> 01:05:19.000
I haven't.

01:05:19.000 --> 01:05:21.000
Frankly speaking,

01:05:21.000 --> 01:05:23.000
we are

01:05:23.000 --> 01:05:25.000
optimizing

01:05:25.000 --> 01:05:27.000
and calculating

01:05:27.000 --> 01:05:29.000
the result.

01:05:31.000 --> 01:05:33.000
Thank you.

01:05:33.000 --> 01:05:35.000
Thank you.

01:05:43.000 --> 01:05:45.000
Any other questions?

01:05:53.000 --> 01:05:55.000
OK.

01:05:55.000 --> 01:05:57.000
I have the most questions.

01:05:59.000 --> 01:06:01.000
I have a question.

01:06:01.000 --> 01:06:03.000
But I am not sure

01:06:03.000 --> 01:06:05.000
if I have mentioned it.

01:06:05.000 --> 01:06:07.000
You mentioned

01:06:07.000 --> 01:06:09.000
the multi-target

01:06:09.000 --> 01:06:11.000
PBE.

01:06:11.000 --> 01:06:13.000
I forgot which page.

01:06:13.000 --> 01:06:15.000
You mentioned Alpha, Beta,

01:06:15.000 --> 01:06:17.000
Beta 1 and Beta 2.

01:06:17.000 --> 01:06:19.000
You mentioned

01:06:19.000 --> 01:06:21.000
how to

01:06:21.000 --> 01:06:23.000
look at Beta 1 and Beta 2.

01:06:23.000 --> 01:06:25.000
Right.

01:06:25.000 --> 01:06:27.000
When you

01:06:27.000 --> 01:06:29.000
introduced the function,

01:06:29.000 --> 01:06:31.000
I was curious

01:06:31.000 --> 01:06:33.000
how you

01:06:33.000 --> 01:06:35.000
decide the

01:06:35.000 --> 01:06:37.000
weight.

01:06:37.000 --> 01:06:39.000
It seems that

01:06:39.000 --> 01:06:41.000
you have

01:06:41.000 --> 01:06:43.000
linked

01:06:43.000 --> 01:06:45.000
Phi 1 and Phi 2.

01:06:45.000 --> 01:06:47.000
Have you considered

01:06:47.000 --> 01:06:49.000
linking more?

01:06:49.000 --> 01:06:51.000
Or

01:06:51.000 --> 01:06:53.000
do you use

01:06:53.000 --> 01:06:55.000
this expression?

01:06:59.000 --> 01:07:01.000
Phi 1 and Phi 2.

01:07:01.000 --> 01:07:03.000
Alpha 1

01:07:03.000 --> 01:07:05.000
will be

01:07:05.000 --> 01:07:07.000
considered as

01:07:07.000 --> 01:07:09.000
Phi 1.

01:07:09.000 --> 01:07:11.000
Alpha between 0 and 1

01:07:11.000 --> 01:07:13.000
will be

01:07:13.000 --> 01:07:15.000
Phi 1 and Phi 2,

01:07:15.000 --> 01:07:17.000
any weight.

01:07:17.000 --> 01:07:19.000
As long as

01:07:19.000 --> 01:07:21.000
Alpha between 0 and 1

01:07:21.000 --> 01:07:23.000
can be

01:07:23.000 --> 01:07:25.000
analyzed.

01:07:27.000 --> 01:07:29.000
Sorry.

01:07:29.000 --> 01:07:31.000
You may have interrupted.

01:07:33.000 --> 01:07:35.000
You can

01:07:35.000 --> 01:07:37.000
continue.

01:07:37.000 --> 01:07:39.000
OK.

01:07:39.000 --> 01:07:41.000
Alpha between 0 and 1

01:07:41.000 --> 01:07:43.000
will be considered as

01:07:43.000 --> 01:07:45.000
Phi 1 or Phi 2.

01:07:45.000 --> 01:07:47.000
As long as

01:07:47.000 --> 01:07:49.000
Alpha between 0 and 1

01:07:49.000 --> 01:07:51.000
can be considered as

01:07:51.000 --> 01:07:53.000
Phi 1 or Phi 2,

01:07:53.000 --> 01:07:55.000
any weight.

01:07:55.000 --> 01:07:57.000
Right.

01:07:57.000 --> 01:07:59.000
How do you know

01:07:59.000 --> 01:08:01.000
which one is better?

01:08:01.000 --> 01:08:03.000
If Alpha is bigger,

01:08:03.000 --> 01:08:05.000
Phi 1 is more important.

01:08:05.000 --> 01:08:07.000
If Alpha is smaller,

01:08:07.000 --> 01:08:09.000
Phi 2 is more important.

01:08:09.000 --> 01:08:11.000
How do you know

01:08:11.000 --> 01:08:13.000
which one is more important?

01:08:13.000 --> 01:08:15.000
OK.

01:08:15.000 --> 01:08:17.000
Because

01:08:17.000 --> 01:08:19.000
the first question is

01:08:19.000 --> 01:08:21.000
it's hard to say.

01:08:21.000 --> 01:08:23.000
For example, Phi 1 is twice as important as Phi 2.

01:08:23.000 --> 01:08:25.000
It's hard to define.

01:08:25.000 --> 01:08:27.000
So the idea is

01:08:27.000 --> 01:08:29.000
we do a

01:08:29.000 --> 01:08:31.000
so-called normalization

01:08:31.000 --> 01:08:33.000
on page 22.

01:08:33.000 --> 01:08:35.000
We compress Phi 1 and Phi 2

01:08:35.000 --> 01:08:37.000
to be between 0 and 1.

01:08:37.000 --> 01:08:39.000
Like this picture on the right.

01:08:39.000 --> 01:08:41.000
These two points,

01:08:41.000 --> 01:08:43.000
these two points correspond to

01:08:43.000 --> 01:08:45.000
the best solution of Phi 1 and Phi 2.

01:08:45.000 --> 01:08:47.000
After normalization,

01:08:47.000 --> 01:08:49.000
it corresponds to

01:08:49.000 --> 01:08:51.000
the two points

01:08:51.000 --> 01:08:53.000
0 and 1.

01:08:53.000 --> 01:08:55.000
So on such a plane,

01:08:55.000 --> 01:08:57.000
the original point is

01:08:57.000 --> 01:08:59.000
the best solution

01:08:59.000 --> 01:09:01.000
of two goal functions at the same time.

01:09:01.000 --> 01:09:03.000
But due to competition,

01:09:03.000 --> 01:09:05.000
this is not possible.

01:09:05.000 --> 01:09:07.000
So we want to

01:09:07.000 --> 01:09:09.000
draw the cradle front first.

01:09:09.000 --> 01:09:11.000
Then we find a point

01:09:11.000 --> 01:09:13.000
that is the shortest distance

01:09:13.000 --> 01:09:15.000
between this point and the original point.

01:09:15.000 --> 01:09:17.000
It means that

01:09:17.000 --> 01:09:19.000
the value of this point

01:09:19.000 --> 01:09:21.000
in Phi 1 and Phi 2

01:09:21.000 --> 01:09:23.000
and the percentage difference

01:09:23.000 --> 01:09:25.000
between them

01:09:25.000 --> 01:09:27.000
is the smallest.

01:09:27.000 --> 01:09:29.000
And this point is

01:09:29.000 --> 01:09:31.000
the best trade-off.

01:09:31.000 --> 01:09:33.000
There is a

01:09:33.000 --> 01:09:35.000
name in the multi-goal function

01:09:35.000 --> 01:09:37.000
called knee point.

01:09:37.000 --> 01:09:39.000
It can be used to describe such a point.

01:09:39.000 --> 01:09:41.000
Basically, it is done

01:09:41.000 --> 01:09:43.000
in this way.

01:09:43.000 --> 01:09:45.000
I see.

01:09:45.000 --> 01:09:47.000
What I just saw is

01:09:47.000 --> 01:09:49.000
how to say

01:09:49.000 --> 01:09:51.000
when you minimize

01:09:51.000 --> 01:09:53.000
the distance from the original point,

01:09:53.000 --> 01:09:55.000
my intuition is that

01:09:55.000 --> 01:09:57.000
in terms of math,

01:09:57.000 --> 01:09:59.000
that point also means

01:09:59.000 --> 01:10:01.000
that the plus solution

01:10:01.000 --> 01:10:03.000
you are looking for

01:10:03.000 --> 01:10:05.000
should be minimized.

01:10:05.000 --> 01:10:07.000
Or is it not necessary?

01:10:07.000 --> 01:10:09.000
I'm just curious

01:10:09.000 --> 01:10:11.000
if there is a link between them.

01:10:11.000 --> 01:10:13.000
I should say

01:10:13.000 --> 01:10:15.000
that there is a

01:10:15.000 --> 01:10:17.000
so-called double-layer optimization

01:10:17.000 --> 01:10:19.000
when solving.

01:10:19.000 --> 01:10:21.000
The first layer is

01:10:21.000 --> 01:10:23.000
to find any point

01:10:23.000 --> 01:10:25.000
on this cradle front.

01:10:25.000 --> 01:10:27.000
We can call any point

01:10:27.000 --> 01:10:29.000
a plus solution.

01:10:29.000 --> 01:10:31.000
It's just that

01:10:31.000 --> 01:10:33.000
we need to find

01:10:33.000 --> 01:10:35.000
the best solution.

01:10:35.000 --> 01:10:37.000
Then we need to

01:10:37.000 --> 01:10:39.000
minimize the distance.

01:10:39.000 --> 01:10:41.000
So in fact,

01:10:41.000 --> 01:10:43.000
when solving such a problem,

01:10:43.000 --> 01:10:45.000
it is actually a double-layer optimization problem.

01:10:47.000 --> 01:10:49.000
Double-layer may come from

01:10:49.000 --> 01:10:51.000
you have two goal functions.

01:10:55.000 --> 01:10:57.000
Because I just saw that

01:10:57.000 --> 01:10:59.000
you have some different combinations,

01:10:59.000 --> 01:11:01.000
maybe four combinations,

01:11:01.000 --> 01:11:03.000
and each of them involves

01:11:03.000 --> 01:11:05.000
two goal functions.

01:11:05.000 --> 01:11:07.000
Of course,

01:11:07.000 --> 01:11:09.000
in optimization,

01:11:09.000 --> 01:11:11.000
the two goal functions

01:11:11.000 --> 01:11:13.000
must be a little bit

01:11:13.000 --> 01:11:15.000
equal to each other.

01:11:15.000 --> 01:11:17.000
This is more meaningful.

01:11:17.000 --> 01:11:19.000
Otherwise,

01:11:19.000 --> 01:11:21.000
it's just that both are minimized

01:11:21.000 --> 01:11:23.000
or both are maximized.

01:11:23.000 --> 01:11:25.000
I can imagine

01:11:25.000 --> 01:11:27.000
that if you have n goal functions,

01:11:27.000 --> 01:11:29.000
your combination must be

01:11:29.000 --> 01:11:31.000
c6x2 or something like that.

01:11:31.000 --> 01:11:33.000
I'm just wondering

01:11:33.000 --> 01:11:35.000
whether you have ever

01:11:35.000 --> 01:11:37.000
considered

01:11:37.000 --> 01:11:39.000
whether it is reasonable to

01:11:39.000 --> 01:11:41.000
consider more than two goal functions,

01:11:41.000 --> 01:11:43.000
or even three or more goal functions.

01:11:43.000 --> 01:11:45.000
OK.

01:11:45.000 --> 01:11:47.000
There are several ideas.

01:11:47.000 --> 01:11:49.000
The first idea is

01:11:49.000 --> 01:11:51.000
that of course we can

01:11:51.000 --> 01:11:53.000
consider six goal functions.

01:11:53.000 --> 01:11:55.000
Of course we can do

01:11:55.000 --> 01:11:57.000
c6x2 or 15.

01:11:57.000 --> 01:11:59.000
However,

01:11:59.000 --> 01:12:01.000
is it necessary?

01:12:01.000 --> 01:12:03.000
In fact,

01:12:03.000 --> 01:12:05.000
between some goal functions,

01:12:05.000 --> 01:12:07.000
how should I put it?

01:12:07.000 --> 01:12:09.000
When doing the analysis,

01:12:09.000 --> 01:12:11.000
we found that

01:12:11.000 --> 01:12:13.000
the relationship between

01:12:13.000 --> 01:12:15.000
the higher moment and lower moment

01:12:15.000 --> 01:12:17.000
is significantly stronger.

01:12:17.000 --> 01:12:19.000
So in this case,

01:12:19.000 --> 01:12:21.000
when we are doing

01:12:21.000 --> 01:12:23.000
the so-called tradeoff analysis

01:12:23.000 --> 01:12:25.000
or when we want to find

01:12:25.000 --> 01:12:27.000
the relationship between

01:12:27.000 --> 01:12:29.000
the higher moment

01:12:29.000 --> 01:12:31.000
and lower moment,

01:12:31.000 --> 01:12:33.000
it is not necessary

01:12:33.000 --> 01:12:35.000
to consider

01:12:35.000 --> 01:12:37.000
the so-called

01:12:37.000 --> 01:12:39.000
two higher moment

01:12:39.000 --> 01:12:41.000
or two lower moment

01:12:41.000 --> 01:12:43.000
goal functions.

01:12:43.000 --> 01:12:45.000
Of course,

01:12:45.000 --> 01:12:47.000
in fact,

01:12:47.000 --> 01:12:49.000
it can be done,

01:12:49.000 --> 01:12:51.000
and it can also be done mathematically.

01:12:51.000 --> 01:12:53.000
However,

01:12:53.000 --> 01:12:55.000
the relationship between the higher moment

01:12:55.000 --> 01:12:57.000
and lower moment

01:12:57.000 --> 01:12:59.000
may become plateau surface

01:12:59.000 --> 01:13:01.000
or even higher.

01:13:01.000 --> 01:13:03.000
I believe it can be done mathematically.

01:13:03.000 --> 01:13:05.000
It's just that we didn't do

01:13:05.000 --> 01:13:07.000
such a thing.

01:13:07.000 --> 01:13:09.000
In addition,

01:13:09.000 --> 01:13:11.000
when we usually

01:13:11.000 --> 01:13:13.000
explore the

01:13:13.000 --> 01:13:15.000
Piscitein's maximization,

01:13:15.000 --> 01:13:17.000
we probably only see

01:13:17.000 --> 01:13:19.000
at most two goal functions.

01:13:19.000 --> 01:13:21.000
At present,

01:13:21.000 --> 01:13:23.000
we only see more than three

01:13:23.000 --> 01:13:25.000
goal functions.

01:13:25.000 --> 01:13:27.000
Another idea may be that

01:13:27.000 --> 01:13:29.000
these are some of the

01:13:29.000 --> 01:13:31.000
characteristics of product CST,

01:13:31.000 --> 01:13:33.000
so the two characteristics

01:13:33.000 --> 01:13:35.000
can describe

01:13:35.000 --> 01:13:37.000
the benefits and

01:13:37.000 --> 01:13:39.000
disadvantages of this product.

01:13:39.000 --> 01:13:41.000
I see.

01:13:41.000 --> 01:13:43.000
So in most of your cases,

01:13:43.000 --> 01:13:45.000
it sounds like

01:13:45.000 --> 01:13:47.000
before you did it,

01:13:47.000 --> 01:13:49.000
you probably knew

01:13:49.000 --> 01:13:51.000
how to get

01:13:51.000 --> 01:13:53.000
which two

01:13:53.000 --> 01:13:55.000
or how to say

01:13:55.000 --> 01:13:57.000
which two

01:13:57.000 --> 01:13:59.000
goal functions

01:13:59.000 --> 01:14:01.000
have a stronger

01:14:01.000 --> 01:14:03.000
anti-alignment relationship.

01:14:03.000 --> 01:14:05.000
Yes.

01:14:05.000 --> 01:14:07.000
In fact, in some

01:14:07.000 --> 01:14:09.000
earlier studies,

01:14:09.000 --> 01:14:11.000
it was found that

01:14:11.000 --> 01:14:13.000
for example,

01:14:13.000 --> 01:14:15.000
the moment of the goal function

01:14:15.000 --> 01:14:17.000
is relatively large,

01:14:17.000 --> 01:14:19.000
its trajectory will become

01:14:19.000 --> 01:14:21.000
larger in the later stage of the growth rate.

01:14:21.000 --> 01:14:23.000
On the contrary,

01:14:23.000 --> 01:14:25.000
if the goal function

01:14:25.000 --> 01:14:27.000
is composed of small moments,

01:14:27.000 --> 01:14:29.000
its trajectory will be

01:14:29.000 --> 01:14:31.000
larger in the early stage of the growth rate.

01:14:31.000 --> 01:14:33.000
Just like this,

01:14:33.000 --> 01:14:35.000
there will be some

01:14:35.000 --> 01:14:37.000
ideas that

01:14:37.000 --> 01:14:39.000
whether the

01:14:39.000 --> 01:14:41.000
early stage is larger,

01:14:41.000 --> 01:14:43.000
and the later stage is larger,

01:14:43.000 --> 01:14:45.000
its trade-off is constant.

01:14:45.000 --> 01:14:47.000
There is such an idea.

01:14:47.000 --> 01:14:49.000
But the reason why

01:14:49.000 --> 01:14:51.000
earlier studies

01:14:51.000 --> 01:14:53.000
can't draw a

01:14:53.000 --> 01:14:55.000
plateau front like this

01:14:55.000 --> 01:14:57.000
is because

01:14:57.000 --> 01:14:59.000
in fact,

01:14:59.000 --> 01:15:01.000
if I set an alpha,

01:15:01.000 --> 01:15:03.000
I have to solve the

01:15:03.000 --> 01:15:05.000
optimization problem once.

01:15:05.000 --> 01:15:07.000
If I use

01:15:07.000 --> 01:15:09.000
some different

01:15:09.000 --> 01:15:11.000
so-called solving methods,

01:15:11.000 --> 01:15:13.000
it may involve

01:15:13.000 --> 01:15:15.000
some non-variable.

01:15:15.000 --> 01:15:17.000
In this way,

01:15:17.000 --> 01:15:19.000
I only need one point,

01:15:19.000 --> 01:15:21.000
and I may die.

01:15:21.000 --> 01:15:23.000
Not to mention that

01:15:23.000 --> 01:15:25.000
I have to draw a complete plateau front,

01:15:25.000 --> 01:15:27.000
and I have to find the knee point.

01:15:27.000 --> 01:15:29.000
So earlier studies

01:15:29.000 --> 01:15:31.000
had this idea,

01:15:31.000 --> 01:15:33.000
but due to

01:15:33.000 --> 01:15:35.000
computational burden,

01:15:35.000 --> 01:15:37.000
they didn't do this in the early stage.

01:15:37.000 --> 01:15:39.000
Until later,

01:15:39.000 --> 01:15:41.000
the German

01:15:41.000 --> 01:15:43.000
approach

01:15:43.000 --> 01:15:45.000
was introduced,

01:15:45.000 --> 01:15:47.000
we realized that

01:15:47.000 --> 01:15:49.000
we can quickly

01:15:49.000 --> 01:15:51.000
measure the

01:15:51.000 --> 01:15:53.000
trade-off.

01:15:55.000 --> 01:15:57.000
I'm just curious.

01:15:57.000 --> 01:15:59.000
You probably know

01:15:59.000 --> 01:16:01.000
the cost of

01:16:01.000 --> 01:16:03.000
calculation

01:16:03.000 --> 01:16:05.000
and

01:16:05.000 --> 01:16:07.000
the complexity

01:16:07.000 --> 01:16:09.000
of the time

01:16:09.000 --> 01:16:11.000
to draw a

01:16:11.000 --> 01:16:13.000
plateau front.

01:16:15.000 --> 01:16:17.000
I'm not sure.

01:16:17.000 --> 01:16:19.000
But I can be sure that

01:16:19.000 --> 01:16:21.000
if today's situation

01:16:21.000 --> 01:16:23.000
is like this,

01:16:23.000 --> 01:16:25.000
because of

01:16:25.000 --> 01:16:27.000
the time limit of

01:16:27.000 --> 01:16:29.000
this video,

01:16:29.000 --> 01:16:31.000
I didn't show it.

01:16:31.000 --> 01:16:33.000
In fact,

01:16:33.000 --> 01:16:35.000
the so-called

01:16:35.000 --> 01:16:37.000
best

01:16:37.000 --> 01:16:39.000
U-star

01:16:39.000 --> 01:16:41.000
solution

01:16:41.000 --> 01:16:43.000
can be written out.

01:16:43.000 --> 01:16:45.000
It can be written out

01:16:45.000 --> 01:16:47.000
under some assumptions.

01:16:47.000 --> 01:16:49.000
But if it's written out,

01:16:49.000 --> 01:16:51.000
it's just

01:16:51.000 --> 01:16:53.000
a question of

01:16:53.000 --> 01:16:55.000
point ODE.

01:16:55.000 --> 01:16:57.000
And the point

01:16:57.000 --> 01:16:59.000
refers to

01:16:59.000 --> 01:17:01.000
the initial value problem.

01:17:01.000 --> 01:17:03.000
So it becomes a very simple

01:17:03.000 --> 01:17:05.000
solution

01:17:05.000 --> 01:17:07.000
that can be solved

01:17:07.000 --> 01:17:09.000
with some

01:17:09.000 --> 01:17:11.000
false-order solvers.

01:17:11.000 --> 01:17:13.000
This method

01:17:13.000 --> 01:17:15.000
is a very

01:17:15.000 --> 01:17:17.000
competitive reason.

01:17:17.000 --> 01:17:19.000
I see.

01:17:19.000 --> 01:17:21.000
Thank you.

01:17:21.000 --> 01:17:23.000
Anyone else

01:17:31.000 --> 01:17:33.000
have any questions

01:17:33.000 --> 01:17:35.000
for the presentation?

01:17:43.000 --> 01:17:45.000
I actually have

01:17:45.000 --> 01:17:47.000
some questions

01:17:47.000 --> 01:17:49.000
and some

01:17:49.000 --> 01:17:51.000
ideas.

01:17:51.000 --> 01:17:53.000
For example,

01:17:53.000 --> 01:17:55.000
in our lab,

01:17:55.000 --> 01:17:57.000
there is a senior

01:17:57.000 --> 01:17:59.000
who is going to

01:17:59.000 --> 01:18:01.000
parameterize

01:18:01.000 --> 01:18:03.000
some

01:18:03.000 --> 01:18:05.000
particles'

01:18:05.000 --> 01:18:07.000
positions.

01:18:07.000 --> 01:18:09.000
In the process of

01:18:09.000 --> 01:18:11.000
parameterization,

01:18:11.000 --> 01:18:13.000
he is going to

01:18:13.000 --> 01:18:15.000
predict

01:18:15.000 --> 01:18:17.000
the two parameters

01:18:17.000 --> 01:18:19.000
of Lennard-Jones

01:18:19.000 --> 01:18:21.000
in a particle.

01:18:21.000 --> 01:18:23.000
He may

01:18:23.000 --> 01:18:25.000
have four

01:18:25.000 --> 01:18:27.000
experimental data

01:18:27.000 --> 01:18:29.000
that he can

01:18:29.000 --> 01:18:31.000
take down

01:18:31.000 --> 01:18:33.000
to fit.

01:18:33.000 --> 01:18:35.000
At that time,

01:18:35.000 --> 01:18:37.000
he didn't know

01:18:37.000 --> 01:18:39.000
which of the four

01:18:39.000 --> 01:18:41.000
should be taken

01:18:41.000 --> 01:18:43.000
or not.

01:18:43.000 --> 01:18:45.000
So this is

01:18:45.000 --> 01:18:47.000
a little bit

01:18:47.000 --> 01:18:49.000
like a

01:18:49.000 --> 01:18:51.000
multi-target function.

01:18:51.000 --> 01:18:53.000
I'm not sure

01:18:53.000 --> 01:18:55.000
whether this

01:18:55.000 --> 01:18:57.000
method

01:18:57.000 --> 01:18:59.000
can be

01:18:59.000 --> 01:19:01.000
applied in your field.

01:19:01.000 --> 01:19:03.000
But it reminds me that

01:19:03.000 --> 01:19:05.000
our senior used

01:19:05.000 --> 01:19:07.000
Bayesian inference.

01:19:07.000 --> 01:19:09.000
There is an important

01:19:09.000 --> 01:19:11.000
thing in Bayesian inference,

01:19:11.000 --> 01:19:13.000
which is the

01:19:13.000 --> 01:19:15.000
base factor.

01:19:15.000 --> 01:19:17.000
The base factor

01:19:17.000 --> 01:19:19.000
can estimate

01:19:19.000 --> 01:19:21.000
the accuracy

01:19:21.000 --> 01:19:23.000
after adding

01:19:23.000 --> 01:19:25.000
a parameter.

01:19:25.000 --> 01:19:27.000
Sometimes,

01:19:27.000 --> 01:19:29.000
adding one more parameter

01:19:29.000 --> 01:19:31.000
may not be

01:19:31.000 --> 01:19:33.000
as good as

01:19:33.000 --> 01:19:35.000
expected.

01:19:35.000 --> 01:19:37.000
So we use

01:19:37.000 --> 01:19:39.000
the base factor

01:19:39.000 --> 01:19:41.000
for multi-target function.

01:19:41.000 --> 01:19:43.000
I'm curious about the complexity of time.

01:19:43.000 --> 01:19:45.000
Sometimes, when we think about

01:19:45.000 --> 01:19:47.000
high-end problems,

01:19:47.000 --> 01:19:49.000
the cost of

01:19:49.000 --> 01:19:51.000
calculation

01:19:51.000 --> 01:19:53.000
may not be linear.

01:19:53.000 --> 01:19:55.000
So the senior's

01:19:55.000 --> 01:19:57.000
method may not be

01:19:57.000 --> 01:19:59.000
applicable to everything.

01:19:59.000 --> 01:20:01.000
Sometimes, the cost of

01:20:01.000 --> 01:20:03.000
optimizing is too high.

01:20:03.000 --> 01:20:05.000
If we consider two parameters

01:20:05.000 --> 01:20:07.000
and get 90% accuracy,

01:20:07.000 --> 01:20:09.000
the cost may not be

01:20:09.000 --> 01:20:11.000
as high as

01:20:11.000 --> 01:20:13.000
expected.

01:20:13.000 --> 01:20:15.000
Actually,

01:20:15.000 --> 01:20:17.000
we have encountered

01:20:17.000 --> 01:20:19.000
this problem recently.

01:20:19.000 --> 01:20:21.000
It may be

01:20:21.000 --> 01:20:23.000
related to this screen.

01:20:23.000 --> 01:20:25.000
For example,

01:20:25.000 --> 01:20:27.000
when we are doing

01:20:27.000 --> 01:20:29.000
production cooperation,

01:20:29.000 --> 01:20:31.000
we often need to

01:20:31.000 --> 01:20:33.000
fit some live data.

01:20:33.000 --> 01:20:35.000
For example,

01:20:35.000 --> 01:20:37.000
today,

01:20:37.000 --> 01:20:39.000
a junior

01:20:39.000 --> 01:20:41.000
is doing a

01:20:41.000 --> 01:20:43.000
high-polymer analysis

01:20:43.000 --> 01:20:45.000
project.

01:20:45.000 --> 01:20:47.000
The reaction of

01:20:47.000 --> 01:20:49.000
high-polymer analysis

01:20:49.000 --> 01:20:51.000
is very complicated.

01:20:51.000 --> 01:20:53.000
There are only 20 or 30

01:20:53.000 --> 01:20:55.000
power rooms,

01:20:55.000 --> 01:20:57.000
not to mention

01:20:57.000 --> 01:20:59.000
each power room

01:20:59.000 --> 01:21:01.000
has its own parameters.

01:21:01.000 --> 01:21:03.000
So we are thinking

01:21:03.000 --> 01:21:05.000
how to do fitting

01:21:05.000 --> 01:21:07.000
so that

01:21:07.000 --> 01:21:09.000
the model

01:21:09.000 --> 01:21:11.000
can be built

01:21:11.000 --> 01:21:13.000
with Aspen Plus

01:21:13.000 --> 01:21:15.000
or something else.

01:21:15.000 --> 01:21:17.000
At that time,

01:21:17.000 --> 01:21:19.000
a junior

01:21:19.000 --> 01:21:21.000
used a

01:21:21.000 --> 01:21:23.000
set of

01:21:23.000 --> 01:21:25.000
Bayesian optimization

01:21:25.000 --> 01:21:27.000
in Python.

01:21:27.000 --> 01:21:29.000
I don't know if you mentioned

01:21:29.000 --> 01:21:31.000
this just now.

01:21:31.000 --> 01:21:33.000
There are some projects

01:21:33.000 --> 01:21:35.000
that have

01:21:35.000 --> 01:21:37.000
achieved some success

01:21:37.000 --> 01:21:39.000
with Bayesian

01:21:39.000 --> 01:21:41.000
optimization.

01:21:43.000 --> 01:21:45.000
I think it should be the same.

01:21:45.000 --> 01:21:47.000
I haven't used Python,

01:21:47.000 --> 01:21:49.000
but I guess it's

01:21:49.000 --> 01:21:51.000
similar in theory.

01:21:51.000 --> 01:21:53.000
Yes,

01:21:53.000 --> 01:21:55.000
I have

01:21:55.000 --> 01:21:57.000
encountered a similar problem.

01:21:57.000 --> 01:21:59.000
For example,

01:21:59.000 --> 01:22:01.000
we want to build

01:22:01.000 --> 01:22:03.000
a Cydia model.

01:22:03.000 --> 01:22:05.000
The problem with this model

01:22:05.000 --> 01:22:07.000
is that it takes

01:22:07.000 --> 01:22:09.000
quite a long time

01:22:09.000 --> 01:22:11.000
to calculate

01:22:11.000 --> 01:22:13.000
with Aspen.

01:22:13.000 --> 01:22:15.000
One and a half minutes

01:22:15.000 --> 01:22:17.000
is not too long,

01:22:17.000 --> 01:22:19.000
but there are

01:22:19.000 --> 01:22:21.000
a lot of

01:22:21.000 --> 01:22:23.000
fittings needed.

01:22:23.000 --> 01:22:25.000
The performance

01:22:25.000 --> 01:22:27.000
of the computer is also limited.

01:22:27.000 --> 01:22:29.000
I don't know

01:22:29.000 --> 01:22:31.000
which parameter combination

01:22:31.000 --> 01:22:33.000
is the best,

01:22:33.000 --> 01:22:35.000
so I'm trying to

01:22:35.000 --> 01:22:37.000
find a better

01:22:37.000 --> 01:22:39.000
fitting method.

01:22:39.000 --> 01:22:41.000
Whether it's

01:22:41.000 --> 01:22:43.000
good parameters

01:22:43.000 --> 01:22:45.000
or some

01:22:45.000 --> 01:22:47.000
uncertainty in code data,

01:22:47.000 --> 01:22:49.000
it's quite big.

01:22:49.000 --> 01:22:51.000
It's quite a headache for me.

01:22:51.000 --> 01:22:53.000
It sounds like

01:22:53.000 --> 01:22:55.000
the idea

01:22:55.000 --> 01:22:57.000
of machine learning

01:22:57.000 --> 01:22:59.000
can also be used

01:22:59.000 --> 01:23:01.000
in some cases.

01:23:03.000 --> 01:23:05.000
Do you want to consider

01:23:05.000 --> 01:23:07.000
machine learning?

01:23:11.000 --> 01:23:13.000
No,

01:23:13.000 --> 01:23:15.000
fitting is just a part

01:23:15.000 --> 01:23:17.000
of your job.

01:23:17.000 --> 01:23:19.000
I'm just kidding.

01:23:19.000 --> 01:23:21.000
Everyone loves machine learning.

01:23:21.000 --> 01:23:23.000
Actually,

01:23:23.000 --> 01:23:25.000
since three years ago,

01:23:25.000 --> 01:23:27.000
some cases

01:23:27.000 --> 01:23:29.000
of ASP

01:23:29.000 --> 01:23:31.000
have been

01:23:31.000 --> 01:23:33.000
doing machine learning.

01:23:33.000 --> 01:23:35.000
About two years ago,

01:23:35.000 --> 01:23:37.000
ASP

01:23:37.000 --> 01:23:39.000
proposed

01:23:39.000 --> 01:23:41.000
an idea

01:23:41.000 --> 01:23:43.000
in the AI era.

01:23:43.000 --> 01:23:45.000
They asked

01:23:45.000 --> 01:23:47.000
every department

01:23:47.000 --> 01:23:49.000
to propose a

01:23:49.000 --> 01:23:51.000
improvement case

01:23:51.000 --> 01:23:53.000
and the improvement

01:23:53.000 --> 01:23:55.000
would directly affect

01:23:55.000 --> 01:23:57.000
the popularity of the final exam.

01:23:57.000 --> 01:23:59.000
At that time,

01:23:59.000 --> 01:24:01.000
the result was

01:24:01.000 --> 01:24:03.000
that the manufacturers

01:24:03.000 --> 01:24:05.000
could only

01:24:05.000 --> 01:24:07.000
vote

01:24:07.000 --> 01:24:09.000
to see if

01:24:09.000 --> 01:24:11.000
they could do it.

01:24:11.000 --> 01:24:13.000
At that time,

01:24:13.000 --> 01:24:15.000
we didn't know much about it,

01:24:15.000 --> 01:24:17.000
so we went to

01:24:17.000 --> 01:24:19.000
the Department of Mechanical Engineering

01:24:19.000 --> 01:24:21.000
and proposed a case.

01:24:21.000 --> 01:24:23.000
It turned out

01:24:23.000 --> 01:24:25.000
to be a team

01:24:25.000 --> 01:24:27.000
of a chemical plant,

01:24:27.000 --> 01:24:29.000
a chemical plant,

01:24:29.000 --> 01:24:31.000
and a factory.

01:24:31.000 --> 01:24:33.000
However,

01:24:33.000 --> 01:24:35.000
we found that

01:24:35.000 --> 01:24:37.000
there were some shortcomings

01:24:37.000 --> 01:24:39.000
or uncertainties

01:24:39.000 --> 01:24:41.000
in the sample data

01:24:41.000 --> 01:24:43.000
or some damage to the sample data.

01:24:43.000 --> 01:24:45.000
So,

01:24:45.000 --> 01:24:47.000
the final result

01:24:47.000 --> 01:24:49.000
was too limited.

01:24:51.000 --> 01:24:53.000
In my experience,

01:24:53.000 --> 01:24:55.000
what we could do

01:24:55.000 --> 01:24:57.000
was quite limited.

01:24:59.000 --> 01:25:01.000
The results were not very good,

01:25:01.000 --> 01:25:03.000
but I don't know if it was because

01:25:03.000 --> 01:25:05.000
we were not

01:25:05.000 --> 01:25:07.000
well-versed enough.

01:25:07.000 --> 01:25:09.000
I don't know if it was because

01:25:09.000 --> 01:25:11.000
we were not well-versed enough.

01:25:11.000 --> 01:25:13.000
It was indeed in the development stage.

01:25:13.000 --> 01:25:15.000
Because in the end,

01:25:15.000 --> 01:25:17.000
you still have to go back to physics.

01:25:17.000 --> 01:25:19.000
How do you connect

01:25:19.000 --> 01:25:21.000
with physics in the end?

01:25:21.000 --> 01:25:23.000
This is also a topic

01:25:23.000 --> 01:25:25.000
that we have been working on.

01:25:25.000 --> 01:25:27.000
In addition,

01:25:27.000 --> 01:25:29.000
this data-driven model

01:25:29.000 --> 01:25:31.000
is not physically meaningful,

01:25:31.000 --> 01:25:33.000
so

01:25:33.000 --> 01:25:35.000
there are a lot of

01:25:35.000 --> 01:25:37.000
limitations in use.

01:25:37.000 --> 01:25:39.000
For example, if you want to do a

01:25:39.000 --> 01:25:41.000
on-site energy saving analysis,

01:25:41.000 --> 01:25:43.000
it will become

01:25:43.000 --> 01:25:45.000
impossible to use

01:25:45.000 --> 01:25:47.000
the data-driven model,

01:25:47.000 --> 01:25:49.000
because it will

01:25:49.000 --> 01:25:51.000
make some

01:25:51.000 --> 01:25:53.000
disruptive changes

01:25:53.000 --> 01:25:55.000
to the existing operating conditions.

01:25:55.000 --> 01:25:57.000
This will make it impossible

01:25:57.000 --> 01:25:59.000
to use the data-based model.

01:25:59.000 --> 01:26:01.000
It is also quite difficult

01:26:01.000 --> 01:26:03.000
to handle.

01:26:05.000 --> 01:26:07.000
If you are doing

01:26:07.000 --> 01:26:09.000
a machine learning

01:26:09.000 --> 01:26:11.000
that is not chained,

01:26:11.000 --> 01:26:13.000
it will result in

01:26:13.000 --> 01:26:15.000
destructive results.

01:26:15.000 --> 01:26:17.000
So it becomes

01:26:17.000 --> 01:26:19.000
that for the cases

01:26:19.000 --> 01:26:21.000
we have received,

01:26:21.000 --> 01:26:23.000
the extent to which

01:26:23.000 --> 01:26:25.000
it can be used is quite limited.

01:26:25.000 --> 01:26:27.000
Although they are still

01:26:27.000 --> 01:26:29.000
in the so-called

01:26:29.000 --> 01:26:31.000
AI era,

01:26:31.000 --> 01:26:33.000
in the end,

01:26:33.000 --> 01:26:35.000
some cases will

01:26:35.000 --> 01:26:37.000
result in

01:26:37.000 --> 01:26:39.000
the so-called

01:26:39.000 --> 01:26:41.000
data-driven model,

01:26:41.000 --> 01:26:43.000
which will

01:26:43.000 --> 01:26:45.000
result in

01:26:45.000 --> 01:26:47.000
disruptive changes

01:26:47.000 --> 01:26:49.000
to the existing

01:26:49.000 --> 01:26:51.000
operating conditions.

01:26:51.000 --> 01:26:53.000
In the end,

01:26:53.000 --> 01:26:55.000
some cases will

01:26:55.000 --> 01:26:57.000
result in

01:26:57.000 --> 01:26:59.000
disruptive changes

01:26:59.000 --> 01:27:01.000
to the existing

01:27:01.000 --> 01:27:03.000
operating conditions.

01:27:03.000 --> 01:27:05.000
I will now

01:27:05.000 --> 01:27:07.000
wrap it up.

01:27:13.000 --> 01:27:15.000
Hello?

01:27:15.000 --> 01:27:17.000
Hello?

01:27:17.000 --> 01:27:19.000
Hello?

01:27:19.000 --> 01:27:21.000
Hello?

01:27:21.000 --> 01:27:23.000
Hello?

01:27:23.000 --> 01:27:25.000
Hello?

01:27:25.000 --> 01:27:27.000
Hello?

01:27:27.000 --> 01:27:29.000
Hello?

01:27:29.000 --> 01:27:31.000
Hello?

01:27:31.000 --> 01:27:33.000
AI in

01:27:33.000 --> 01:27:35.000
cases like ours

01:27:35.000 --> 01:27:37.000
is quite limited.

01:27:39.000 --> 01:27:41.000
In other words,

01:27:41.000 --> 01:27:43.000
some cases

01:27:43.000 --> 01:27:45.000
are not AI,

01:27:45.000 --> 01:27:47.000
but we still have to

01:27:47.000 --> 01:27:49.000
wrap it up.

01:27:49.000 --> 01:27:51.000
Yes, that's another point.

01:27:51.000 --> 01:27:53.000
What do you think

01:27:53.000 --> 01:27:55.000
about MLD?

01:27:55.000 --> 01:27:57.000
It's a bit too flamboyant.

01:27:57.000 --> 01:27:59.000
Yes.

01:27:59.000 --> 01:28:01.000
It's easy to

01:28:01.000 --> 01:28:03.000
wrap it up.

01:28:03.000 --> 01:28:05.000
It's easy to

01:28:05.000 --> 01:28:07.000
learn about

01:28:07.000 --> 01:28:09.000
quantum mechanics.

01:28:09.000 --> 01:28:11.000
It's easy to

01:28:11.000 --> 01:28:13.000
become flamboyant.

01:28:13.000 --> 01:28:15.000
Yes, it's a bit

01:28:15.000 --> 01:28:17.000
too flamboyant.

01:28:17.000 --> 01:28:19.000
It's data-driven,

01:28:19.000 --> 01:28:21.000
and it can't return to physics.

01:28:21.000 --> 01:28:23.000
It's not reasonable.

01:28:23.000 --> 01:28:25.000
If it returns to physics,

01:28:25.000 --> 01:28:27.000
it's still

01:28:27.000 --> 01:28:29.000
very limited.

01:28:29.000 --> 01:28:31.000
Yes.

01:28:31.000 --> 01:28:33.000
Of course,

01:28:33.000 --> 01:28:35.000
this has nothing to do with

01:28:35.000 --> 01:28:37.000
today's topic,

01:28:37.000 --> 01:28:39.000
but we did encounter

01:28:39.000 --> 01:28:41.000
some

01:28:41.000 --> 01:28:43.000
problems.

01:28:53.000 --> 01:28:55.000
Are there any other questions?

01:28:57.000 --> 01:28:59.000
If not,

01:28:59.000 --> 01:29:01.000
it's about time

01:29:01.000 --> 01:29:03.000
to wrap up.

01:29:03.000 --> 01:29:05.000
Thank you,

01:29:05.000 --> 01:29:07.000
Haoran,

01:29:07.000 --> 01:29:09.000
for your presentation.

01:29:09.000 --> 01:29:11.000
Thank you,

01:29:11.000 --> 01:29:13.000
everyone.

01:29:13.000 --> 01:29:15.000
It's been a long time

01:29:15.000 --> 01:29:17.000
since I've heard

01:29:17.000 --> 01:29:19.000
this kind of thing.

01:29:19.000 --> 01:29:21.000
It's about time

01:29:21.000 --> 01:29:23.000
to have

01:29:23.000 --> 01:29:25.000
supper or lunch.

01:29:25.000 --> 01:29:27.000
If you want to

01:29:27.000 --> 01:29:29.000
participate in our

01:29:29.000 --> 01:29:31.000
next half year's

01:29:31.000 --> 01:29:33.000
presentation,

01:29:33.000 --> 01:29:35.000
you can sign up for

01:29:35.000 --> 01:29:37.000
Tera's membership.

01:29:37.000 --> 01:29:39.000
We'll have more

01:29:39.000 --> 01:29:41.000
information about it.

01:29:41.000 --> 01:29:43.000
Thank you, everyone.

01:29:43.000 --> 01:29:45.000
Good night, everyone.

01:29:45.000 --> 01:29:47.000
Thank you, everyone.

01:29:47.000 --> 01:29:49.000
Bye-bye.

01:29:49.000 --> 01:29:51.000
Bye-bye, everyone.

01:29:51.000 --> 01:29:53.000
Why did you suddenly

01:29:53.000 --> 01:29:55.000
stop talking?

01:29:55.000 --> 01:29:57.000
I just wanted to

01:29:57.000 --> 01:29:59.000
show my presence.

