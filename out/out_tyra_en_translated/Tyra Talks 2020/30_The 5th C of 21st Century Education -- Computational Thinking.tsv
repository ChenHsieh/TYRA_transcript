start	end	text
0	5000	Welcome everyone to today's presentation.
5000	10000	Today's speaker is Joey Huang.
10000	15000	We are very honored to invite him to give this presentation.
15000	20000	Let me briefly introduce today's speaker.
20000	30000	Joey Huang is currently a postdoc in the School of Information and Computer Sciences at the University of California, Irvine.
30000	37000	She received her Ph.D. in Learning and Developmental Sciences from Indiana University, Bloomington.
37000	48000	Coming from a background of educational psychology and computing, her research focuses on computational thinking, collaboration, and STEM learning.
48000	59000	As a learning scientist by training, she aims to create more interesting and inspiring learning environments to promote equity and collaboration.
59000	77000	Today's topic is the 5th C of 21st Century Education, Computational Thinking.
78000	83000	Without further ado, I will hand over to Joey Huang.
83000	88000	If you have any questions, please leave a comment in the chat area.
88000	90000	I will forward the questions to him.
90000	95000	Now I will ask him to start his presentation.
95000	98000	Thank you for your introduction, Haoran.
98000	101000	Has everyone seen my screen?
101000	104000	Yes.
104000	106000	Thank you.
107000	114000	If you have any questions, please leave a comment in the chat area.
114000	116000	I can't see most of you right now.
116000	119000	Most of you didn't turn on the video.
119000	120000	It's okay.
120000	122000	As long as you can see me.
122000	128000	If you have any questions, please leave a comment in the chat area.
128000	135000	If you have any questions, please leave a comment in the chat area.
135000	140000	As I mentioned, I am a PhD student at UCI.
140000	145000	I have three main purposes for this presentation.
145000	149000	I hope you can take this with you when you listen to it.
149000	154000	First, this presentation will provide you with a basic idea of computational thinking.
154000	156000	What is computational thinking?
156000	159000	Why do we need to care about it?
159000	166000	Second, I hope you can take this with you when you listen to this presentation.
166000	170000	You will experience the process of computational thinking.
170000	173000	You will interact with each other.
173000	174000	Not interacting with each other.
174000	177000	I will give you a little experience.
177000	180000	Lastly, I hope you can take it easy.
180000	184000	Whether it's morning, afternoon, or evening.
184000	186000	No matter where you are.
187000	189000	Thank you for coming today.
189000	192000	I am happy to share this topic with you.
192000	195000	This is my first time presenting my research in Chinese.
195000	198000	It's a new experience for me.
198000	205000	I don't think there are many people studying education or learning sciences in this group.
205000	209000	I hope you can take this with you when you listen to this presentation.
209000	211000	You can also interact with each other.
212000	217000	First, I will talk about computational thinking.
217000	219000	It's called computational thinking in English.
219000	223000	This is the 25th century education's 5th C.
223000	225000	What is the 5th C?
225000	227000	It means that there are 4 Cs in front of me.
227000	233000	The 4 Cs in front of me come from a partnership for 21st century learning.
233000	237000	It's a P21, a non-profit organization in the US.
237000	241000	It's a collaborative research organization with a research team.
241000	245000	There are 4 Cs in front of me.
245000	249000	Can you guess what the other 4 Cs are?
249000	254000	Communication, Collaboration, Critical Thinking, and Creativity.
254000	258000	Why is computational thinking the 5th C?
258000	260000	Next slide.
260000	264000	Let's talk about why we talk about computational thinking.
264000	269000	The so-called question is often used in our research.
269000	272000	People will say that it sounds good.
272000	274000	So what?
274000	277000	So why do we talk about it?
277000	280000	Let's talk about AI first.
280000	283000	Artificial Intelligence.
283000	286000	I don't know if you have seen the Westworld documentary.
286000	298000	It's a documentary about how humans interact with AI.
298000	301000	Hello, I can see the chat.
301000	305000	If you don't have any questions, just type them in the chat.
305000	307000	I can see them.
307000	310000	On the left, you can see a robot's hand.
310000	312000	On the right, you can see a human's hand.
312000	315000	This documentary is a bit exaggerated.
315000	318000	If you look at it realistically,
318000	320000	you may have heard that
320000	323000	some jobs will be replaced in the next few years.
323000	326000	Or some jobs will no longer exist.
326000	330000	The professor is being discussed.
330000	332000	My opinion is that
332000	335000	it's hard to replace the professor.
335000	338000	He has a meaning.
338000	340000	But teaching is dangerous.
340000	342000	So in the future,
342000	345000	there may be robots in classrooms
345000	348000	from K-12 to kindergarten.
348000	352000	There may be robots in classrooms from 4 to 18.
352000	355000	They will assist teachers and students.
355000	362000	This development is not only a global trend.
362000	365000	I will use the United States as an example.
365000	370000	This is a comment from the Wall Street Journal.
370000	379000	This is a report from NSF this year.
379000	381000	In August this year,
381000	387000	NSF was the first round of AI institutes.
387000	392000	There are more than 20 million institutes.
392000	395000	In the next five years,
395000	400000	they will use this fund to develop different AI projects.
400000	404000	Some of these projects are related to the future of work.
404000	406000	Some of them are related to education.
406000	408000	Most of them are discussing
408000	413000	how to make AI more advanced.
413000	415000	On the other hand,
415000	417000	it's a bit like a turning point in education.
417000	420000	How do we better prepare our next generation
420000	422000	to face this world?
422000	424000	If you are interested,
424000	427000	I will share all the resources at the end of the slide.
430000	433000	Now I have answered the question about digitalization.
433000	435000	After all,
435000	437000	I want to talk about
437000	444000	the relationship between AI and technology.
444000	446000	When I was young,
446000	448000	I may have revealed my age.
448000	449000	When I was young,
449000	450000	the first day of computer class,
450000	452000	the teacher taught me how to turn on and off.
452000	453000	Nowadays,
453000	455000	every child has an iPad.
455000	456000	In class,
456000	458000	everyone uses an iPad with a computer,
458000	461000	or the iPad is directly integrated into the class.
461000	463000	This is very common.
463000	464000	In fact,
464000	466000	we have never experienced
466000	469000	such a technology-heavy age.
469000	470000	In fact,
470000	471000	this turning point,
471000	472000	knowledge loss,
472000	473000	and experience
473000	476000	are all important in education.
476000	478000	So it's not just about the development of AI.
479000	483000	What is computational thinking?
483000	485000	If we all agree that
485000	488000	computational thinking is an important concept,
488000	492000	let's talk about the history of computational thinking.
492000	494000	The history of computation
494000	498000	can be traced back to the 19th century.
498000	500000	In the 20th century,
500000	502000	in 1962,
502000	505000	Alan Perlis, a computer scientist,
505000	506000	said that
506000	510000	programming is not just a skill.
510000	514000	It can be seen as a theory of computation.
514000	518000	This skill can be applied to other subjects
518000	524000	through a way of practicing and thinking.
524000	527000	So he started programming
527000	529000	beyond just a keyboard search.
529000	532000	It connects to the thinking of human beings.
532000	534000	It's a breakthrough.
534000	536000	But he didn't talk about it later.
536000	538000	Then it continued to develop
538000	540000	until Pepper and Harrell in 1991,
540000	543000	which is about 20 centuries later.
543000	545000	Their first term,
545000	547000	this researcher,
547000	548000	if you are in education,
548000	549000	you are familiar with it.
549000	552000	There is a theory called constructionism.
552000	553000	It's Simon Pepper.
553000	557000	Based on MIT Media Lab,
557000	559000	they invented a program
559000	562000	called Logo Computation
562000	563000	for children to learn.
563000	566000	It's a language for learning programming.
566000	568000	Looking back,
568000	569000	you might think
569000	572000	it's a very low-resolution,
572000	574000	and it's just a turtle
574000	576000	that teaches you how to draw shapes.
576000	578000	But in 1991,
578000	580000	it was a breakthrough.
580000	582000	So Simon Pepper
582000	584000	was the pioneer of constructionism.
584000	586000	He emphasized learning from doing,
586000	588000	gaining knowledge from doing.
588000	590000	So he was the first to
590000	592000	combine the terms
592000	594000	computation and thinking.
594000	596000	He published this article.
596000	598000	As for computational thinking,
598000	600000	in his research in 1991,
600000	602000	he didn't discuss it in depth.
602000	604000	He just mentioned
604000	606000	this is computational thinking.
606000	608000	Computational thinking
608000	610000	became very popular
610000	612000	in 2006.
612000	614000	A woman named Jeanette Wing,
614000	616000	a computer scientist.
616000	618000	She published a...
618000	620000	Here's a screenshot.
620000	622000	If you're interested,
622000	624000	you can read it.
624000	626000	This is what she said.
626000	628000	She said computational thinking involves
628000	630000	solving problems,
630000	632000	defining systems,
632000	634000	and understanding human behavior
634000	636000	by drawing on the concepts
636000	638000	of fundamental to computer science.
638000	640000	So she emphasized
640000	642000	what computational thinking is.
642000	644000	She started to define it.
644000	646000	She said it involves
646000	648000	defining systems,
648000	650000	understanding human behavior,
650000	652000	and using computational thinking
652000	654000	as a foundation
654000	656000	in computer science
656000	658000	to look at the world.
658000	660000	This research
660000	662000	now has over 6,000 citations.
662000	664000	Almost 7,000.
664000	666000	From 2006 to now,
666000	668000	she was the first
668000	670000	to promote computational thinking
670000	672000	beyond just computation.
672000	674000	It became a way of thinking
674000	676000	to look at the world.
676000	678000	She also said
678000	680000	this skill becomes
680000	682000	the foundation
682000	684000	of reading,
684000	686000	computing, and writing.
686000	688000	In the 21st century,
688000	690000	we're still pushing this concept.
690000	692000	What is computational thinking
692000	694000	and how do we implement it?
696000	698000	In general,
698000	700000	computational thinking
700000	702000	can be divided into
702000	704000	logic,
704000	706000	inference,
706000	708000	calculation,
708000	710000	and pattern recognition.
710000	712000	I don't know if you've
712000	714000	ever done that kind of
714000	716000	intelligence test.
716000	718000	It usually has no words.
718000	720000	It has a series of
720000	722000	logic for you to
722000	724000	infer what the answer is.
724000	726000	This is just
726000	728000	one part of computational thinking.
728000	730000	At the same time,
730000	732000	you need to know how to
732000	734000	break down the problem
734000	736000	into different parts.
736000	738000	How to solve the problem,
738000	740000	guess, and then re-do it.
740000	742000	Abstraction is a more abstract concept.
742000	744000	It's also called abstract.
744000	746000	It's a more abstract concept.
746000	748000	It's about how to think
748000	750000	in a higher level.
750000	752000	Before you solve the problem,
752000	754000	you need to think
754000	756000	in a higher level.
756000	758000	It's a bit like
758000	760000	if I want to design
760000	762000	a system today,
762000	764000	what do I suppose it will
764000	766000	encounter?
766000	768000	What do I need to solve?
768000	770000	These are all important concepts
770000	772000	in computational thinking.
772000	774000	Currently,
774000	776000	there are a few steps
776000	778000	in computational thinking.
778000	780000	These are all actions.
780000	782000	You can see it from
782000	784000	tinkering,
784000	786000	or designing something,
786000	788000	or solving a problem,
788000	790000	or cooperating with others.
790000	792000	These are all
792000	794000	the ways you can see
794000	796000	how computational thinking
796000	798000	occurs.
798000	800000	When you are doing these
800000	802000	things,
802000	804000	you may apply these
804000	806000	actions in computational thinking.
806000	808000	Today, I will use my research
808000	810000	as an example.
810000	812000	My research focuses on
812000	814000	collaborating.
814000	816000	I will talk more
816000	818000	about this later.
820000	822000	To sum up,
822000	824000	computational thinking
824000	826000	includes a series of
826000	828000	problem-solving processes,
828000	830000	such as recognizing patterns,
830000	832000	systematically breaking down
832000	834000	the problem,
834000	836000	or composing an algorithmic
836000	838000	solution.
838000	840000	These are all part of
840000	842000	computational thinking.
842000	844000	You can see that
844000	846000	this definition is very broad.
846000	848000	It's like,
848000	850000	do I know how to program?
850000	852000	Do I know how to do computational thinking?
852000	854000	For example,
854000	856000	I go to the supermarket
856000	858000	and list my food list.
858000	860000	Which side is which session?
860000	862000	If I can do this
862000	864000	grocery shopping
864000	866000	in the fastest way,
866000	868000	do I know how to do
868000	870000	computational thinking?
870000	872000	For example,
872000	874000	if I need to buy all these
874000	876000	in 10 minutes,
876000	878000	do I know how to do
878000	880000	computational thinking
880000	882000	in the shortest way?
882000	884000	These are all part of
884000	886000	computational thinking.
886000	888000	It's been 14 years
888000	890000	since 2006.
890000	892000	This field is not
892000	894000	well defined yet.
894000	896000	This is our Bible.
896000	898000	Computational thinking
898000	900000	is still being discussed
900000	902000	and challenged.
902000	904000	So, if you know
904000	906000	what computational thinking is,
906000	908000	and analyze it with your expertise,
908000	910000	I think it will be very helpful
910000	912000	in this field.
912000	914000	Now, I will talk about
914000	916000	some organizations
916000	918000	with high credibility
918000	920000	and start
920000	922000	to define computational thinking.
922000	924000	There are three of them.
924000	926000	One is
926000	928000	CSTA,
928000	930000	which stands for
930000	932000	Center for Teaching Education
932000	934000	in the United States.
934000	936000	Another one is
936000	938000	ISTE,
938000	940000	which stands for
940000	942000	International Society for
942000	944000	Technology in Education.
944000	946000	It's a big organization
946000	948000	that not only deals with
948000	950000	computational thinking,
950000	952000	but also all the applications
952000	954000	of technology in education.
954000	956000	This framework is relatively new
956000	958000	compared to the other two.
958000	960000	But these three organizations
960000	962000	have their own standards
962000	964000	and applications
964000	966000	for computational thinking.
966000	968000	The curriculum and skills
968000	970000	they need
970000	972000	are already solid
972000	974000	and are being
974000	976000	implemented in education.
976000	978000	I will talk more about
978000	980000	how I study
980000	982000	computational thinking
982000	984000	in a moment.
984000	986000	The framework I use
986000	988000	is from Brandon and Resnick.
988000	990000	Brandon is a professor
990000	992000	at Harvard Education.
992000	994000	Resnick is a professor
994000	996000	at MIT Media Lab.
996000	998000	My advisor and my lab
998000	1000000	have cooperated with them.
1000000	1002000	This framework is
1002000	1004000	highly credible
1004000	1006000	and is a group of people
1006000	1008000	who study and explain
1008000	1010000	computational thinking.
1010000	1012000	You are welcome to discuss
1012000	1014000	this framework.
1014000	1016000	If you have other
1016000	1018000	credible frameworks,
1018000	1020000	you are welcome to talk about it.
1022000	1024000	Let me talk about
1024000	1026000	the definition of computational thinking.
1026000	1028000	I will give you
1028000	1030000	a clearer picture.
1030000	1032000	If you look at the left side of the picture,
1032000	1034000	you will see the definition of
1034000	1036000	the wide field.
1036000	1038000	The right side is the definition of the narrow field.
1038000	1040000	You can divide
1040000	1042000	computational thinking into
1042000	1044000	a group of people who believe
1044000	1046000	humans and computers
1046000	1048000	can be computational agents.
1048000	1050000	This means they believe
1050000	1052000	computational thinking
1052000	1054000	can exist outside of programming.
1054000	1056000	For example,
1056000	1058000	the example of grocery shopping.
1058000	1060000	If you are in this group,
1060000	1062000	you will think this is true.
1062000	1064000	The example below is a weaving example.
1064000	1066000	I don't know if you like
1066000	1068000	weaving or knitting.
1068000	1070000	Whether it is a sweater,
1070000	1072000	a sock, or a basket.
1072000	1074000	There is a group of people
1074000	1076000	who are studying
1076000	1078000	the process of weaving.
1078000	1080000	I have a lot of logical thinking to look at.
1080000	1082000	If you look at
1082000	1084000	some of the original works,
1084000	1086000	you can see that their patterns
1086000	1088000	are very complicated.
1088000	1090000	If you want to make these patterns by hand,
1090000	1092000	there is a lot of complicated thinking
1092000	1094000	involved.
1094000	1096000	There is a group of people
1096000	1098000	who believe that computational thinking
1098000	1100000	can be found in these places
1100000	1102000	and can be applied.
1102000	1104000	They will do this series of research.
1104000	1106000	The middle group of people
1106000	1108000	believe that computers
1108000	1110000	are computational agents.
1110000	1112000	They did not completely exclude humans,
1112000	1114000	but they did not completely agree.
1114000	1116000	They basically believe
1116000	1118000	that computational systems
1118000	1120000	can be applied
1120000	1122000	outside of
1122000	1124000	programming and CS.
1124000	1126000	It can also be benefited
1126000	1128000	by other subjects.
1128000	1130000	They are more neutral.
1130000	1132000	On the far right is a more narrow definition.
1132000	1134000	They believe that humans
1134000	1136000	are not computational agents.
1136000	1138000	More importantly,
1138000	1140000	below this,
1140000	1142000	we can't
1142000	1144000	do it.
1144000	1146000	Computational thinking is completely CS.
1146000	1148000	If I am not a CS person,
1148000	1150000	I will not be benefited
1150000	1152000	by this.
1152000	1154000	We can say that they are conservative.
1154000	1156000	Not everyone needs it.
1156000	1158000	Most people are discussing
1158000	1160000	these three groups.
1160000	1162000	You can choose which group you are
1162000	1164000	or which one you think is right.
1164000	1166000	There is no right or wrong.
1166000	1168000	It depends on your field
1168000	1170000	and your training and background
1170000	1172000	to train your method.
1172000	1174000	My research is more
1174000	1176000	towards the middle and left
1176000	1178000	wide definition.
1178000	1180000	I will talk more about
1180000	1182000	my research in the future.
1186000	1188000	Before I talk about my research,
1188000	1190000	I want to provide you
1190000	1192000	a summary of
1192000	1194000	K-12 education
1194000	1196000	from kindergarten to
1196000	1198000	high school,
1198000	1200000	from 4 to 18 years old.
1202000	1204000	If you are in Taiwan,
1204000	1206000	you are welcome to tell me
1206000	1208000	what CS education is like
1208000	1210000	in Taiwan.
1210000	1212000	I have done some research.
1212000	1214000	I want to know
1214000	1216000	if you are in Taiwan
1216000	1218000	or you have friends in Taiwan
1218000	1220000	who are doing this.
1220000	1222000	In the US,
1222000	1224000	this report is very new.
1224000	1226000	It was just released
1226000	1228000	this month.
1228000	1230000	It is from Coda.org,
1230000	1232000	CSTA, ECEP,
1232000	1234000	Alliance.
1234000	1236000	I will not go into details.
1236000	1238000	It is a report with credibility.
1238000	1240000	It is related to CS education
1240000	1242000	every year.
1242000	1244000	This report was just released this month.
1244000	1246000	You can see on the upper left,
1246000	1248000	CS standards
1248000	1250000	from 2017 to 2020,
1250000	1252000	from 6 states to
1252000	1254000	37 states,
1254000	1256000	all have K-12 CS standards.
1258000	1260000	If we have standards,
1260000	1262000	we need a teacher.
1262000	1264000	Teachers need to have the ability
1264000	1266000	to teach students.
1266000	1268000	You may find that
1268000	1270000	in the classroom,
1270000	1272000	teachers become
1272000	1274000	a weak point of knowledge.
1274000	1276000	Students use technology
1276000	1278000	too fast.
1278000	1280000	They already know these things.
1280000	1282000	Teachers can't keep up
1282000	1284000	with students.
1284000	1286000	This is like another topic.
1286000	1288000	We can discuss the relationship
1288000	1290000	between teachers and students.
1290000	1292000	If we go back to
1292000	1294000	the main topic,
1294000	1296000	CS teacher certification
1296000	1298000	has been implemented
1298000	1300000	in 40 states.
1300000	1302000	It means that
1302000	1304000	if you graduate from a university,
1304000	1306000	or get another degree,
1306000	1308000	you can get the certification.
1308000	1310000	Then you can start teaching
1310000	1312000	CS in K-12.
1312000	1314000	The last chart
1314000	1316000	shows the percentage
1316000	1318000	of students
1318000	1320000	who start teaching CS
1320000	1322000	in public schools.
1322000	1324000	Each state is different.
1324000	1326000	This chart shows
1326000	1328000	47 states.
1328000	1330000	This is all public schools,
1330000	1332000	not all high schools.
1332000	1334000	All public schools teach computer science.
1334000	1336000	Let's go back to the chart.
1336000	1338000	You can see that
1338000	1340000	more than 50%
1340000	1342000	of students
1342000	1344000	are still in development.
1344000	1346000	Haoran introduced me
1346000	1348000	to Indiana.
1348000	1350000	I'm in California now.
1350000	1352000	In addition to Indiana,
1352000	1354000	California also has
1354000	1356000	more than 50% of students.
1356000	1358000	You can see
1358000	1360000	where you are.
1360000	1362000	This information
1362000	1364000	explains
1364000	1366000	that
1366000	1368000	less than half of
1368000	1370000	public schools
1370000	1372000	teach computer science
1372000	1374000	in the U.S.
1374000	1376000	In addition,
1376000	1378000	less than 50%
1378000	1380000	of students
1380000	1382000	are from
1382000	1384000	rural areas,
1384000	1386000	low social status,
1386000	1388000	and underrepresented groups.
1388000	1390000	These people
1390000	1392000	are less likely
1392000	1394000	to take CS classes.
1394000	1396000	CS underrepresented groups
1396000	1398000	are not Asian.
1398000	1400000	Asians and whites
1400000	1402000	are in CS dominant groups.
1402000	1404000	CS underrepresented groups
1404000	1406000	are not Asian
1406000	1408000	and white.
1408000	1410000	How can we
1410000	1412000	keep this community
1412000	1414000	more diverse?
1414000	1416000	This is a very important
1416000	1418000	topic in CS education.
1418000	1420000	Many educators
1420000	1422000	support this.
1422000	1424000	For example,
1424000	1426000	if we want to define
1426000	1428000	gender as a traditional term,
1428000	1430000	women are also
1430000	1432000	an underrepresented group.
1432000	1434000	How can we attract
1434000	1436000	these underrepresented groups?
1436000	1438000	This is a very important
1438000	1440000	topic in CS education in the U.S.
1446000	1448000	How do we
1448000	1450000	start to use
1450000	1452000	these tools?
1452000	1454000	K-12
1454000	1456000	has
1456000	1458000	thousands of
1458000	1460000	tools.
1460000	1462000	I will share
1462000	1464000	some of them with you.
1464000	1466000	Later,
1466000	1468000	I will share
1468000	1470000	some of them with you.
1470000	1472000	If you have
1472000	1474000	kids at home,
1474000	1476000	teachers,
1476000	1478000	or researchers,
1478000	1480000	you can download
1480000	1482000	these tools
1482000	1484000	and play with them.
1484000	1486000	They are all free.
1486000	1488000	The first category
1488000	1490000	is block-based programming.
1490000	1492000	It is
1492000	1494000	a low-floor,
1494000	1496000	high-ceiling tool.
1496000	1498000	Low-floor, high-ceiling
1498000	1500000	means
1500000	1502000	this tool
1502000	1504000	is easy to use.
1504000	1506000	There is no
1506000	1508000	prior knowledge restriction.
1508000	1510000	If I don't have
1510000	1512000	programming experience,
1512000	1514000	I can also
1514000	1516000	use it.
1516000	1518000	It is easy to use.
1518000	1520000	It is for kids.
1520000	1522000	No.
1522000	1524000	High-ceiling means
1524000	1526000	it can be very complicated.
1526000	1528000	How to design
1528000	1530000	this tool?
1530000	1532000	It depends on
1532000	1534000	researchers' skills.
1534000	1536000	I listed a few
1536000	1538000	that are
1538000	1540000	related to
1540000	1542000	my research.
1542000	1544000	Lego is expensive.
1544000	1546000	I will talk about Lego later.
1546000	1548000	I am talking about free
1548000	1550000	block-based programming.
1550000	1552000	Blocky is
1552000	1554000	Google-designed.
1554000	1556000	Tinker is
1556000	1558000	a combination of
1558000	1560000	blocks.
1560000	1562000	You can
1562000	1564000	use colors
1564000	1566000	and squares
1566000	1568000	to make a simple
1568000	1570000	program.
1570000	1572000	Later...
1572000	1574000	Thank you, David.
1574000	1576000	Later, I will
1576000	1578000	talk about Scratch.
1578000	1580000	Scratch is a tool
1580000	1582000	designed by MIT Media Lab
1582000	1584000	in 2007.
1584000	1586000	I will talk about Scratch later.
1586000	1588000	Taiwan has
1588000	1590000	a lot of
1590000	1592000	elementary education using Scratch.
1592000	1594000	CodeCombat
1594000	1596000	is more like a game.
1596000	1598000	You can use block-based
1598000	1600000	programming to
1600000	1602000	set your character's skills.
1602000	1604000	You can...
1604000	1606000	I haven't played it, but
1606000	1608000	I saw the video.
1608000	1610000	You can set your character's skills.
1610000	1612000	And you can...
1612000	1614000	You need to use coding
1614000	1616000	to build things in the world.
1616000	1618000	It's like an indirect way
1618000	1620000	to build a world.
1620000	1622000	Robotics...
1622000	1624000	Robotics is another big direction.
1624000	1626000	You can build
1626000	1628000	robots
1628000	1630000	and introduce robots
1630000	1632000	to children.
1632000	1634000	Some people said
1634000	1636000	Lego is expensive.
1636000	1638000	These three
1638000	1640000	blocks are free.
1640000	1642000	But these are
1642000	1644000	commercial products.
1644000	1646000	It's not
1646000	1648000	very expensive.
1648000	1650000	These two are
1650000	1652000	more than $100.
1652000	1654000	I forgot about Lego.
1654000	1656000	But
1656000	1658000	it's not very expensive.
1658000	1660000	You can see
1660000	1662000	it's in Lego.
1662000	1664000	It's like a flowchart.
1664000	1666000	You can play.
1666000	1668000	It has motion sensor
1668000	1670000	and color sensor.
1670000	1672000	After you build the robot,
1672000	1674000	you can
1674000	1676000	use wheels
1676000	1678000	to recognize different colors
1678000	1680000	and get different commands.
1680000	1682000	Sephiroth is
1682000	1684000	block-based.
1684000	1686000	It's like a ball.
1686000	1688000	After you program it,
1688000	1690000	it can spin on the ground.
1690000	1692000	Tinkering,
1692000	1694000	hand-made,
1694000	1696000	and coding
1696000	1698000	are good
1698000	1700000	to introduce
1700000	1702000	to children.
1702000	1704000	Why does it move?
1704000	1706000	You can use it
1706000	1708000	to introduce
1708000	1710000	programming concepts.
1710000	1712000	You can stick
1712000	1714000	these routes on the ground.
1714000	1716000	You can program on the iPad.
1716000	1718000	You can simulate how it runs.
1718000	1720000	When it's programmed,
1720000	1722000	it can run.
1722000	1724000	You can see
1724000	1726000	how to solve
1726000	1728000	the problem
1728000	1730000	and implement
1730000	1732000	the plan.
1732000	1734000	Data science and
1734000	1736000	3D printing
1736000	1738000	are also
1738000	1740000	a field.
1740000	1742000	These two are
1742000	1744000	commonly used
1744000	1746000	in research and education.
1748000	1750000	Thank you for your comments.
1750000	1752000	I will answer
1752000	1754000	later for
1754000	1756000	time.
1756000	1758000	Please feel free to comment.
1758000	1760000	I promised
1760000	1762000	to introduce Scratch in detail.
1762000	1764000	Scratch
1764000	1766000	was first
1766000	1768000	introduced in
1768000	1770000	MIT Media Lab.
1770000	1772000	Mitch Resnick
1772000	1774000	and Karen Brennan
1774000	1776000	were first
1776000	1778000	introduced in
1778000	1780000	2007.
1780000	1782000	The first beta version
1782000	1784000	was released.
1784000	1786000	It's been 13 years.
1786000	1788000	There are more than
1788000	1790000	70 languages,
1790000	1792000	more than 61 million
1792000	1794000	project shares,
1794000	1796000	and more than
1796000	1798000	2 million people registered.
1798000	1800000	The goal is
1800000	1802000	as I said,
1802000	1804000	low-floor, high-ceiling.
1804000	1806000	You can jump in
1806000	1808000	if you don't have
1808000	1810000	a programming background.
1810000	1812000	You can play
1812000	1814000	and make different
1814000	1816000	interactive stories,
1816000	1818000	games,
1818000	1820000	animations,
1820000	1822000	and music.
1822000	1824000	Some people may
1824000	1826000	make it a Mother's Day gift.
1826000	1828000	You can share it
1828000	1830000	online.
1830000	1832000	You can share it
1832000	1834000	with your friends.
1834000	1836000	There may be
1836000	1838000	different animations
1838000	1840000	and music.
1840000	1842000	For kids,
1842000	1844000	application is their goal.
1844000	1846000	They may think it's cool.
1846000	1848000	I want to know how to do it.
1848000	1850000	Scratch was designed
1850000	1852000	in this direction.
1852000	1854000	It doesn't mean
1854000	1856000	every kid
1856000	1858000	is a computer scientist.
1858000	1860000	On the contrary,
1860000	1862000	programming is designed
1862000	1864000	as a design tool.
1864000	1866000	A piece of paper
1866000	1868000	is a design tool.
1868000	1870000	How do I fold it?
1870000	1872000	You can think of programming
1872000	1874000	as a tool.
1874000	1876000	With this tool,
1876000	1878000	you can do different things.
1878000	1880000	The core audience
1880000	1882000	is 8 to 16 years old.
1882000	1884000	The maximum age is 12.
1884000	1886000	I've seen many
1886000	1888000	college students' projects
1888000	1890000	or complex projects.
1890000	1892000	You can try it later.
1892000	1894000	The environment
1894000	1896000	is at the bottom right.
1896000	1898000	It's
1898000	1900000	block-based.
1900000	1902000	Different colors
1902000	1904000	represent different functions.
1904000	1906000	What you need to do
1906000	1908000	is to drag from here
1908000	1910000	to this window.
1910000	1912000	Then you can start to build.
1912000	1914000	You can see
1914000	1916000	what you just coded.
1916000	1918000	You can click the play button
1918000	1920000	to see what you just programmed.
1920000	1922000	As I said,
1922000	1924000	you may be confused
1924000	1926000	if you don't have
1926000	1928000	experience with Scratch.
1928000	1930000	I have an example.
1930000	1932000	Let's play together
1932000	1934000	for 2 to 3 minutes.
1934000	1936000	It doesn't matter if you don't have an account.
1936000	1938000	I'll post the link
1938000	1940000	on the chat.
1942000	1944000	I'll give you
1944000	1946000	some time
1946000	1948000	to open it.
1948000	1950000	I'm working with you now.
1950000	1952000	If you open it,
1952000	1954000	it should look like this.
1954000	1956000	If you've already started,
1956000	1958000	you can feel free to start.
1958000	1960000	It's a...
1960000	1962000	I think it's a theme
1962000	1964000	related game.
1964000	1966000	So I chose a game
1966000	1968000	with a girl as the theme.
1968000	1970000	I'll start
1970000	1972000	to play with you now.
1972000	1974000	If you open the window,
1974000	1976000	feel free to click the play button.
1976000	1978000	I don't know if you can hear the music.
1978000	1980000	But my headphones can hear it.
1980000	1982000	Sorry.
1982000	1984000	I really don't know how to play games.
1984000	1986000	If I die,
1986000	1988000	don't laugh at me.
1988000	1990000	Thank you, Yan Yong.
1990000	1992000	I think you can start playing now.
1992000	1994000	I'll give you some time.
1996000	1998000	I think I can't get past 5 minutes.
1998000	2000000	I'll just keep dying.
2004000	2006000	Okay, anyway.
2006000	2008000	If I get past 2 minutes
2008000	2010000	or 5 minutes later, you can tell me.
2010000	2012000	Because I really think this game is a bit hard.
2014000	2016000	Okay, pause for a moment.
2016000	2018000	Did you? How did you play?
2018000	2020000	Because I'm really bad at this.
2022000	2023000	So you know,
2023000	2025000	calculating doesn't mean you know how to play.
2025000	2027000	Right?
2028000	2030000	So...
2030000	2031000	Okay.
2031000	2033000	Does anyone want to share their score?
2035000	2037000	Okay, if you...
2037000	2039000	If you're almost done,
2039000	2041000	you can click on this project.
2041000	2043000	It has a button called See Inside.
2043000	2045000	This button.
2045000	2047000	I'm sure you're all in front of the computer.
2047000	2049000	If you can watch it with me,
2049000	2051000	you'll have a deeper experience.
2051000	2053000	So there's a See Inside here.
2053000	2055000	You can take a look at
2055000	2057000	what the project looks like.
2057000	2059000	If you're a programmer,
2059000	2061000	a programmer,
2061000	2063000	you may need to spend some time
2063000	2065000	getting used to the interface.
2065000	2067000	Because it's different from
2067000	2069000	most text spaces.
2069000	2071000	For example,
2071000	2073000	C++ or Python
2073000	2075000	or JavaScript.
2075000	2077000	It's very different.
2077000	2079000	Because you can see what I just said.
2079000	2081000	The motion, look, sound,
2081000	2083000	these events.
2083000	2085000	I'm going to pick one to introduce to you.
2085000	2087000	For example,
2089000	2091000	If I create a new project here,
2091000	2093000	I drag
2093000	2095000	an event.
2095000	2097000	For example, when green flags click.
2097000	2099000	It's this green flag.
2099000	2101000	It's very intuitive.
2101000	2103000	What you see is what it is.
2103000	2105000	I'm going to help this cat
2105000	2107000	do a 10-step forward.
2107000	2109000	At the same time,
2109000	2111000	I want it to be able to say hello
2111000	2113000	in two minutes.
2113000	2115000	It has a feature
2115000	2117000	that can insert sound.
2117000	2119000	It has a different meow sound.
2119000	2121000	You can also record your own voice.
2121000	2123000	So you've added a lot of
2123000	2125000	creativity to see what you want to do.
2125000	2127000	I'm going to use
2127000	2129000	what it defaults to do.
2129000	2131000	What happens when I press this?
2133000	2135000	Do you hear that meow sound?
2135000	2137000	It will go 10 steps forward.
2137000	2139000	The so-called 10 is x going 10.
2139000	2141000	It was just at 0.
2141000	2143000	It will say hello.
2143000	2145000	I'll run it again.
2145000	2147000	It goes another 10 steps forward.
2147000	2149000	It will say hello in two seconds.
2149000	2151000	It will make a meow sound.
2151000	2153000	If you want to repeat
2153000	2155000	this action,
2155000	2157000	the very important concept in programming
2157000	2159000	is called looped.
2159000	2161000	You can insert a repeat here.
2161000	2163000	If I just repeat
2163000	2165000	say hello and play sound,
2165000	2167000	let's just repeat it twice.
2169000	2171000	It will
2171000	2173000	go another 10 steps forward.
2173000	2175000	You'll see
2175000	2177000	that after it's done
2177000	2179000	with these two commands,
2179000	2181000	it will go back to say hello.
2181000	2183000	Say hello again.
2183000	2185000	It just made a meow sound twice.
2185000	2187000	You can play this at home.
2187000	2189000	You can also
2189000	2191000	custom this cat.
2191000	2193000	You can also
2193000	2195000	define or download.
2195000	2197000	If you have some photos,
2197000	2199000	you can download it.
2199000	2201000	There are some backgrounds here
2201000	2203000	that can provide you with choices.
2203000	2205000	There are different sprites here.
2205000	2207000	Our code sprite is called this object.
2207000	2209000	It has different objects.
2209000	2211000	You can also insert here.
2211000	2213000	So when I click this
2213000	2215000	object,
2215000	2217000	I'm here now.
2217000	2219000	Sorry, I cut this cat.
2219000	2221000	You know.
2221000	2223000	You can do
2223000	2225000	coding for this sprite.
2225000	2227000	I was coding under this cat.
2227000	2229000	Now I'm under Andy.
2229000	2231000	This extends to
2231000	2233000	the project I just shared with you.
2233000	2235000	You might think it's simple.
2235000	2237000	But if you
2237000	2239000	take a closer look at
2239000	2241000	the project I just shared with you,
2241000	2243000	it's very complicated.
2243000	2245000	So under each sprite,
2245000	2247000	I can
2247000	2249000	command it to do something.
2249000	2251000	After all, it's a game.
2251000	2253000	So I need to do a lot of things
2253000	2255000	at the same time.
2255000	2257000	For example, under this cat sprite,
2257000	2259000	I can see this green flag click.
2259000	2261000	It will start doing the following action.
2261000	2263000	It will demo it to you.
2263000	2265000	In other sprites,
2265000	2267000	I can also see
2267000	2269000	when green flag click,
2269000	2271000	there are other variables
2271000	2273000	running.
2273000	2275000	So this project
2275000	2277000	can be extended from
2277000	2279000	the project I just shared with you.
2279000	2281000	It can extend to
2281000	2283000	such a complex game.
2283000	2285000	This is
2285000	2287000	a low-floor-high-ceiling
2287000	2289000	tool I just talked about.
2291000	2293000	OK.
2293000	2295000	Do you want to play a little longer?
2295000	2297000	OK.
2297000	2299000	Because I can't see you.
2299000	2301000	I'll wait a minute.
2301000	2303000	I'll take a sip of water.
2311000	2313000	OK.
2313000	2315000	So this tool
2315000	2317000	is what I'm going to talk about
2317000	2319000	in my research today.
2319000	2321000	It's a very important tool.
2321000	2323000	Children are co-designed
2323000	2325000	in this context.
2325000	2327000	They have co-design, game, story,
2327000	2329000	music, and animation.
2329000	2331000	How much time
2331000	2333000	do I have left?
2335000	2337000	OK.
2337000	2339000	I'll quickly
2339000	2341000	introduce my research
2341000	2343000	and current
2343000	2345000	computational thinking.
2345000	2347000	From my perspective,
2347000	2349000	how is computational thinking studied?
2351000	2353000	I just mentioned
2353000	2355000	computational thinking and cooperative learning.
2355000	2357000	My research
2357000	2359000	and dissertation is mainly about
2359000	2361000	how computational thinking
2361000	2363000	is learned and used in a team.
2363000	2365000	I've brought some
2365000	2367000	most of the
2367000	2369000	literature and what people
2369000	2371000	say now.
2371000	2373000	At present, computational thinking is still
2373000	2375000	identified as a very
2375000	2377000	individual thinking.
2377000	2379000	If you take programming as an example,
2379000	2381000	I'm actually doing things
2381000	2383000	there myself.
2383000	2385000	I may not ask others sometimes,
2385000	2387000	but I'm doing it with others.
2387000	2389000	Most of the research
2389000	2391000	direction is actually
2391000	2393000	an independent individual.
2393000	2395000	For example, if this student
2395000	2397000	is exposed to this curriculum
2397000	2399000	or this tool,
2399000	2401000	what is my learning process?
2401000	2403000	What is my ability?
2403000	2405000	What is my result?
2405000	2407000	Some researchers have begun to discuss
2407000	2409000	that if the computational participation
2409000	2411000	is in a face-to-face environment,
2411000	2413000	if I'm online,
2413000	2415000	for example, the place I just scratched
2415000	2417000	has a lot of opportunities to
2417000	2419000	collaborate on the Internet.
2419000	2421000	What will it look like?
2421000	2423000	How will the child extend this project?
2423000	2425000	Some researchers have begun to
2425000	2427000	do computational thinking.
2427000	2429000	This cooperative computational thinking is not
2429000	2431000	a digital game.
2431000	2433000	When I'm playing games,
2433000	2435000	how can we solve this problem
2435000	2437000	together?
2437000	2439000	How do we play
2439000	2441000	what role together?
2441000	2443000	Current research
2443000	2445000	is focused on
2445000	2447000	first, individual,
2447000	2449000	second, online community,
2449000	2451000	or under
2451000	2453000	desktop and non-programming.
2453000	2455000	These researches are very few,
2455000	2457000	especially cooperative computational thinking.
2457000	2459000	This concept is actually
2459000	2461000	very limited now.
2461000	2463000	No one is doing this.
2463000	2465000	Even though the standard
2465000	2467000	mentioned that cooperative learning
2467000	2469000	is very important,
2469000	2471000	the current research direction
2471000	2473000	does not go in that direction.
2473000	2475000	My research argues
2475000	2477000	that cooperative learning
2477000	2479000	is not only cooperative learning,
2479000	2481000	but also an activity and process of
2481000	2483000	cooperative design.
2483000	2485000	In fact, in the field of
2485000	2487000	learning or psychology,
2487000	2489000	it has been found that students
2489000	2491000	actually know what to do.
2491000	2493000	If I am in a cooperative environment,
2493000	2495000	I can deepen
2495000	2497000	the knowledge I have learned
2497000	2499000	and I can advance
2499000	2501000	my problem-solving skills.
2501000	2503000	On the other hand,
2503000	2505000	cooperation
2505000	2507000	has shown
2507000	2509000	a good way
2509000	2511000	to close the gender gap
2511000	2513000	in CS.
2513000	2515000	For example,
2515000	2517000	you may think that
2517000	2519000	computer science is more
2519000	2521000	independent,
2521000	2523000	everyone is hiding in the dungeon.
2523000	2525000	It's dark in the basement,
2525000	2527000	and everyone is coding
2527000	2529000	at night.
2529000	2531000	Cooperative learning
2531000	2533000	shows that
2533000	2535000	it can attract more women
2535000	2537000	to join this industry.
2537000	2539000	They may feel that
2539000	2541000	this is not a very isolated
2541000	2543000	job or
2543000	2545000	a programming thing.
2545000	2547000	They may feel
2547000	2549000	that it is more welcoming.
2549000	2551000	They may feel that
2551000	2553000	they can get some support
2553000	2555000	from their colleagues.
2555000	2557000	My research goal is to
2557000	2559000	hope to learn
2559000	2561000	computational thinking
2561000	2563000	through the cooperation
2563000	2565000	between students.
2565000	2567000	It's like bridging the research gap
2567000	2569000	that everyone has been doing
2569000	2571000	individually.
2571000	2573000	Oh, a good question.
2573000	2575000	Hong Yi-Chi asked
2575000	2577000	whether the closed gender gap
2577000	2579000	is effective at all ages.
2579000	2581000	The study I quoted
2581000	2583000	was done by adults
2583000	2585000	only.
2585000	2587000	She asked
2587000	2589000	some women
2589000	2591000	and their environment.
2591000	2593000	The result was that
2593000	2595000	adults felt that
2595000	2597000	it was easier for women
2597000	2599000	to join the cooperation.
2599000	2601000	This research is also a good point.
2601000	2603000	This is what I want to do
2603000	2605000	in the future.
2605000	2607000	If it's a collaboration,
2607000	2609000	the younger students
2609000	2611000	will have the same result.
2611000	2613000	This is a good research direction.
2615000	2617000	Finally, I want to extend
2617000	2619000	the current
2619000	2621000	computational thinking framework.
2621000	2623000	As you can see,
2623000	2625000	CS standards are
2625000	2627000	focused on individuals.
2627000	2629000	How do you reach this level?
2629000	2631000	I want to push it into
2631000	2633000	a team effort.
2635000	2637000	This is my
2637000	2639000	research perspective.
2639000	2641000	I have a computational thinking
2641000	2643000	framework,
2643000	2645000	K-12 CS education,
2645000	2647000	and collaborative design activity.
2647000	2649000	These are
2649000	2651000	the pieces
2651000	2653000	that I stand in the middle.
2653000	2655000	This is me.
2655000	2657000	It seems like I'm a little over time.
2657000	2659000	I'll try to finish
2659000	2661000	in 10 minutes.
2661000	2663000	You can ask questions.
2663000	2665000	My framework
2665000	2667000	is based on
2667000	2669000	the computational thinking
2669000	2671000	that I just explained.
2671000	2673000	You might want to know
2673000	2675000	how to measure
2675000	2677000	and do research.
2677000	2679000	This framework provides
2679000	2681000	a big direction.
2681000	2683000	There are three types of
2683000	2685000	computational thinking.
2685000	2687000	One is concept,
2687000	2689000	which is the so-called loops
2689000	2691000	or events.
2691000	2693000	There is also parallelism,
2693000	2695000	which means
2695000	2697000	you can observe
2697000	2699000	what you are doing.
2699000	2701000	For example,
2701000	2703000	I'm doing testing
2703000	2705000	or debugging.
2705000	2707000	Perspective is more like
2707000	2709000	how you interpret
2709000	2711000	computational thinking.
2711000	2713000	How do you interpret
2713000	2715000	computational thinking?
2715000	2717000	For example,
2717000	2719000	what do you think of CS?
2719000	2721000	What do you think of programming?
2721000	2723000	This is the direction.
2723000	2725000	My research focuses on
2725000	2727000	the first two.
2727000	2729000	How do children
2729000	2731000	in the team
2731000	2733000	apply these concepts?
2733000	2735000	How do they
2735000	2737000	observe
2737000	2739000	what they are doing?
2741000	2743000	These practices
2743000	2745000	I just mentioned
2745000	2747000	can be observed.
2747000	2749000	Computational thinking
2749000	2751000	consists of four types.
2751000	2753000	Experimenting or iterating.
2753000	2755000	Testing or debugging.
2757000	2759000	Algorithm building
2759000	2761000	Abstracting or modulizing.
2761000	2763000	Why do I have a
2763000	2765000	quote on the right?
2765000	2767000	These are
2767000	2769000	high-level practices.
2769000	2771000	For example,
2771000	2773000	how do children
2773000	2775000	experiment or iterate?
2775000	2777000	How do they test
2777000	2779000	what they are doing?
2781000	2783000	Algorithm building
2783000	2785000	is a high-level practice.
2785000	2787000	It's the same as
2787000	2789000	abstracting or modulizing.
2789000	2791000	It's hard to observe.
2791000	2793000	This is just a heads-up.
2793000	2795000	Next,
2795000	2797000	I'll provide
2797000	2799000	my research direction
2799000	2801000	and context.
2801000	2803000	My overarching question
2803000	2805000	is how do students
2805000	2807000	learn computational thinking
2807000	2809000	in the team?
2809000	2811000	Collaborative design activity
2811000	2813000	refers to
2813000	2815000	how they
2815000	2817000	co-design their projects
2817000	2819000	on this platform.
2819000	2821000	My setting is
2821000	2823000	a public school in Indiana.
2823000	2825000	I designed
2825000	2827000	a five-week course invitation
2827000	2829000	with the teacher.
2829000	2831000	I went to the school
2831000	2833000	and collected five-week data
2833000	2835000	in an intro
2835000	2837000	of programming course.
2837000	2839000	There were 12 students.
2839000	2841000	This is a training course,
2841000	2843000	so there were not many students.
2843000	2845000	There were 14 students in total,
2845000	2847000	but 12 students were my focus group.
2847000	2849000	I collected the data of these 12 students.
2849000	2851000	There were three people in one group.
2851000	2853000	There were four groups in total.
2853000	2855000	My context tool is
2855000	2857000	Scratch, which I just introduced.
2857000	2859000	I collected the data
2859000	2861000	of these four groups of students
2861000	2863000	in each group.
2863000	2865000	There were five different Scratch projects,
2865000	2867000	so I collected them all.
2867000	2869000	I also recorded
2869000	2871000	how they did it.
2871000	2873000	I will explain
2873000	2875000	what the video looks like in the next chapter.
2875000	2877000	There was also an intermittent
2877000	2879000	screen recording.
2879000	2881000	Because of school restrictions,
2881000	2883000	I could not record their screen all the time.
2883000	2885000	But I had an iPad,
2885000	2887000	so several undergrad students
2887000	2889000	helped me collect the data.
2889000	2891000	I collected the screen of
2891000	2893000	their front and back.
2893000	2895000	The direction of my analysis
2895000	2897000	is from the front and back,
2897000	2899000	as well as the video of
2899000	2901000	my qualitative code.
2901000	2903000	I recorded what they did
2903000	2905000	every 10 seconds
2905000	2907000	and whether they were engaged
2907000	2909000	in this computational thinking.
2909000	2911000	This is
2911000	2913000	what my classroom looks like.
2913000	2915000	This is the blackboard.
2915000	2917000	There are two groups here,
2917000	2919000	two people in each group.
2919000	2921000	The rest are three people in each group.
2921000	2923000	The red line represents
2923000	2925000	the number of girls.
2925000	2927000	Gender is spread out,
2927000	2929000	so there is a girl in each group.
2929000	2931000	There is a 360-degree camera
2931000	2933000	in the classroom.
2933000	2935000	I made the camera stick
2935000	2937000	by myself.
2937000	2939000	It looks like this.
2939000	2941000	You may not be used to it at first,
2941000	2943000	but this is the view of the camera.
2943000	2945000	There are three students here.
2945000	2947000	There are three people in each group.
2947000	2949000	This is the teacher.
2949000	2951000	There are three people in each group.
2951000	2953000	The way I analyze
2953000	2955000	is that
2955000	2957000	these are all students.
2957000	2959000	I have renamed them.
2959000	2961000	These are Meg, Lucas, and Ted.
2961000	2963000	Because of the time,
2963000	2965000	I will not explain much.
2965000	2967000	However,
2967000	2969000	every 10 seconds,
2969000	2971000	I will capture what they said
2971000	2973000	and transcribe it.
2973000	2975000	Then identify
2975000	2977000	if they did this practice.
2977000	2979000	Practice is what I just said.
2979000	2981000	E is experimenting or iterating.
2981000	2983000	They may be
2983000	2985000	from this time
2985000	2987000	to this time,
2987000	2989000	about 9 minutes.
2989000	2991000	They have been thinking
2991000	2993000	about whether to add this
2993000	2995000	sprite.
2995000	2997000	After I add it,
2997000	2999000	what should I change?
2999000	3001000	They have been discussing
3001000	3003000	and there is no complete answer.
3003000	3005000	They don't know what to do.
3005000	3007000	So they are all
3007000	3009000	at the forefront.
3009000	3011000	They are not very deep into this problem.
3011000	3013000	Until about 2 minutes later,
3013000	3015000	they found that
3015000	3017000	something was missing.
3017000	3019000	Then they started to test and debug this problem.
3019000	3021000	Then this thing moved to
3021000	3023000	algorithm building and modularizing.
3023000	3025000	This thinking.
3025000	3027000	So I will show you
3027000	3029000	what my data looks like.
3029000	3031000	So every 10 seconds,
3031000	3033000	I will capture what they did.
3033000	3035000	This is in practice.
3035000	3037000	So next,
3037000	3039000	I will use performance
3039000	3041000	and practice.
3041000	3043000	In education,
3043000	3045000	we usually do research
3045000	3047000	in learning sciences.
3047000	3049000	How do we know if students really learned
3049000	3051000	algorithmic thinking?
3051000	3053000	I give them a pre-test and a post-test.
3053000	3055000	So I gave them a test
3055000	3057000	before 5 weeks.
3057000	3059000	See if they have grown.
3059000	3061000	That means they have improved.
3061000	3063000	So in learning,
3063000	3065000	the result is very important.
3065000	3067000	But the process is also very important.
3067000	3069000	The process is very tricky.
3069000	3071000	It's hard to capture.
3071000	3073000	But in my dissertation,
3073000	3075000	I tried to use
3075000	3077000	the result and the process
3077000	3079000	to explain algorithmic thinking.
3079000	3081000	What is it?
3081000	3083000	How do students learn?
3083000	3085000	So in performance,
3085000	3087000	I gave them a pre-test and a post-test.
3087000	3089000	Basically,
3089000	3091000	they have improved.
3091000	3093000	In team learning,
3093000	3095000	in these 5 weeks,
3095000	3097000	they have improved statistically.
3097000	3099000	That means
3099000	3101000	in this learning,
3101000	3103000	their algorithmic thinking
3103000	3105000	has improved.
3105000	3107000	This is one example.
3107000	3109000	This is the same group.
3109000	3111000	They are in pre-test and post-test.
3111000	3113000	One of the projects.
3113000	3115000	One of the problems.
3115000	3117000	In the beginning,
3117000	3119000	the way to solve the problem is very straightforward.
3119000	3121000	You can see
3121000	3123000	what they did in the beginning.
3123000	3125000	There are many bugs.
3125000	3127000	I won't talk about it.
3127000	3129000	Many of them can't reach
3129000	3131000	the goal of this test.
3131000	3133000	But after the post-test,
3133000	3135000	I didn't give them any hints.
3135000	3137000	I just gave them questions.
3137000	3139000	Let them finish this small project.
3139000	3141000	You can see
3141000	3143000	the trigger.
3143000	3145000	It means
3145000	3147000	parallelism.
3147000	3149000	Other things will happen at the same time.
3149000	3151000	This is very important
3151000	3153000	in CT.
3153000	3155000	It can show
3155000	3157000	the player
3157000	3159000	or learner can receive
3159000	3161000	a higher level of thinking.
3161000	3163000	A proof.
3163000	3165000	As for the process,
3165000	3167000	it's very tricky.
3167000	3169000	You may think
3169000	3171000	it's easy.
3171000	3173000	But it's not.
3173000	3175000	I focused on
3175000	3177000	one group.
3177000	3179000	This is
3179000	3181000	the result of pre-test and post-test.
3181000	3183000	There are 4 groups.
3183000	3185000	You can see them.
3185000	3187000	How can I prove
3187000	3189000	they learned
3189000	3191000	or applied?
3191000	3193000	You can imagine
3193000	3195000	a timeline.
3195000	3197000	From left to right.
3197000	3199000	You can see
3199000	3201000	Lion
3201000	3203000	took the longest time
3203000	3205000	to finish.
3205000	3207000	10 seconds for each group.
3207000	3209000	1330 seconds for this group.
3209000	3211000	16 minutes.
3211000	3213000	20 minutes.
3213000	3215000	Lion took
3215000	3217000	the longest time.
3217000	3219000	20 minutes.
3219000	3221000	This is the pre-test.
3221000	3223000	You can see
3223000	3225000	each group
3225000	3227000	has different practice.
3227000	3229000	Blue represents
3229000	3231000	experimenting or iterating.
3231000	3233000	Green, yellow, pink
3233000	3235000	represent different practice.
3235000	3237000	If this group
3237000	3239000	doesn't do practice,
3239000	3241000	it can't do
3241000	3243000	every second.
3243000	3245000	It can't do
3245000	3247000	nothing.
3247000	3249000	It's black.
3249000	3251000	If it did
3251000	3253000	more than 2 practice
3253000	3255000	it's red.
3255000	3257000	This picture
3257000	3259000	looks complicated.
3259000	3261000	But you can see
3261000	3263000	the length of black
3263000	3265000	and its weight.
3265000	3267000	You can see
3267000	3269000	most groups
3269000	3271000	have a lot of black.
3271000	3273000	They didn't do practice.
3273000	3275000	If they didn't do practice,
3275000	3277000	you can see
3277000	3279000	it's off-text.
3279000	3281000	But they usually
3281000	3283000	didn't do
3283000	3285000	deep computation.
3285000	3287000	In post-test,
3287000	3289000	there's a lot of black.
3289000	3291000	They
3291000	3293000	did the same practice
3293000	3295000	consecutively.
3295000	3297000	They didn't do
3297000	3299000	blue, yellow, green,
3299000	3301000	or red.
3301000	3303000	They did experimenting.
3303000	3305000	I did abstracting
3305000	3307000	for 30 seconds.
3307000	3309000	But I did experimenting.
3309000	3311000	You can see pink.
3311000	3313000	I said algorithm building
3313000	3315000	is a high-level
3315000	3317000	computational thinking.
3317000	3319000	In post-test,
3319000	3321000	you can see they used
3321000	3323000	a lot of algorithm building.
3323000	3325000	OK.
3325000	3327000	In addition to
3327000	3329000	learning process and result,
3329000	3331000	I want to talk about
3331000	3333000	5-week class implementation.
3333000	3335000	In class design,
3335000	3337000	what can
3337000	3339000	I do?
3339000	3341000	I switch to
3341000	3343000	the teacher's role.
3343000	3345000	There are 4 practices.
3345000	3347000	This is 5-week data.
3347000	3349000	I followed
3349000	3351000	one group.
3351000	3353000	Lion, Tiger,
3353000	3355000	Bear, Cat.
3355000	3357000	Tiger.
3357000	3359000	You can see
3359000	3361000	what practices
3361000	3363000	and when they used
3363000	3365000	in 5-week class.
3365000	3367000	The main practices
3367000	3369000	are these 4.
3369000	3371000	In this class,
3371000	3373000	students get a working sheet.
3373000	3375000	They start planning
3375000	3377000	what they want to do.
3377000	3379000	They move on to coding.
3379000	3381000	You can see planning and coding
3381000	3383000	are intertwined.
3383000	3385000	It's hard to tell.
3385000	3387000	I give you a piece of paper.
3387000	3389000	You draw on it.
3389000	3391000	It's not reasonable.
3391000	3393000	Planning and coding
3393000	3395000	are in the same group.
3395000	3397000	They do the project together.
3397000	3399000	They need to discuss
3399000	3401000	what the project should look like.
3401000	3403000	What should I do?
3403000	3405000	After this stage,
3405000	3407000	there is a peer review.
3407000	3409000	They have a feedback sheet.
3409000	3411000	These 4 groups
3411000	3413000	give feedback to each other.
3413000	3415000	After getting feedback,
3415000	3417000	they revise the project.
3417000	3419000	The whole process
3419000	3421000	is 5-week project.
3421000	3423000	There are 5 projects
3423000	3425000	in a week.
3425000	3427000	They went through this process 5 times.
3427000	3429000	Planning, coding, revising.
3429000	3431000	It's repeated.
3431000	3433000	The total time
3433000	3435000	is here.
3435000	3437000	The data I analyzed
3437000	3439000	is 6.3 hours.
3439000	3441000	They are working together.
3441000	3443000	Sometimes,
3443000	3445000	they are not focusing.
3445000	3447000	I don't count these.
3447000	3449000	The data is 6.3 hours.
3451000	3453000	The graph on the right
3453000	3455000	shows the ratio
3455000	3457000	of these 4 practices
3457000	3459000	in 6.3 hours.
3459000	3461000	The blue and green
3461000	3463000	are common practices.
3463000	3465000	They spend a lot of time
3465000	3467000	discussing
3467000	3469000	what to put
3469000	3471000	and what to do.
3471000	3473000	The red is
3473000	3475000	the second time
3475000	3477000	debugging and testing.
3477000	3479000	These are the others.
3479000	3481000	You may ask
3481000	3483000	it's obvious.
3483000	3485000	Why do this?
3485000	3487000	When do they do
3487000	3489000	testing and experimenting?
3489000	3491000	This can be
3491000	3493000	connected with teaching.
3493000	3495000	When do you
3495000	3497000	give feedback to students?
3497000	3499000	When do you know
3499000	3501000	they are doing this?
3501000	3503000	This is
3503000	3505000	a time series example.
3505000	3507000	Planning and coding
3507000	3509000	are revising.
3509000	3511000	This is a segment.
3511000	3513000	It's 60 minutes per class.
3513000	3515000	I use 20 minutes
3515000	3517000	to explain.
3517000	3519000	There are 6 segments
3519000	3521000	in 1 minute.
3521000	3523000	A segment is 10 seconds.
3523000	3525000	A bigger one
3525000	3527000	is 30 seconds in a row.
3527000	3529000	There are 6 segments
3529000	3531000	in total.
3531000	3533000	The blue one
3533000	3535000	is from start to finish.
3535000	3537000	The 20-minute segment
3537000	3539000	spends a lot of time
3539000	3541000	experimenting and iterating
3541000	3543000	their ideas.
3543000	3545000	There are abstracting
3545000	3547000	and modularizing.
3547000	3549000	Algorithm building
3549000	3551000	doesn't happen completely.
3551000	3553000	It happens a little bit,
3553000	3555000	but not at the beginning.
3555000	3557000	It happens a lot
3557000	3559000	when revising.
3559000	3561000	This tells us
3561000	3563000	students need to spend
3563000	3565000	more time
3565000	3567000	to learn
3567000	3569000	at a higher level.
3569000	3571000	If you are a teacher
3571000	3573000	who is in a hurry,
3573000	3575000	for example,
3575000	3577000	it's hard to
3577000	3579000	reach the level
3579000	3581000	students want
3581000	3583000	in a team.
3583000	3585000	The stage of revising
3585000	3587000	is testing or debugging.
3587000	3589000	Students spend a lot of time
3589000	3591000	on this green bar.
3591000	3593000	They spend a lot of time
3593000	3595000	on testing or debugging.
3595000	3597000	As a teacher,
3597000	3599000	you can know
3599000	3601000	how to emphasize
3601000	3603000	the deeper level
3603000	3605000	when revising.
3605000	3607000	Do I have some
3607000	3609000	deep insights?
3609000	3611000	I can see
3611000	3613000	when they overlap.
3613000	3615000	Why do they overlap?
3615000	3617000	What did they do?
3617000	3619000	These are the
3619000	3621000	things you can discuss
3621000	3623000	in depth.
3623000	3625000	You can provide
3625000	3627000	a pattern to the teacher.
3627000	3629000	How do you apply
3629000	3631000	this pattern
3631000	3633000	to your teaching
3633000	3635000	and teaching plan?
3635000	3637000	There are too many things
3637000	3639000	to talk about.
3639000	3641000	I'm already over time.
3641000	3643000	Next,
3643000	3645000	I'd like to talk about
3645000	3647000	the main
3647000	3649000	elements and results.
3649000	3651000	As you can see,
3651000	3653000	it's a bit
3653000	3655000	complicated.
3655000	3657000	There are two main concepts.
3657000	3659000	I'd like to explain
3659000	3661000	the concept of
3661000	3663000	computational thinking
3663000	3665000	and the behavior
3665000	3667000	that can be observed.
3667000	3669000	How to assess
3669000	3671000	students' learning
3671000	3673000	is still a concept.
3673000	3675000	Do students learn
3675000	3677000	from this concept?
3677000	3679000	I'd like to start
3679000	3681000	from the perspective of practice.
3681000	3683000	What students do
3683000	3685000	can reflect
3685000	3687000	the concept of
3687000	3689000	computational thinking.
3689000	3691000	No one has
3691000	3693000	combined these concepts yet.
3693000	3695000	But what you think
3695000	3697000	and what you do
3697000	3699000	is not new in education.
3699000	3701000	Computational thinking
3701000	3703000	can be a breakthrough
3703000	3705000	in the future.
3705000	3707000	Next,
3707000	3709000	I'd like to talk about
3709000	3711000	the assessment
3711000	3713000	and how to improve
3713000	3715000	students' learning.
3715000	3717000	I'd like to
3717000	3719000	talk about
3719000	3721000	how to assess
3721000	3723000	students' learning
3723000	3725000	and practice
3725000	3727000	instead of
3727000	3729000	just giving them
3729000	3731000	a bunch of choices.
3731000	3733000	Finally,
3733000	3735000	I'd like to talk about
3735000	3737000	the ability of
3737000	3739000	computational thinking
3739000	3741000	not only for one person.
3741000	3743000	When you study in a group,
3743000	3745000	you can see
3745000	3747000	what I said
3747000	3749000	and who gave me
3749000	3751000	which opinion.
3751000	3753000	They are co-constructing
3753000	3755000	the experience and ability
3755000	3757000	of computational thinking.
3757000	3759000	They learn as a group
3759000	3761000	Next,
3761000	3763000	I'd like to talk about
3763000	3765000	the role of each student
3765000	3767000	in the learning
3767000	3769000	and cooperation.
3769000	3771000	What's the role of
3771000	3773000	each student
3773000	3775000	in the learning
3775000	3777000	of computational thinking?
3777000	3779000	For example,
3779000	3781000	one of the students
3781000	3783000	is the leader of the group.
3783000	3785000	How does he lead
3785000	3787000	and how does he do
3787000	3789000	computational thinking?
3789000	3791000	And how does
3791000	3793000	social behavior
3793000	3795000	intertwine with
3795000	3797000	computational thinking?
3797000	3799000	These are
3799000	3801000	the general direction
3801000	3803000	I'd like to focus on.
3803000	3805000	I'd like to focus on
3805000	3807000	the role of each student
3807000	3809000	in the group
3809000	3811000	and then discuss it
3811000	3813000	as a group.
3813000	3815000	Thank you.
3815000	3817000	Over time,
3817000	3819000	I won't talk too much.
3819000	3821000	Thank you for listening.
3821000	3823000	If you have any questions,
3823000	3825000	feel free to ask.
3829000	3831000	Thank you,
3831000	3833000	Joey, for sharing
3833000	3835000	your research.
3835000	3837000	Let's start
3837000	3839000	the Q&A.
3845000	3847000	I see a question.
3851000	3853000	Lin Hui has a question.
3853000	3855000	She'd like to ask
3855000	3857000	about Scratch
3857000	3859000	in Taiwan
3859000	3861000	and the students'
3861000	3863000	and teachers' reactions.
3863000	3865000	Is there a teacher
3865000	3867000	from Taiwan?
3867000	3869000	Personally,
3869000	3871000	I went to Taiwan last year
3871000	3873000	to attend a conference
3873000	3875000	on computer science education
3875000	3877000	in Kenting.
3877000	3879000	What I learned
3879000	3881000	was that Scratch
3881000	3883000	was widely used
3883000	3885000	in elementary school
3885000	3887000	in Taiwan
3887000	3889000	when I was
3889000	3891000	in the 6th grade.
3891000	3893000	You can start
3893000	3895000	the Q&A.
3895000	3897000	The way I see it,
3897000	3899000	it's very much
3899000	3901000	about programming.
3901000	3903000	I want kids to learn
3903000	3905000	programming.
3905000	3907000	Besides programming,
3907000	3909000	I don't care
3909000	3911000	about their artistic development
3911000	3913000	or creativity.
3913000	3915000	It's a little bit
3915000	3917000	against Scratch Team's
3917000	3919000	original intention.
3919000	3921000	Scratch Design Team
3921000	3923000	is one of
3923000	3925000	my current advisors.
3925000	3927000	I'm one of
3927000	3929000	the students
3929000	3931000	of our advisor.
3931000	3933000	So I continued
3933000	3935000	his original design.
3935000	3937000	That's what I heard.
3937000	3939000	I'm not sure if there are
3939000	3941000	Taiwanese students here.
3941000	3943000	What I know is that
3943000	3945000	the Ministry of Education
3945000	3947000	came up with a budget planning
3947000	3949000	in 2016.
3949000	3951000	This year,
3951000	3953000	they've been pushing
3953000	3955000	the budget planning
3955000	3957000	to the middle school level.
3957000	3959000	You can start
3959000	3961000	the Q&A.
3961000	3963000	Welcome to listen to your voice.
3963000	3965000	Another question is
3965000	3967000	if there is any difference
3967000	3969000	between individual project
3969000	3971000	and team learning
3971000	3973000	and the effect.
3973000	3975000	I think I need
3975000	3977000	to talk to
3977000	3979000	Ms. Hong.
3979000	3981000	I think this is a good question.
3981000	3983000	Why didn't I
3983000	3985000	do the research
3985000	3987000	on team learning?
3987000	3989000	The reason is
3989000	3991000	you don't need to compare.
3991000	3993000	No matter
3993000	3995000	whether it's programming,
3995000	3997000	individual learning
3997000	3999000	is always better than
3999000	4001000	team learning.
4001000	4003000	If I want to teach
4003000	4005000	a science concept today,
4005000	4007000	if I teach science
4007000	4009000	in a team,
4009000	4011000	if I test the results,
4011000	4013000	individual learning is always better.
4013000	4015000	You may find that
4015000	4017000	you need to focus
4017000	4019000	on learning.
4019000	4021000	The test is
4021000	4023000	your unique ability.
4023000	4025000	It saves time
4025000	4027000	if you learn by yourself.
4027000	4029000	Why is team learning important?
4029000	4031000	It can discuss
4031000	4033000	the application of
4033000	4035000	social skills
4035000	4037000	and learning.
4037000	4039000	The content knowledge
4039000	4041000	of the subject
4041000	4043000	will save time.
4043000	4045000	But the idea
4045000	4047000	is deeper
4047000	4049000	and broader
4049000	4051000	than learning by yourself.
4051000	4053000	I think the learning effect
4053000	4055000	can be seen
4055000	4057000	in 5 weeks
4057000	4059000	or in a short time.
4059000	4061000	Individual learning
4061000	4063000	is better.
4063000	4065000	But education depends on the long run.
4065000	4067000	In the long run,
4067000	4069000	what impact
4069000	4071000	individual learning has
4071000	4073000	has a lot to do with
4073000	4075000	new experience.
4075000	4077000	I argue that
4077000	4079000	in a team,
4079000	4081000	they can learn
4081000	4083000	what individuals can't.
4083000	4085000	To prove the value
4085000	4087000	of teamwork.
4087000	4089000	Thank you for your question.
4089000	4091000	I think it's important.
4091000	4093000	Is there any research?
4093000	4095000	Yes.
4095000	4097000	I can forward it to you.
4097000	4099000	Individual, indirect,
4099000	4101000	and complete cooperation.
4101000	4103000	The result is
4103000	4105000	what I just said.
4105000	4107000	Individual is better.
4107000	4109000	But in the long run,
4109000	4111000	team is better.
4115000	4117000	Hi, Joy. I'm Yoga.
4117000	4119000	Hi.
4119000	4121000	I can continue.
4121000	4123000	My question is a bit long.
4123000	4125000	I can type.
4125000	4127000	My main question is
4127000	4129000	to sum up
4129000	4131000	your computational thinking.
4131000	4133000	It's like
4133000	4135000	teaching students.
4135000	4137000	We cooperate
4137000	4139000	and use the same language
4139000	4141000	to solve a specific problem.
4141000	4143000	Is this
4143000	4145000	a process of
4145000	4147000	helping students
4147000	4149000	to socialize?
4149000	4151000	I have this question.
4151000	4153000	This is my main question.
4153000	4155000	I have this question.
4155000	4157000	It's like
4157000	4159000	your computational thinking
4159000	4161000	is different from
4161000	4163000	those of
4163000	4165000	computer science majors
4165000	4167000	or
4167000	4169000	seniors.
4169000	4171000	I guess
4171000	4173000	it's quite different.
4173000	4175000	I guess
4175000	4177000	it's quite different.
4177000	4179000	For K-12
4179000	4181000	or
4181000	4183000	junior high school students,
4183000	4185000	for K-12 or junior high school students,
4185000	4187000	we have an open course.
4187000	4189000	It's called
4189000	4191000	Computer Science Anyway.
4191000	4193000	It's a brand new course.
4193000	4195000	Although computer science has been developed
4195000	4197000	for 60 or 70 years,
4197000	4199000	it's a brand new course
4199000	4201000	for medical education.
4201000	4203000	it's a brand new course for medical education.
4203000	4205000	Although we have
4205000	4207000	a lot of materials,
4207000	4209000	a lot of materials,
4209000	4211000	such as textbooks,
4211000	4213000	such as textbooks,
4213000	4215000	these teaching methods
4215000	4217000	may not be suitable
4217000	4219000	for junior high school students.
4219000	4221000	So you want to
4221000	4223000	develop a set of
4223000	4225000	teaching methods suitable for junior high school students,
4225000	4227000	and a set of
4227000	4229000	ways to test
4229000	4231000	whether they really
4231000	4233000	learn something from it.
4233000	4235000	So this is
4235000	4237000	what your computational thinking
4237000	4239000	aims at.
4239000	4241000	Am I right?
4243000	4245000	Yes, to answer
4245000	4247000	your definition of CT.
4247000	4249000	The researchers
4249000	4251000	in this framework are all
4251000	4253000	from CS.
4253000	4255000	But you know,
4255000	4257000	they may have different opinions
4257000	4259000	in the same discipline.
4259000	4261000	I just showed you the round one.
4261000	4263000	I'm in the middle
4263000	4265000	and broad.
4265000	4267000	Computational thinking
4267000	4269000	needs to be completed under programming.
4269000	4271000	It only has a
4271000	4273000	beneficial definition for CS.
4273000	4275000	So I'm happy
4275000	4277000	if you have different opinions,
4277000	4279000	I'd like to hear
4279000	4281000	what your research
4281000	4283000	is doing.
4283000	4285000	If you are an educator,
4285000	4287000	how would you interpret it?
4287000	4289000	The second question,
4289000	4291000	I think it's right,
4291000	4293000	but there are too many developments.
4293000	4295000	We are still discussing
4295000	4297000	what computational thinking is.
4297000	4299000	The assessment
4299000	4301000	is a very
4301000	4303000	big topic.
4303000	4305000	A lot of NSF funding
4305000	4307000	focuses on the assessment.
4307000	4309000	So I dare not say
4309000	4311000	my research has reached the assessment.
4311000	4313000	Because I'm not
4313000	4315000	studying students'
4315000	4317000	ability to learn in the end.
4317000	4319000	In the process,
4319000	4321000	how can we reflect the current evaluation?
4321000	4323000	In the current evaluation,
4323000	4325000	most of the tests
4325000	4327000	are choice questions.
4327000	4329000	It's not a project-based
4329000	4331000	test.
4331000	4333000	This is a
4333000	4335000	very different field.
4335000	4337000	My theme
4337000	4339000	is to provide
4339000	4341000	a different idea
4341000	4343000	to the current field.
4343000	4345000	I've been emphasizing
4345000	4347000	collaboration is very important in CS.
4347000	4349000	But as for
4349000	4351000	how to apply
4351000	4353000	collaboration
4353000	4355000	in K-12,
4355000	4357000	this is a completely
4357000	4359000	different topic.
4359000	4361000	I've been saying this is very important,
4361000	4363000	but there is no research
4363000	4365000	or teacher who wants to try.
4365000	4367000	But I have to say,
4367000	4369000	it's a bit like digging a hole for yourself to jump.
4369000	4371000	In research,
4371000	4373000	we dig a hole for ourselves to jump
4373000	4375000	or get along with
4375000	4377000	ourselves in the hole.
4377000	4379000	It's very complicated.
4379000	4381000	What I've done so far
4381000	4383000	is just the beginning.
4383000	4385000	As for the question
4385000	4387000	you just mentioned,
4387000	4389000	is it really better to
4389000	4391000	learn in collaboration?
4391000	4393000	Is it really good for the student's
4393000	4395000	content knowledge?
4395000	4397000	Or is it better for the student's
4397000	4399000	other skills and
4399000	4401000	interpretation of the field?
4401000	4403000	These are all things that can be
4403000	4405000	studied and discussed in depth.
4405000	4407000	What I hope to provide is
4407000	4409000	a process of
4409000	4411000	looking at their
4411000	4413000	computational thinking
4413000	4415000	to reflect on
4415000	4417000	how I can improve
4417000	4419000	the design of
4419000	4421000	this course
4421000	4423000	to facilitate
4423000	4425000	collaborative learning.
4425000	4427000	I'm still studying
4427000	4429000	student learning,
4429000	4431000	but I hope to provide
4431000	4433000	some practical
4433000	4435000	help in the design of the course.
4435000	4437000	As for the assessment,
4437000	4439000	I can provide you
4439000	4441000	a paper that is
4441000	4443000	specifically for CT
4443000	4445000	assessment research.
4445000	4447000	You just mentioned
4447000	4449000	the so-called
4449000	4451000	collaborative learning.
4451000	4453000	I have a question.
4453000	4455000	What I heard
4455000	4457000	when I was listening
4457000	4459000	is that
4459000	4461000	we need to train students
4461000	4463000	to learn how to collaborate.
4463000	4465000	Collaborative learning is like
4465000	4467000	three or five people
4467000	4469000	studying a problem
4469000	4471000	and discussing it together.
4471000	4473000	This is collaborative learning.
4473000	4475000	The meaning of
4475000	4477000	collaborative learning is
4477000	4479000	that the three of us
4479000	4481000	learn a language together.
4481000	4483000	When someone writes a plan,
4483000	4485000	I can write it down
4485000	4487000	in this language.
4487000	4489000	This language can be
4489000	4491000	used by three or four people.
4491000	4493000	It can also be used by
4493000	4495000	a computer or other people
4495000	4497000	who have learned this language.
4497000	4499000	In the process,
4499000	4501000	three or five people
4501000	4503000	need to collaborate.
4503000	4505000	They just need to read the script
4505000	4507000	and know how to play the role.
4507000	4509000	This is the first question
4509000	4511000	about the process of
4511000	4513000	socialization.
4513000	4515000	Socialization is also
4515000	4517000	a process of learning
4517000	4519000	that provides a set of
4519000	4521000	basic languages,
4521000	4523000	such as sequence, loop,
4523000	4525000	and judgement.
4525000	4527000	This language structure
4527000	4529000	allows everyone
4529000	4531000	to complete a task
4531000	4533000	according to a script.
4533000	4535000	I said that
4535000	4537000	this is a process of
4537000	4539000	socialization.
4539000	4541000	Is this what you mean?
4551000	4553000	I think what you said
4553000	4555000	is a bit like what ESPAN
4555000	4557000	is talking about now.
4557000	4559000	What I see now is
4559000	4561000	how I learn
4561000	4563000	computational thinking
4563000	4565000	in the process of
4565000	4567000	team cooperation.
4567000	4569000	Just like what you said,
4569000	4571000	how do I learn
4571000	4573000	the concept of sequence?
4573000	4575000	I'm not just learning
4575000	4577000	by myself,
4577000	4579000	I'm learning
4579000	4581000	the concept of
4581000	4583000	the use of sequence
4583000	4585000	in a team.
4585000	4587000	I think it can be added
4587000	4589000	to a layer.
4589000	4591000	Collaborative
4591000	4593000	computational thinking
4593000	4595000	means that
4595000	4597000	you can design
4597000	4599000	a task
4599000	4601000	according to
4601000	4603000	your team.
4603000	4605000	This is a way of
4605000	4607000	cooperation,
4607000	4609000	not computational thinking.
4609000	4611000	Does this make sense?
4611000	4613000	Okay, thank you.
4613000	4615000	I got it.
4615000	4617000	Got it.
4617000	4625000	Stephen, can you
4625000	4627000	turn on the microphone?
4631000	4633000	It's okay if you don't.
4633000	4635000	Oh, hi.
4635000	4637000	I'd like to ask
4637000	4639000	when do you
4639000	4641000	recommend
4641000	4643000	elementary school students
4643000	4645000	to start learning
4645000	4647000	computational thinking?
4647000	4649000	Oh,
4649000	4651000	that's a good question.
4651000	4653000	When?
4653000	4655000	I think
4655000	4657000	I can go back to
4657000	4659000	the tour I just introduced.
4659000	4661000	For example,
4661000	4663000	Blocky and Scratch
4663000	4665000	were designed for
4665000	4667000	6-year-olds.
4667000	4669000	When you can start
4669000	4671000	learning,
4671000	4673000	you can start
4673000	4675000	developing
4675000	4677000	tangible programming.
4677000	4679000	It's especially for
4679000	4681000	2-3-year-olds.
4681000	4683000	When you're still
4683000	4685000	holding and exploring
4685000	4687000	the world,
4687000	4689000	you can
4689000	4691000	design a soft
4691000	4693000	thing.
4693000	4695000	When you connect
4695000	4697000	two things,
4697000	4699000	one of them will light up.
4699000	4701000	I'd say
4701000	4703000	most of my research is
4703000	4705000	on how to
4705000	4707000	promote
4707000	4709000	computational thinking
4709000	4711000	and programming.
4711000	4713000	I think
4713000	4715000	computational thinking
4715000	4717000	is beyond programming.
4717000	4719000	You can think
4719000	4721000	like a computer scientist
4721000	4723000	instead of
4723000	4725000	become a computer scientist.
4725000	4727000	Computational thinking
4727000	4729000	is based on CS.
4729000	4731000	When you connect
4731000	4733000	two things,
4733000	4735000	it looks like a hand,
4735000	4737000	but you can think
4737000	4739000	about the logic of coding.
4739000	4741000	If I connect
4741000	4743000	these two things,
4743000	4745000	the light bulb will light up.
4745000	4747000	For children,
4747000	4749000	many things
4749000	4751000	are developed
4751000	4753000	through
4753000	4755000	touching.
4755000	4757000	For example,
4757000	4759000	we train children
4759000	4761000	to react
4761000	4763000	to stimulations.
4763000	4765000	There are more and more
4765000	4767000	early-stage tools
4767000	4769000	to do this.
4769000	4771000	It's not just pressing
4771000	4773000	to sing.
4773000	4775000	When you
4775000	4777000	combine two things
4777000	4779000	into a complex pattern,
4779000	4781000	it will move
4781000	4783000	or sing a song.
4783000	4785000	When
4785000	4787000	you have
4787000	4789000	this resource,
4789000	4791000	it's free.
4791000	4793000	You can
4793000	4795000	let children
4795000	4797000	touch these things.
4797000	4799000	I don't think
4799000	4801000	it's a perfect age.
4801000	4803000	If you want to know more,
4803000	4805000	do you suggest
4805000	4807000	students
4807000	4809000	to learn this at school
4809000	4811000	or parents
4811000	4813000	to let children
4813000	4815000	learn this at school?
4815000	4817000	At school,
4817000	4819000	the US system
4819000	4821000	is based on
4821000	4823000	the state-by-state.
4823000	4825000	Indiana must have
4825000	4827000	CS this year.
4827000	4829000	I don't have
4829000	4831000	a complete opinion.
4831000	4833000	I think everyone is pushing
4833000	4835000	to get better as soon as possible.
4835000	4837000	I just mentioned
4837000	4839000	the world of AI.
4839000	4841000	I think everyone
4841000	4843000	will start to learn CS.
4843000	4845000	In Taiwan,
4845000	4847000	some primary schools
4847000	4849000	have already started to teach CS.
4849000	4851000	Thank you.
4855000	4857000	Thank you for your
4857000	4859000	questions.
4859000	4861000	We have two more
4861000	4863000	questions.
4865000	4867000	Thank you.
4867000	4869000	It's already 11.30
4869000	4871000	now.
4873000	4875000	I want to ask
4875000	4877000	a question.
4879000	4881000	Does computing
4881000	4883000	thinking
4883000	4885000	have anything
4885000	4887000	to do with math?
4887000	4889000	For example,
4889000	4891000	is it because
4891000	4893000	primary schools
4893000	4895000	are starting to teach
4895000	4897000	math?
4897000	4899000	Or does it have
4899000	4901000	nothing to do with math?
4901000	4903000	Are you talking about
4903000	4905000	the US or Taiwan?
4905000	4907000	I think
4907000	4909000	the US and Taiwan
4909000	4911000	are not limited to
4911000	4913000	general teaching.
4913000	4915000	Math and
4915000	4917000	computing thinking
4917000	4919000	are
4919000	4921000	a good
4921000	4923000	direction.
4923000	4925000	I don't think
4925000	4927000	math and
4927000	4929000	computing thinking
4929000	4931000	have anything to do
4931000	4933000	with science.
4933000	4935000	I just mentioned
4935000	4937000	that CS teachers
4937000	4939000	are very short.
4939000	4941000	Very few people
4941000	4943000	become a teacher
4943000	4945000	because of
4945000	4947000	CS.
4947000	4949000	In professional training,
4949000	4951000	CS teachers are
4951000	4953000	very short.
4953000	4955000	I haven't heard
4955000	4957000	this concept
4957000	4959000	being incorporated
4959000	4961000	into math.
4961000	4963000	But I think
4963000	4965000	we can find
4965000	4967000	a pattern.
4967000	4969000	For example,
4969000	4971000	we have to see
4971000	4973000	how computation
4973000	4975000	develops.
4975000	4977000	I don't see
4977000	4979000	anyone
4979000	4981000	doing overlap
4981000	4983000	between math and
4983000	4985000	computing thinking.
4985000	4987000	It depends on how
4987000	4989000	computing thinking
4989000	4991000	is applied in
4991000	4993000	different subjects
4993000	4995000	and contexts.
4995000	4997000	So far,
4997000	4999000	no one has
4999000	5001000	discussed
5001000	5003000	the overlap
5003000	5005000	between math and
5005000	5007000	computing thinking.
5007000	5009000	Are you in math?
5009000	5011000	Yes, if you're interested,
5011000	5013000	I think it's worth
5013000	5015000	doing.
5015000	5017000	If you can think of
5017000	5019000	a way to overlap
5019000	5021000	math and computing
5021000	5023000	thinking,
5023000	5025000	it would be a good
5025000	5027000	transition.
5027000	5029000	I see people
5029000	5031000	combining math and
5031000	5033000	computing thinking.
5033000	5035000	But if we can
5035000	5037000	find a way to
5037000	5039000	combine math and
5039000	5041000	computing thinking,
5041000	5043000	it would be a good
5043000	5045000	transition.
5045000	5047000	Thank you.
5047000	5049000	You're welcome.
5051000	5053000	Let's open
5053000	5055000	the last question.
5067000	5069000	Anyone?
5087000	5089000	If not,
5089000	5091000	please stay on
5091000	5093000	the platform
5093000	5095000	after the presentation.
5095000	5097000	I will
5097000	5099000	stop the recording
5099000	5101000	now.
5101000	5103000	Thank you.
